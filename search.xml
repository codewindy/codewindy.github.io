<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Redmi K40刷欧版miui</title>
      <link href="2021/04/18/Redmi-K40-miui-eu/"/>
      <url>2021/04/18/Redmi-K40-miui-eu/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="k40刷机教程"><a href="#k40刷机教程" class="headerlink" title="k40刷机教程"></a>k40刷机教程</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>新买了2个k40手机，一个寄回老家，一个自用顺便把三年前的iphone 8plus替换下来<a id="more"></a></li><li>因为大陆版本广告太多了重置后浪费好多时间去设置关闭广告以及浏览器默认广告没法去除等等因素就决定刷机</li><li>安卓手机比iPhone优势在信号强，电池待机久，但是屏幕和通知权限等做的不好<h1 id="二-步骤"><a href="#二-步骤" class="headerlink" title="二. 步骤"></a>二. 步骤</h1></li><li>实际刷了三次，前两次因为好多年没碰过安卓导致刷错了rom弄成转头了不过还在下载大陆rom刷回来了就是折腾浪费时间精力</li><li>按照以下参考链接教程<a href="https://www.yongchangguo.com/archives/RedMiFlushToEUAndRoot.html" target="_blank" rel="noopener">Redmi K40/POCO F3刷MIUI EU(欧洲版) 12.6+Root+大陆本土化套件选装</a></li><li>但是我这边装完magisk后本地化<code>mi pay</code>和<code>应用商店会</code>不兼容导致一直卡顿重启</li><li>效果图如下</li><li><img src="https://i.loli.net/2021/04/18/KE8Qcvi4ISfZRYp.jpg" alt="2521618712227_.pic.jpg"></li><li><img src="https://i.loli.net/2021/04/18/lBe6LZvEYfagOSc.jpg" alt="2531618712238_.pic.jpg"></li></ul><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1><ul><li><a href="https://m.apkpure.com/" target="_blank" rel="noopener">apkpure</a> 下载纯净apk</li><li><a href="https://www.yongchangguo.com/archives/RedMiFlushToEUAndRoot.html" target="_blank" rel="noopener">Redmi K40/POCO F3刷MIUI EU(欧洲版) 12.6+Root+大陆本土化套件选装</a></li><li><a href="https://www.miui.com/unlock/index.html" target="_blank" rel="noopener">解锁工具</a> 注意解锁需要绑定mi账号并且要等7 天</li><li><a href="https://xiaomi.eu/community/threads/21-4-7-8.60699/" target="_blank" rel="noopener">下载k40 rom</a></li><li><a href="https://github.com/topjohnwu/Magisk/releases" target="_blank" rel="noopener">安装magisk后修改boot.img得到magisk_patched-22100_DZXGd.img后</a> 执行<code>platform-tools-windows\fastboot.exe flash boot ..\images\root\magisk_patched-22100_DZXGd.img</code></li><li><a href="https://blog.minamigo.moe/archives/184" target="_blank" rel="noopener">大陆本土化套件熟悉</a></li><li><a href="https://minamigo-my.sharepoint.com/:f:/g/personal/koizumishouta_minamigo_onmicrosoft_com/EgLhpcA_G_5IugTq10F90r0BzUbaO7aHamxpZCUUgBgefg?e=VVvXXd" target="_blank" rel="noopener">大陆本土化套件安装，通过magisk的模块进行本地化根据提示安装下载导入到手机的0.71.zip</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Charles-Tips</title>
      <link href="2021/01/01/Charles-Tips/"/>
      <url>2021/01/01/Charles-Tips/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="配置Charles-抓包手机和电脑流量"><a href="#配置Charles-抓包手机和电脑流量" class="headerlink" title="配置Charles 抓包手机和电脑流量"></a>配置Charles 抓包手机和电脑流量</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>学习http和https的区别<a id="more"></a></li><li>钉钉app 找不到web端入口，且已购买的教程视频课程被禁止下载，通过抓包找到下载接口实现资源保存<h1 id="二-步骤"><a href="#二-步骤" class="headerlink" title="二. 步骤"></a>二. 步骤</h1></li><li>下载charles 4.6.1</li><li>点击<code>help =&gt;SSL Proxying =&gt; Install Charles Root Certificate安装根证书</code></li><li>注意点击trust并选择始终信任<br><img src="https://i.loli.net/2021/01/20/CB6srH8SYb5upcF.png" alt="image.png"></li><li>然后对在<code>SSL Proxying Settings里面配置对应的要抓取的https网站</code><br><img src="https://i.loli.net/2021/01/20/hXfjpol7Sg5VLxY.png" alt="image.png"><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1></li><li><a href="https://www.jianshu.com/p/14fdd1a2454a" target="_blank" rel="noopener">https://www.jianshu.com/p/14fdd1a2454a</a></li><li><a href="https://www.bilibili.com/video/BV1mQ4y1N7dn?p=1" target="_blank" rel="noopener">软件测试教程Charles抓包工具测试实战</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BaiduYunPan Downloader</title>
      <link href="2021/01/01/BaiduYunPanDownloader/"/>
      <url>2021/01/01/BaiduYunPanDownloader/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="百度云盘和-b站下载"><a href="#百度云盘和-b站下载" class="headerlink" title="百度云盘和 b站下载"></a>百度云盘和 b站下载</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>百度云下载很麻烦找了加速工具提高下载体验<a id="more"></a></li><li>在里面随便找一个能用的试试 <code>https://runine.cn/DuPan/</code></li><li>下载b站的视频教程工具<code>https://github.com/nICEnnnnnnnLee/BilibiliDown/releases</code><h1 id="二-参考"><a href="#二-参考" class="headerlink" title="二. 参考"></a>二. 参考</h1></li><li><a href="https://runine.cn/DuPan/" target="_blank" rel="noopener">https://runine.cn/DuPan/</a></li><li><a href="https://github.com/nICEnnnnnnnLee/BilibiliDown/releases" target="_blank" rel="noopener">BilibiliDown</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java-9-cms-gc</title>
      <link href="2020/12/06/java-9-cms-gc/"/>
      <url>2020/12/06/java-9-cms-gc/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Java中9种常见的CMS-GC问题分析与解决"><a href="#Java中9种常见的CMS-GC问题分析与解决" class="headerlink" title="Java中9种常见的CMS GC问题分析与解决"></a>Java中9种常见的CMS GC问题分析与解决</h1><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>主要针对 Hotspot VM 中“CMS + ParNew”组合的一些使用场景进行总结。重点通过部分源码对根因进行分析以及对排查方法进行总结，排查过程会省略较多，另外本文专业术语较多，有一定的阅读门槛，如未介绍清楚，还请自行查阅相关材料。<a id="more"></a></li><li><a href="https://tech.meituan.com/2020/11/12/java-9-cms-gc.html" target="_blank" rel="noopener">Java中9种常见的CMS GC问题分析与解决</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot-rabbitmq-tutorials</title>
      <link href="2020/11/20/springboot-rabbitmq-tutorials/"/>
      <url>2020/11/20/springboot-rabbitmq-tutorials/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li><code>springboot</code>项目整合<code>rabbitmq</code>基础代码实现系统间解耦合，削峰填谷<a id="more"></a><h1 id="二-原理"><a href="#二-原理" class="headerlink" title="二. 原理"></a>二. 原理</h1></li></ul><h2 id="死信队列-听上去像-消息“死”了-其实也有点这个意思，死信队列-是-当消息在一个队列-因为下列原因："><a href="#死信队列-听上去像-消息“死”了-其实也有点这个意思，死信队列-是-当消息在一个队列-因为下列原因：" class="headerlink" title="死信队列 听上去像 消息“死”了     其实也有点这个意思，死信队列  是 当消息在一个队列 因为下列原因："></a>死信队列 听上去像 消息“死”了     其实也有点这个意思，死信队列  是 当消息在一个队列 因为下列原因：</h2><ul><li>消息被拒绝（basic.reject/ basic.nack）并且不再重新投递 requeue=false</li><li>消息超期 (rabbitmq  Time-To-Live -&gt; messageProperties.setExpiration()) </li><li>队列超载<h1 id="三-实现"><a href="#三-实现" class="headerlink" title="三. 实现"></a>三. 实现</h1><h2 id="配置队列和exchange的绑定关系-RabbitmqConfig"><a href="#配置队列和exchange的绑定关系-RabbitmqConfig" class="headerlink" title="配置队列和exchange的绑定关系 RabbitmqConfig"></a>配置队列和exchange的绑定关系 RabbitmqConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codewindy.mongodb.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.map.MapUtil;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.common.utils.RabbitmqConstant;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codewindy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-11-09 10:55 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitmqConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* -------------------------------定义oder_queue order_exchange的绑定关系-----------------------------------------------*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"orderQueue"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">orderQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Object&gt; params = MapUtil.newHashMap(<span class="number">16</span>);</span><br><span class="line">        params.put(RabbitmqConstant.X_DEAD_LETTER_EXCHANGE, RabbitmqConstant.DLX_EXCHANGE_NAME);</span><br><span class="line">        params.put(RabbitmqConstant.X_DEAD_LETTER_ROUTIN_KEY, RabbitmqConstant.DLX_ROUTING_ORDER_CANCEL);</span><br><span class="line">        <span class="comment">//params.put(CommonConstant.X_EXPIRES,5000);</span></span><br><span class="line">        params.put(RabbitmqConstant.X_MAX_LENGTH, <span class="number">10</span>);</span><br><span class="line">        params.put(RabbitmqConstant.X_MESSAGE_TTL, <span class="number">5000</span>);</span><br><span class="line">        <span class="comment">//params.put(CommonConstant.X_MAX_PRIORITY,4);</span></span><br><span class="line">        <span class="keyword">return</span> QueueBuilder.durable(RabbitmqConstant.QUEUE_NAME).withArguments(params).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"orderExchange"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TopicExchange <span class="title">orderExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ExchangeBuilder.topicExchange(RabbitmqConstant.EXCHANGE_NAME).durable(<span class="keyword">true</span>).build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">orderTopicExchangeAndQueue</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @Qualifier(<span class="string">"orderExchange"</span>)</span> TopicExchange orderExchange,</span></span><br><span class="line"><span class="function">            @<span class="title">Qualifier</span><span class="params">(<span class="string">"orderQueue"</span>)</span> Queue orderQueue) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(orderQueue).to(orderExchange).with(RabbitmqConstant.ROUTING_KEY_NAME);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* -------------------------------定义死信队列dlx_oder_queue dlx_order_exchange的绑定关系----------------------------------*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"dlxOrderQueue"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">dlxOrderQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> QueueBuilder.durable(RabbitmqConstant.DLX_QUEUE_NAME).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"dlxOrderExchange"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TopicExchange <span class="title">dlxOrderExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ExchangeBuilder.topicExchange(RabbitmqConstant.DLX_EXCHANGE_NAME).durable(<span class="keyword">true</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">dlxOrderTopicExchangeAndQueue</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @Qualifier(<span class="string">"dlxOrderExchange"</span>)</span> TopicExchange dlxOrderExchange,</span></span><br><span class="line"><span class="function">            @<span class="title">Qualifier</span><span class="params">(<span class="string">"dlxOrderQueue"</span>)</span> Queue dlxOrderQueue) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(dlxOrderQueue).to(dlxOrderExchange).with(RabbitmqConstant.DLX_ROUTING_KEY_NAME);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="RabbitmqConstant-常量定义防止取错参数"><a href="#RabbitmqConstant-常量定义防止取错参数" class="headerlink" title="RabbitmqConstant 常量定义防止取错参数"></a>RabbitmqConstant 常量定义防止取错参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codewindy.common.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RabbitmqConstant</span> </span>&#123;</span><br><span class="line">    String  X_MESSAGE_TTL = <span class="string">"x-message-ttl"</span>;</span><br><span class="line">    String  X_EXPIRES = <span class="string">"x-expires"</span>;</span><br><span class="line">    String  X_MAX_LENGTH = <span class="string">"x-max-length"</span>;</span><br><span class="line">    String  X_MAX_PRIORITY = <span class="string">"x-max-priority"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 死信队列 交换机标识符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String  X_DEAD_LETTER_EXCHANGE = <span class="string">"x-dead-letter-exchange"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 死信队列交换机绑定键标识符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String  X_DEAD_LETTER_ROUTIN_KEY = <span class="string">"x-dead-letter-routing-key"</span>;</span><br><span class="line"></span><br><span class="line">    String DLX_EXCHANGE_NAME =<span class="string">"dlx_order_exchange"</span>;</span><br><span class="line">    String DLX_QUEUE_NAME =<span class="string">"dlx_order_queue"</span>;</span><br><span class="line">    String DLX_ROUTING_KEY_NAME =<span class="string">"dlx.order.#"</span>;</span><br><span class="line"></span><br><span class="line">    String DLX_ROUTING_ORDER_CANCEL =<span class="string">"dlx.order.cancel"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String EXCHANGE_NAME =<span class="string">"order_exchange"</span>;</span><br><span class="line">    String QUEUE_NAME =<span class="string">"order_queue"</span>;</span><br><span class="line">    String ROUTING_KEY_NAME =<span class="string">"order.#"</span>;</span><br><span class="line">    String ROUTING_ORDER_CANCEL =<span class="string">"order.cancel"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RabbitmqUtil-对rabbitmqTemplate封装"><a href="#RabbitmqUtil-对rabbitmqTemplate封装" class="headerlink" title="RabbitmqUtil 对rabbitmqTemplate封装"></a>RabbitmqUtil 对rabbitmqTemplate封装</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codewindy.mongodb.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.IdUtil;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.mongodb.service.impl.ConfirmCallbackServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.mongodb.service.impl.ReturnCallbackServiceImpl;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.MessageDeliveryMode;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.CorrelationData;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.connection.PublisherCallbackChannel;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codewindy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-11-09 11:28 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitmqUtil</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String exchange, String routingKey, Object msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 确保消息发送失败后可以重新返回到队列中</span></span><br><span class="line"><span class="comment">         * 注意：yml需要配置 publisher-returns: true</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        rabbitTemplate.setMandatory(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//rabbitTemplate.setMessageConverter(new Jackson2JsonMessageConverter());</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 消费者确认收到消息后，手动ack回执回调处理</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//rabbitTemplate.setConfirmCallback(confirmCallbackService);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 消息投递到队列失败回调处理</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">       <span class="comment">// rabbitTemplate.setReturnCallback(returnCallbackService);</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 发送消息</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        rabbitTemplate.convertAndSend(exchange, routingKey, msg,</span><br><span class="line">                message -&gt; &#123;</span><br><span class="line">                    message.getMessageProperties().setDeliveryMode(MessageDeliveryMode.PERSISTENT);</span><br><span class="line">                    <span class="comment">//message.getMessageProperties().setExpiration("5000");</span></span><br><span class="line">                    message.getMessageProperties().setContentEncoding(StandardCharsets.UTF_8.name());</span><br><span class="line">                    <span class="comment">//message.getMessageProperties().setPriority(4);</span></span><br><span class="line">                    <span class="keyword">return</span> message;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="keyword">new</span> CorrelationData(IdUtil.fastSimpleUUID()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        rabbitTemplate.setConfirmCallback(<span class="keyword">new</span> ConfirmCallbackServiceImpl());</span><br><span class="line">        rabbitTemplate.setReturnCallback(<span class="keyword">new</span> ReturnCallbackServiceImpl());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="生产者发送消息producer-业务代码"><a href="#生产者发送消息producer-业务代码" class="headerlink" title="生产者发送消息producer 业务代码"></a>生产者发送消息producer 业务代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqUtil.sendMessage(RabbitmqConstant.EXCHANGE_NAME,RabbitmqConstant.ROUTING_ORDER_CANCEL,<span class="string">"我是消息, i miss u"</span>);</span><br></pre></td></tr></table></figure><h2 id="消费者接收消息consumer-业务代码"><a href="#消费者接收消息consumer-业务代码" class="headerlink" title="消费者接收消息consumer 业务代码"></a>消费者接收消息consumer 业务代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codewindy.mysql;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.common.utils.RabbitmqConstant;</span><br><span class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.ExchangeTypes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Message;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codewindy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-11-09 11:42 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">        value = <span class="meta">@Queue</span>(name = RabbitmqConstant.DLX_QUEUE_NAME, durable = <span class="string">"true"</span>),</span><br><span class="line">        exchange = <span class="meta">@Exchange</span>(name = RabbitmqConstant.DLX_EXCHANGE_NAME,</span><br><span class="line">                type = ExchangeTypes.TOPIC,</span><br><span class="line">                ignoreDeclarationExceptions = <span class="string">"true"</span>),</span><br><span class="line">        key = &#123;RabbitmqConstant.DLX_ROUTING_ORDER_CANCEL&#125;</span><br><span class="line">))</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">messageHandler</span><span class="params">(String msg, Channel channel, Message message)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            log.info(<span class="string">"消费者收到消息：&#123;&#125;"</span>, msg);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//TODO 具体业务</span></span><br><span class="line">            <span class="comment">//int i = 1/0;</span></span><br><span class="line"></span><br><span class="line">            channel.basicAck(message.getMessageProperties().getDeliveryTag(), <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;  <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (message.getMessageProperties().getRedelivered()) &#123;</span><br><span class="line"></span><br><span class="line">                log.error(<span class="string">"消息已重复处理失败,拒绝再次接收..."</span>);</span><br><span class="line">                <span class="comment">// 拒绝消息</span></span><br><span class="line">                channel.basicReject(message.getMessageProperties().getDeliveryTag(), <span class="keyword">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                log.error(<span class="string">"消息即将再次返回队列处理..."</span>);</span><br><span class="line"></span><br><span class="line">                channel.basicNack(message.getMessageProperties().getDeliveryTag(), <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-docker-安装rabbitmq相关配置"><a href="#四-docker-安装rabbitmq相关配置" class="headerlink" title="四. docker 安装rabbitmq相关配置"></a>四. docker 安装rabbitmq相关配置</h1><h2 id="安装rabbitmq以及相关操作"><a href="#安装rabbitmq以及相关操作" class="headerlink" title="安装rabbitmq以及相关操作"></a>安装rabbitmq以及相关操作</h2><ul><li><code>sudo systemctl restart docker</code></li><li><code>docker pull rabbitmq:3.7.8-management</code></li><li><code>docker run -d --name rabbitmq3.8.9 -p 5672:5672 -p 15672:15672  --hostname rabbitmq  -e RABBITMQ_DEFAULT_VHOST=/ -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin 镜像id</code></li><li>docker ps 查看已启动的服务  <code>docker ps -a</code>查看所有</li><li><code>docker exec -it  容器id bash</code> 进入rabbitmq容器内部</li><li><code>rabbitmqctl reset</code> 重置服务</li><li><code>rabbitmqctl stop_app</code> 停止服务   <code>rabbitmqctl start_app</code> 启动服务<h1 id="五-参考"><a href="#五-参考" class="headerlink" title="五. 参考"></a>五. 参考</h1></li><li><a href="https://my.oschina.net/10000000000/blog/1626278" target="_blank" rel="noopener">springboot rabbitmq 之死信队列 延迟消费消息</a></li><li><a href="https://my.oschina.net/10000000000/blog/1624963" target="_blank" rel="noopener">springboot 集成rabbitmq</a></li><li><a href="https://github.com/codewindy/mac_soft/blob/master/rabbitmq_ppt.zip" target="_blank" rel="noopener">rabbitmq_ppt_reference</a></li><li><a href="https://github.com/codewindy/JavaTutorials" target="_blank" rel="noopener">JavaTutorials</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot-redis-tips</title>
      <link href="2020/11/20/springboot-redis-tips/"/>
      <url>2020/11/20/springboot-redis-tips/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li><code>springboot2.x</code> 之后默认redis客户端不是<code>jedis</code>而是<code>lettuce</code>但是在集群环境中如果有一个节点挂了就会导致服务不可用<a id="more"></a></li></ul><h1 id="二-解决"><a href="#二-解决" class="headerlink" title="二. 解决"></a>二. 解决</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Example 37. Enabling periodic cluster topology view updates</span><br><span class="line">RedisClusterClient clusterClient = RedisClusterClient.create(RedisURI.create(<span class="string">"localhost"</span>, <span class="number">6379</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ClusterTopologyRefreshOptions topologyRefreshOptions = ClusterTopologyRefreshOptions.builder()</span><br><span class="line">                                .enableAdaptiveRefreshTrigger(RefreshTrigger.MOVED_REDIRECT, RefreshTrigger.PERSISTENT_RECONNECTS)</span><br><span class="line">                                .adaptiveRefreshTriggersTimeout(<span class="number">30</span>, TimeUnit.SECONDS)</span><br><span class="line">                                .build();</span><br><span class="line"></span><br><span class="line">clusterClient.setOptions(ClusterClientOptions.builder()</span><br><span class="line">                                .topologyRefreshOptions(topologyRefreshOptions)</span><br><span class="line">                                .build());</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">clusterClient.shutdown();</span><br></pre></td></tr></table></figure><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1><ul><li><a href="https://www.colabug.com/2020/0107/6815444/" target="_blank" rel="noopener">redis整合letture自动拓扑更新</a></li><li><a href="https://juejin.cn/post/6844904039096778759" target="_blank" rel="noopener">SpringBoot2.X与redis Lettuce集成踩坑</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot-elk-6.5.4</title>
      <link href="2020/11/04/springboot-elasticsearch-6.5.4/"/>
      <url>2020/11/04/springboot-elasticsearch-6.5.4/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="springboot整合elk-并安装elasticsearch-analysis-ik分词器插件"><a href="#springboot整合elk-并安装elasticsearch-analysis-ik分词器插件" class="headerlink" title="springboot整合elk 并安装elasticsearch-analysis-ik分词器插件"></a>springboot整合elk 并安装elasticsearch-analysis-ik分词器插件</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>业务中需要使用<code>ik分词</code>进行文章关键字搜索来查询对应的数据<a id="more"></a><h1 id="二-步骤"><a href="#二-步骤" class="headerlink" title="二. 步骤"></a>二. 步骤</h1></li><li>在服务上首先安装使用docker和 docker-compose</li><li>根据最后面的docker-compose.yml拉取镜像创建服务器</li><li>修改服务器配置<blockquote><p>docker-compose up -d 启动</p><p>docker-compose logs -f 查看日志</p><p>sudo sysctl -w vm.max_map_count=262144  <strong>修改/etc/sysctl.conf 不然报错启动不来</strong></p></blockquote></li><li>安装分词器插件<blockquote><p><a href="http://tomcat01.qfjava.cn:81/elasticsearch-analysis-ik-6.5.4.zip" target="_blank" rel="noopener">http://tomcat01.qfjava.cn:81/elasticsearch-analysis-ik-6.5.4.zip</a> 加速下载包</p><p>执行命令安装 ./elasticsearch-plugin install  <a href="http://tomcat01.qfjava.cn:81/elasticsearch-analysis-ik-6.5.4.zip" target="_blank" rel="noopener">http://tomcat01.qfjava.cn:81/elasticsearch-analysis-ik-6.5.4.zip</a></p></blockquote></li><li><code>注意安装分词插件后需要重启服务器才能生效</code></li></ul><hr>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.1"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">elasticsearch:</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">daocloud.io/library/elasticsearch:6.5.4</span></span><br><span class="line"><span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">container_name:</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line"><span class="attr">kibana:</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">daocloud.io/library/kibana:6.5.4</span></span><br><span class="line"><span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">container_name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="number">5601</span><span class="string">:5601</span></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">elasticsearch_url=http://10.211.55.8:9200</span></span><br><span class="line"><span class="attr">depends_on:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">elasticsearch</span></span><br></pre></td></tr></table></figure><hr><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1><ul><li><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">elasticsearch-analysis-ik</a></li><li><a href="https://www.runoob.com/docker/docker-compose.html" target="_blank" rel="noopener">docker和docker-compose安装</a></li><li><a href="https://rstyro.github.io/blog/2020/09/10/Elasticsearch7%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener">Elasticsearch7使用详解</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每周跑一次</title>
      <link href="2020/08/24/running-once-a-week/"/>
      <url>2020/08/24/running-once-a-week/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="每周跑一次5km"><a href="#每周跑一次5km" class="headerlink" title="每周跑一次5km"></a>每周跑一次5km</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>年纪越来越大了，身体也有点肥胖起来了尤其是肚子，还是日常运动量不足导致的，所以需要加强体能训练</li><li>2019年年底体重还是69kg左右，疫情后的现在体重稳定在72kg左右，的确随身携带着<code>游泳圈</code>也增加病症的风险<a id="more"></a></li></ul><h1 id="二-实践"><a href="#二-实践" class="headerlink" title="二. 实践"></a>二. 实践</h1><ul><li><p>一般喜欢周末四处瞎游荡，一走就是好几公里或10几公里，但是并不会消耗太多的脂肪反而大腿更粗了</p></li><li><p>有氧运动里面打篮球就排除了，因为个子矮也没多少场地，如果剧烈运动反而容易伤到脚踝和眼睛</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2020-10-11美年大健康体检报告</span><br><span class="line">甲状腺结节-&gt;喝夏枯草颗粒</span><br><span class="line">心率慢</span><br><span class="line">胆红素偏高</span><br><span class="line">尿素高</span><br><span class="line">肝功能受损-&gt;那段时间经常加班熬夜</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>最终选择每周跑步5km选择松软的专用跑道对膝盖的伤害会有所缓解，但是千万不要过量不然就适得其反了，我也是有过教训多休养一段时间身体会自然恢复的</p></li><li><p>从2020年5月左右基本做到了坚持每周一次的运动量，其实 <strong><font style="color:black; background:yellow"> 保持身体健康本身就是一项重要的投资，健康是1，其余的才是0，最后还是贵在坚持和自律</font></strong></p></li><li><p>截止到2021年其实跑步并不会让自己体重减下来可能是自己方法不对，但至少出汗后舒服了很多，其实跑多了也会伤及膝盖，后续要加强体能核心锻炼</p></li><li><p><img src="https://i.loli.net/2020/08/24/BfzRtqi6esDaJkH.png" alt="IMG_9188.PNG"></p></li><li><p><img src="https://i.loli.net/2020/08/24/eYvyZDRxTGJAtjg.png" alt="IMG_9194.PNG"></p></li><li><p><img src="https://i.loli.net/2020/08/24/k834c1hJsbqPxyw.png" alt="IMG_9189.PNG"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习理财和基金投资</title>
      <link href="2020/07/04/Investment-Funds/"/>
      <url>2020/07/04/Investment-Funds/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Investment-Funds"><a href="#Investment-Funds" class="headerlink" title="Investment Funds"></a>Investment Funds</h2><ul><li>随着自己快奔三了和身边同事都有在理财所以自己也关注和学习<a id="more"></a><h1 id="一-复盘"><a href="#一-复盘" class="headerlink" title="一. 复盘"></a>一. 复盘</h1></li><li><a href="https://upsort.com/s/rank" target="_blank" rel="noopener">https://upsort.com/s/rank</a> 关注每天前10</li><li><a href="https://upsort.com/" target="_blank" rel="noopener">https://upsort.com/</a> 关注北向资金的动向</li><li><a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MjM5MjAxNTE4MA==&scene=124#wechat_redirect" target="_blank" rel="noopener">招财大牛猫</a></li><li>从小培育理财思维,收益10个点就半仓止盈</li><li><font style="color:black; background:yellow">放水无熊市</font> 股市赚央行放水的钱 公司盈利和低吸高抛的钱 资产按1/3比例配置</li><li>普通散户理财最大的优势在于 <strong>耐心和时间成本</strong> 前提是要<strong>提前埋伏好对的低估标的物</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> 豪华邮轮撞冰山 买股票也只买低市盈率的蓝筹股, 比如招商银行, 平安之类的.</span><br><span class="line"> 节假日后必跌,谨慎乐观的态度重点关注流动性趋势的变化 等各大机构和券商暴涨之后在空仓</span><br><span class="line"> 投资理财基金 <span class="number">2900</span>点就可以考虑跑路了</span><br><span class="line"> 买房新房第一次<span class="number">18</span>年 <span class="number">10</span>年旧房</span><br><span class="line"> 药茅和酱茅，慢熊市里拿着稳稳的。再加上纸茅、电茅、泥茅、真茅。</span><br><span class="line">  理性控制基金仓位加仓支付时需要知道这笔交易能接受亏损多少钱</span><br><span class="line">  购买比特币学习视频以及港股美股</span><br><span class="line">  买基金分<span class="number">20</span>等分定期按比例定投, 不要一次性满仓, 基金赚的是未来的钱</span><br><span class="line">  周三无论涨跌不加仓 一般周四还会跌</span><br><span class="line"> </span><br><span class="line">  学会股票/基金理财投资自己 看基金成长性和波动性低位入仓</span><br><span class="line">  坚持每周健身锻炼计划</span><br><span class="line">  新增固定资产提高被动收入</span><br><span class="line"></span><br><span class="line"><span class="comment">// 茅20指数大蓝筹股</span></span><br><span class="line">贵州茅台、五粮液、恒瑞医药、迈瑞医疗、美的集团、</span><br><span class="line">格力电器、长江电力、海螺水泥、海天味业、招商银行、</span><br><span class="line">宁德时代、牧原股份、中国国旅、药明康德、爱尔眼科、</span><br><span class="line">三一重工、万华化学、智飞生物、长春高新，中国平安</span><br><span class="line"></span><br><span class="line">  每年过年期间暴跌到<span class="number">2600</span>-<span class="number">2700</span>点入场基金 及时止盈 <span class="number">2440</span></span><br><span class="line">  立讯精密 三一重工 茅台 平安 医药板块</span><br><span class="line">  多停下手机和玩乐静心思考复盘失败过程 熟悉工作中有价值的业务</span><br><span class="line">  第十一天视频观看长投温度 定期不定额 设置定投不同基金投资提醒</span><br><span class="line">  不要加入自我主观判断 克服贪婪和恐惧 投资收益复利在利用 确定每个月投资金额<span class="number">500</span>元  确定投资基数  最低温度差》<span class="number">5</span>度就切换指数基金 〉<span class="number">50</span>度全部卖出</span><br><span class="line">  闲钱长期投资, 资产配置少亏少赚, 每年资产动态在平衡<span class="number">50</span>%半仓策略</span><br><span class="line">    <span class="comment">// 计算个人资产负债表和理财投入比例</span></span><br><span class="line">    （存量+增量的钱 ）*（<span class="number">100</span>-年龄）= <span class="number">10877</span></span><br><span class="line">    （存量+增量的钱 ）*（<span class="number">100</span>-<span class="number">25</span>）%= <span class="number">11175</span>每月投资金额</span><br><span class="line">    <span class="number">150000</span>-<span class="number">4000</span>*<span class="number">3</span> = 存量资金 /<span class="number">20</span>个月= <span class="number">6900</span></span><br><span class="line">    <span class="number">12000</span>-<span class="number">4000</span>=<span class="number">8000</span> 增量资金/月</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-收益"><a href="#二-收益" class="headerlink" title="二. 收益"></a>二. 收益</h1><ul><li>其实投资基金过程中主要还是平衡好心态在贪婪和恐惧中选择自己能承受的亏损额度</li><li>股市的本质 <font style="color:black; background:yellow">解决企业的融资问题 能值得投资的只有5%</font> 4.19暴跌</li><li>历史规律 <strong>周四定投指数基金，一般周四都会跌的</strong></li><li><strong>及时反思复盘交易后的经历总结</strong>,其实这周踏空提前清仓了导致收益不高，心态有的奔溃的确要好好反思一下<br><img src="https://i.loli.net/2020/07/04/HX8hl4UBtyZNP5e.png" alt="11593845185_.pic_hd.jpg"><br><img src="https://i.loli.net/2020/07/05/GkKzj5VO1oI2mp8.jpg" alt="331593922496_.pic.jpg"></li><li><strong>茅20每隔三个月更新</strong></li><li><img src="https://i.loli.net/2020/09/08/XxbohLlpCuiwPZQ.png" alt="81599576577_.pic_hd.jpg"></li><li>目前从盈利6600 到现在20200908截止浮亏4000多，这个8-9月之间持续亏损了1w块钱，心态有点炸了，就当韭菜先交学费了，不知道后续会是什么情况，不过有的时候一直加仓一直跌到现在没子弹了，就很被动导致亏损增大</li><li><img src="https://i.loli.net/2021/01/24/zxUAX2rdSMZNJCa.png" alt="景顺长城新兴成长混合_沪深300_易方达蓝筹精选混合型证券投资基金_基金对比_20210124_163003.png"></li><li>截止目前时间20210101 <code>算了一下如果2020年一直拿着2800-2600买的基金到现在同期沪深300是27%的收益, 我在收益5.8%卖了那个时候19%的整体收益赚了4k多一直拿到现在估计有42%的收益本金1.6w的话收益是6800左右, 实际情况就是我7月份连续3天涨停10%/天的踏空快速拉升, 追高医药暴跌40%补仓到现在已经12w多了实际浮盈1k多，且不考虑到年前花的1k买衣服和请吃饭发红包和理财费800块等，如果真止盈交割还存在0.5%的手续费起码600多，总体来看实际是亏钱的. 争取2021上半年清仓吧！</code></li><li>截止时间<code>2021-01-21</code> 半导体和医药板块走强然后从<code>2020-11-29</code>开始一直到现在尤其是元旦后的那些天已经回到了累计1w多收益，恰好今天是周四于是昨天清仓了虽然今天医药板块还是有3个点的涨幅少了3k的收益但还是要坚持自己的交易体系，现在只留下了券商和红利etf指数一共 2w也不会担心市场波动了，实际到了2021-01-22截止医药板块又涨了8个点踏空5600，但是半导体也亏了，不过都清空了也就没啥好埋冤的，耐心等待下次的机会吧!<br><img src="https://i.loli.net/2021/01/21/roAtmZ1KLeVWH3D.png" alt="IMG_0743.PNG"><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1></li><li><a href="https://mednoter.com/two-rules-for-investment.html" target="_blank" rel="noopener">交易纪律</a></li><li><a href="https://www.mg21.com/guide/?p=6309" target="_blank" rel="noopener">“新印”的21万亿元人民币，都被谁拿走了</a></li><li><a href="https://www.cs.jhu.edu/~grant/investment.html" target="_blank" rel="noopener">中国投资者如何投资美国证券市场</a></li><li><a href="https://xueqiu.com/S/HKHSAHP" target="_blank" rel="noopener">恒生AH股溢价指数(HK:HSAHP)</a> AH溢价指数&lt;100的时候可以满仓干</li><li><a href="http://gu.sina.cn/fx/hq/quotes.php?code=HKDCNY&from=wap" target="_blank" rel="noopener">港元兑人民币即期汇率 </a> 港元兑人民币</li><li><a href="https://www.v2ex.com/t/731669" target="_blank" rel="noopener">https://www.v2ex.com/t/731669</a></li><li><a href="https://www.v2ex.com/t/731831" target="_blank" rel="noopener">https://www.v2ex.com/t/731831</a></li><li><a href="https://codewindy.github.io/efunds/28Plan-Of-Life.pdf">28 Plan_Of_Life</a> 理财笔记汇总</li><li><a href="http://pdf.dfcfw.com/pdf/H3_AP201906261336478343_1.pdf" target="_blank" rel="noopener">恒大研究院-任泽平</a></li><li><a href="https://www.htsec.com/jfimg/colimg/upload/20200609/85201591667410913.pdf" target="_blank" rel="noopener">海通证券宏观经济</a></li><li><a href="https://xueqiu.com/4864403211" target="_blank" rel="noopener">会空仓的祖师爷</a> 空仓也是一种操作</li><li><a href="https://wws.lanzous.com/i6UMXeawtmh" target="_blank" rel="noopener">指数基金投资从入门到精通pdf</a></li><li><a href="https://www.lixinger.com/analytics/fund/jj/260108/260108/detail/fund-compare?selected-index-ids=1000000000300&start-date=2011-01-24&end-date=2021-01-24&compare-stock-ids=3000000005827" target="_blank" rel="noopener">理杏仁</a> <strong>景顺长城新兴成长混合_沪深300_易方达蓝筹精选混合型证券投资基金_基金对比以及查看上海机场</strong></li><li><a href="https://user.guancha.cn/main/content?id=355227" target="_blank" rel="noopener">72法则</a></li><li><a href="https://rabt.gitee.io/funds/docs/dist/index.html#/Download" target="_blank" rel="noopener">基金助手插件</a></li><li><a href="https://www.htsec.com/ChannelHome/2016102402/index.shtml" target="_blank" rel="noopener">海通证券的研报</a></li><li><a href="https://mp.weixin.qq.com/s/TzLhmZL3oqgKiP8QvlbSYw" target="_blank" rel="noopener">十问美债收益率</a></li><li><a href="https://mp.weixin.qq.com/s/cWf-1HaQUEMHPkxOSA8tXA" target="_blank" rel="noopener">易方达张坤投资逻辑</a></li><li><a href="https://i.loli.net/2021/04/10/lEveRMrVgnhzI7T.jpg" target="_blank" rel="noopener">深圳房子投资标的物 微信图片_20201115222106_66w_75m2.jpg</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> funds </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bug汇总</title>
      <link href="2020/07/04/Squashes-Bugs/"/>
      <url>2020/07/04/Squashes-Bugs/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Squashes-Bug"><a href="#Squashes-Bug" class="headerlink" title=" Squashes  Bug"></a> Squashes  Bug</h2><h1 id="一-需要注意⚠️的问题"><a href="#一-需要注意⚠️的问题" class="headerlink" title="一. 需要注意⚠️的问题"></a>一. 需要注意⚠️的问题</h1><ul><li>因为八进制导致的问题，开发中尽量使用String来定义code变量<a id="more"></a></li><li>数据库字段和代码编写的过程中多注意 <font color="red">数据可能包含多余的空格</font>导致的问题</li><li>在前端传时间参数在后台需要进行处理TimeZone时区的问题</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Integer code =<span class="number">001001</span>;</span><br><span class="line"><span class="comment">// 结果确是 被转换成8进制code = 513</span></span><br><span class="line">System.out.println(<span class="string">"code = "</span> + code);</span><br><span class="line"><span class="comment">// 引入hutool依赖</span></span><br><span class="line">DateUtil.beginOfDay(startDate);</span><br><span class="line">DateUtil.endOfDay(endDate);</span><br></pre></td></tr></table></figure><ul><li><font color="blue">maven依赖项目common模块</font> 没有deploy到仓库, 导致打包的应用有代码没更新出错</li><li><a href="https://m.jb51.net/article/196376.htm" target="_blank" rel="noopener"><strong>idea out build目录区别以及启动后代码和配置更新问题</strong> </a> </li><li>开发规范 spotbugs p3c插件</li><li><a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md" target="_blank" rel="noopener">angular.js 开发提交规范 </a><code>git commit guidelines</code></li><li>需求串讲责任人开发</li><li>1990年时间查询差1小时问题GMT+8</li><li>harbor rancher chart配置</li><li>sql 隐式转换int str不走索引</li><li>requestParam 不能用post请求</li><li><a href="https://nyimac.gitee.io/2020/12/10/URL%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B5%81%E7%A8%8B/" target="_blank" rel="noopener">一次web请求触发了哪些操作</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 版本间区别</title>
      <link href="2020/05/18/Linux-kernel-diff/"/>
      <url>2020/05/18/Linux-kernel-diff/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Linux-kernel-diff"><a href="#Linux-kernel-diff" class="headerlink" title="Linux kernel diff"></a>Linux kernel diff</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>Linux Kernel 各版本间的区别和特性<a id="more"></a></li></ul><h1 id="二-参考"><a href="#二-参考" class="headerlink" title="二. 参考"></a>二. 参考</h1><ul><li><a href="https://www.cnblogs.com/tcicy/p/8461344.html" target="_blank" rel="noopener">Linux 2.6-5.x区别</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> kernel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RouterOS 常用配置优化和安全加固</title>
      <link href="2020/04/18/RouterOS-Optimized/"/>
      <url>2020/04/18/RouterOS-Optimized/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="RouterOS-Optimized"><a href="#RouterOS-Optimized" class="headerlink" title="RouterOS-Optimized"></a>RouterOS-Optimized</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>软路由系统ros安装完后默认会开启很多服务如ssh web ftp等，同时也带来了被攻击的风险，我们需要优化相关的配置<a id="more"></a></li></ul><h1 id="二-解决"><a href="#二-解决" class="headerlink" title="二. 解决"></a>二. 解决</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将默认用户名admin更改为其他名称</span></span><br><span class="line">/user set 0 name=myros</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置高强度的密码(红色字体为密码请自行更改)</span></span><br><span class="line">/user set 0 password=“d*2bBsweUBe3@”</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置admin用户允许通过某个IP地址进行登陆(这里允许设置单个IP或多个IP也可以是IP段)</span></span><br><span class="line">/user set 0 allowed-address=192.168.88.0/24</span><br><span class="line"><span class="meta">#</span><span class="bash"> 只保留安全的服务</span></span><br><span class="line">/ip service disable telnet,f​​tp,www,api,api-ssl</span><br><span class="line">⚠️注意：该操作会禁用Telnet，FTP，WWW，API，API-SSL</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改默认端口，这将立即停止大多数随机SSH暴力登录尝试</span></span><br><span class="line">/ip service set ssh port=220</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置Winbox允许登陆的网段</span></span><br><span class="line">/ip service set winbox address=192.168.88.0/24</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用mac-telnet服务</span></span><br><span class="line">/tool mac-server set allowed-interface-list=none</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用mac-winbox服务</span></span><br><span class="line">/tool mac-server mac-winbox set allowed-interface-list=none</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用mac-ping服务</span></span><br><span class="line">/tool mac-server ping set enabled=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 邻居发现</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MikroTik邻居发现协议用于显示和识别网络中的其他MikroTik设备，禁用所有接口上的邻居发现</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用IPv4 的邻居发现协议</span></span><br><span class="line">/ip neighbor discovery-settings set discover-interface-list=none</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用IPv6 的邻居发现协议</span></span><br><span class="line">/ipv6 nd set [find] disabled=yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> 带宽服务器用于测试两个MikroTik路由器之间的吞吐量，请在测试后禁用它。</span></span><br><span class="line">/tool bandwidth-server set enabled=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> DNS缓存</span></span><br><span class="line">/ip dns set allow-remote-requests=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置更安全的SSH访问，打开SSH强加密</span></span><br><span class="line">/ip ssh set strong-crypto=yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 Proxy，Socks代理</span></span><br><span class="line">/ip proxy set enabled=no</span><br><span class="line">/ip socks set enabled=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> MikroTik UPnP服务（通用即插即用协议）</span></span><br><span class="line">/ip upnp set enabled=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> MikroTik自带的DDNS服务器（动态域名解析）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果不是使用的话请用以下命令禁用</span></span><br><span class="line">/ip cloud set ddns-enabled=no update-time=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 某些型号的RouterBOARD有LCD模块用于信息显示。</span></span><br><span class="line">/lcd set enabled=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果你的路由器不提供VPN服务，请用以下命令关闭VPN</span></span><br><span class="line">/interface l2tp-server server set enabled=no</span><br><span class="line">/interface pptp-server server set enabled=no</span><br><span class="line">/interface sstp-server server set enabled=no</span><br><span class="line">/interface ovpn-server server set enabled=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用在设备上使用Radius进行授权</span></span><br><span class="line">/user aaa set use-radius=no</span><br><span class="line"><span class="meta">#</span><span class="bash"> ⚠️⚠️⚠️⚠️移除操作请慎用</span></span><br><span class="line">/radius remove numbers=[/radius find]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 清空<span class="built_in">log</span></span></span><br><span class="line">/system logging action set memory memory-lines=1</span><br><span class="line">/system logging action set memory memory-lines=1000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/interface/wireless/export         </span><br><span class="line"><span class="meta">#</span><span class="bash"> jul/08/2020 22:19:41 by RouterOS 7.0beta8</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> software id = xxx</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> model = RBD52G-5HacD2HnD</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> serial number = xxx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置ntp服务器同步</span></span><br><span class="line">/system ntp client</span><br><span class="line">set enabled=yes</span><br><span class="line">/system ntp client servers</span><br><span class="line">add address=139.199.215.251 </span><br><span class="line"><span class="meta">#</span><span class="bash"> 203.107.6.88 alibaba</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启dhcp 服务器</span></span><br><span class="line">/ip dhcp-server</span><br><span class="line">add address-pool=dhcp disabled=no interface=bridge1 lease-time=1h name=dhcp1</span><br><span class="line">/ip dhcp-server network</span><br><span class="line">add address=192.168.2.0/24 gateway=192.168.2.2 netmask=24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 优化hap ac2无线参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> C- is center of frequency e - is extension channel   example : frequency is 5100 and <span class="keyword">in</span> eCee will be see (5080<span class="_">-e</span>,5100-C,5120<span class="_">-e</span>,5140<span class="_">-e</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fragmentation-threshold命令用来配置指定射频模板中的报文分段门限参数。缺省情况下，报文分段门限参数为2346Byte。应用场景配置合理的报文分段门限参数可以提高信道带宽的利用率。报文分段门限的设置需要用户根据实际情况进行选择，根据目前的发展趋势，建议用户采用较大值的门限。当报文分段门限设置过小时，报文就被分为多段传输，而在无线传输中，每传送一次都有较大的额外开销，因此信道利用率低,当报文分段门限设置过大时，长报文就不容易被分段，导致传输的时间长，出错的概率大，而一旦出错就要重传，因此会造成信道带宽的浪费。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ts-cts模式：当AP向某个客户端发送数据的时候，AP会向客户端发送一个RTS报文，这样在AP覆盖范围内的所有设备在收到RTS后都会在指定的时间内不发送数据。目的客户端收到RTS后，发送一个CTS报文，这样在该客户端覆盖范围内所有的设备都会在指定的时间内不发送数据。使用rts-cts方式实现冲突避免需要发送两个报文，报文开销较大。</span></span><br><span class="line">/interface wireless</span><br><span class="line">set [ find default-name=wlan1 ] country=china mode=ap-bridge ssid=tpy wireless-protocol=802.11</span><br><span class="line">/interface wireless security-profiles</span><br><span class="line">set [ find default=yes ] authentication-types=wpa2-psk eap-methods="" group-key-update=1h mode=dynamic-keys supplicant-identity=MikroTik \</span><br><span class="line">    wpa-pre-shared-key=a1234567 wpa2-pre-shared-key=a1234567</span><br><span class="line">add authentication-types=wpa2-psk disable-pmkid=yes eap-methods="" group-key-update=1h mode=dynamic-keys name=eda supplicant-identity="" \</span><br><span class="line">    wpa-pre-shared-key=a1234567 wpa2-pre-shared-key=a1234567</span><br><span class="line">/interface wireless</span><br><span class="line">set [ find default-name=wlan2 ] adaptive-noise-immunity=ap-and-client-mode band=5ghz-onlyac channel-width=20/40/80mhz-eeCe country=malaysia disabled=no \</span><br><span class="line">    distance=indoors frequency=5300 hw-fragmentation-threshold=2346 hw-protection-mode=rts-cts installation=indoor keepalive-frames=disabled mode=\</span><br><span class="line">    ap-bridge multicast-buffering=disabled multicast-helper=full security-profile=eda ssid=eda wireless-protocol=802.11 wps-mode=disabled</span><br><span class="line">/interface wireless nstreme</span><br><span class="line">set wlan2 enable-polling=no</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> masquerade NAT 地址转换</span></span><br><span class="line">/ip firewall nat</span><br><span class="line">add action=masquerade chain=srcnat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 支持Wi-Fi隐藏</span></span><br><span class="line">[admin@jd] &gt; interface/wireless/export </span><br><span class="line"><span class="meta">#</span><span class="bash"> sep/27/2020 22:17:52 by RouterOS 7.1beta2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> software id = U01C-6QKJ</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> model = RBD52G-5HacD2HnD</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> serial number = CB390C02DA3C</span></span><br><span class="line">/interface wireless</span><br><span class="line">set [ find default-name=wlan1 ] country=china mode=ap-bridge ssid=tpy \</span><br><span class="line">    wireless-protocol=802.11</span><br><span class="line">/interface wireless security-profiles</span><br><span class="line">set [ find default=yes ] authentication-types=wpa2-psk eap-methods="" \</span><br><span class="line">    group-key-update=1h mode=dynamic-keys supplicant-identity=MikroTik \</span><br><span class="line">    wpa-pre-shared-key=a1234567 wpa2-pre-shared-key=a1234567</span><br><span class="line">add authentication-types=wpa2-psk disable-pmkid=yes eap-methods="" \</span><br><span class="line">    group-key-update=1h mode=dynamic-keys name=eda supplicant-identity="" \</span><br><span class="line">    wpa-pre-shared-key=a1234567 wpa2-pre-shared-key=wifipwd</span><br><span class="line">/interface wireless</span><br><span class="line">set [ find default-name=wlan2 ] adaptive-noise-immunity=ap-and-client-mode \</span><br><span class="line">    band=5ghz-onlyac channel-width=20/40/80mhz-eeCe country=malaysia \</span><br><span class="line">    disabled=no distance=indoors frequency=5300 hide-ssid=yes \</span><br><span class="line">    hw-fragmentation-threshold=2346 hw-protection-mode=rts-cts installation=\</span><br><span class="line">    indoor keepalive-frames=disabled mac-address=44:F9:71:8F:74:D9 mode=\</span><br><span class="line">    ap-bridge multicast-buffering=disabled multicast-helper=full \</span><br><span class="line">    security-profile=eda ssid=emoji wireless-protocol=802.11 wps-mode=disabled</span><br><span class="line">/interface wireless nstreme</span><br><span class="line">set wlan2 enable-polling=no</span><br><span class="line">[admin@jd] &gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kid control和hotspot 透传三层设备</span></span><br><span class="line">  将斐讯等totalstub终端设备当成上面的kid control 和hotspot设备来使用，配置相应的mac地址和规则，实现有效限制上网的功能</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/07/08/tT6yiZQ5mSugUbG.png" alt="411594219877_.pic_hd.jpg"><br><img src="https://i.loli.net/2020/07/11/bhL7oeHrIAQSawZ.png" alt="5g_wifi.png"></p><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1><ul><li><a href="https://rosm.cn/?p=670" target="_blank" rel="noopener">rosm.cn</a></li><li><a href="http://www.tcp5.com/" target="_blank" rel="noopener">路由表每日更新</a></li><li><a href="https://kai3c.com/archives/291" target="_blank" rel="noopener">RouterOS x86 1037u軟路由</a></li><li><a href="http://www.irouteros.com/wp-content/uploads/2019/10/RouterOS%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99%E4%B8%8EWLAN%E6%97%A0%E7%BA%BF%E6%95%99%E7%A8%8Bv66e.pdf" target="_blank" rel="noopener"><strong>RouterOS脚本编写与WLAN无线教程v66e</strong> PDF电子版</a></li><li><a href="http://tools.rosjb.com/" target="_blank" rel="noopener">ROS 在线脚本生成器</a></li><li><a href="https://www.gaohou.com/soft.html" target="_blank" rel="noopener">高厚网络</a></li><li><a href="https://koolshare.cn/thread-166316-1-1.html" target="_blank" rel="noopener">Koolshare hap ac2</a></li><li><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1100064377/5fcf8329" target="_blank" rel="noopener">AC6000</a> ts-cts模式  fragmentation-threshold命令</li><li><a href="http://www.irouteros.com/?p=282" target="_blank" rel="noopener">hAP ac²</a> <a href="https://www.ixbt.com/nw/mikrotik-hap-ac2-review.html" target="_blank" rel="noopener">https://www.ixbt.com/nw/mikrotik-hap-ac2-review.html</a></li><li><a href="https://netflow.by/blog/inet-setup/1986-nastrojka-wi-fi-na-routore-mikrotik-hap-ac-2" target="_blank" rel="noopener">routore-mikrotik-hap-ac-2</a></li><li><a href="http://www.mikrotik.com.ua/download/routeros/" target="_blank" rel="noopener">Since routeros-all-2.9.51</a></li><li><a href="http://www.irouteros.com/?p=637" target="_blank" rel="noopener">RouterOS WiFi隐藏SSID和隔离WiFi客户端配置</a></li><li><a href="http://www.irouteros.com/?p=356" target="_blank" rel="noopener">RouterOS 802.11ac双频合一配置</a></li><li><a href="http://www.irouteros.com/?p=414" target="_blank" rel="noopener">MikroTik 60GHz无线设备（上）</a> 由于频率越高，受到环境影响越大，电磁波在空气中传播的时候频率高的电磁波，更容易被反射和吸收，下图是衰减系数表，随着频率增加，增益和距离的衰减系数会越来越大。因此60GHz的频率在室外的时候，特别容易受到高湿度和下雨天影响的原因</li><li><a href="http://ros6.com/" target="_blank" rel="noopener">ros6.com</a></li><li><a href="http://www.clxp.net.cn/thread-17315-1-1.html" target="_blank" rel="noopener">chr安装</a></li><li><a href="https://www.myxzy.com/post-476.html" target="_blank" rel="noopener">ROS6.43_x64.ova</a></li><li><a href="https://help.mikrotik.com/docs/display/ROS/DDoS+Protection" target="_blank" rel="noopener">DDoS Protection </a></li><li><a href="https://r-1.ch/mikrotik-unicode-ssid-generator.php" target="_blank" rel="noopener">mikrotik-unicode-ssid-generator</a> 支持<code>emoji</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线临时文件短信邮箱服务</title>
      <link href="2020/04/12/temp-file-sms-email/"/>
      <url>2020/04/12/temp-file-sms-email/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Temp-File-SMS-Email"><a href="#Temp-File-SMS-Email" class="headerlink" title="Temp-File-SMS-Email"></a>Temp-File-SMS-Email</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>为了更好的使用便捷的在线服务同时保障自己的隐私，所以汇总了以下文件短信邮箱服务<a id="more"></a></li></ul><h1 id="二-在线文件"><a href="#二-在线文件" class="headerlink" title="二.在线文件"></a>二.在线文件</h1><ul><li><a href="https://cowtransfer.com/" target="_blank" rel="noopener">cowtransfer.com</a></li><li><a href="https://send-anywhere.com/" target="_blank" rel="noopener">send anywhere</a></li><li><a href="https://app.tmp.link/" target="_blank" rel="noopener">tmp.link </a></li><li><a href="https://filelist.cn" target="_blank" rel="noopener">filelist.cn</a></li></ul><h1 id="三-在线短信"><a href="#三-在线短信" class="headerlink" title="三.在线短信"></a>三.在线短信</h1><ul><li><a href="http://ss.netnr.com/tempsms" target="_blank" rel="noopener">http://ss.netnr.com/tempsms</a></li><li><a href="https://www.zusms.com/" target="_blank" rel="noopener">www.zusms.com</a></li><li><a href="https://www.z-sms.com/" target="_blank" rel="noopener">www.z-sms.com</a></li></ul><h1 id="四-在线临时邮箱"><a href="#四-在线临时邮箱" class="headerlink" title="四.在线临时邮箱"></a>四.在线临时邮箱</h1><ul><li><a href="https://10minutemail.net/" target="_blank" rel="noopener">10minutemail.net</a></li><li><a href="https://10minutemail.com/" target="_blank" rel="noopener">10minutemail.com</a></li><li><a href="http://ss.netnr.com/" target="_blank" rel="noopener">http://ss.netnr.com/</a></li><li><a href="https://hao.su/1492/#menu_index_6" target="_blank" rel="noopener">不死鸟</a></li><li><a href="https://9em.org" target="_blank" rel="noopener">https://9em.org</a></li><li><a href="https://bccto.me" target="_blank" rel="noopener">https://bccto.me</a></li><li><a href="https://maildrop.cc" target="_blank" rel="noopener">maildrop.cc</a></li><li><a href="https://8164.cc/#/emailList/all" target="_blank" rel="noopener">https://8164.cc/#/emailList/all</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pinpoint 安装部署教程</title>
      <link href="2020/04/09/Pinpoint-APM-Manual/"/>
      <url>2020/04/09/Pinpoint-APM-Manual/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Pinpoint-APM-Manual"><a href="#Pinpoint-APM-Manual" class="headerlink" title="Pinpoint  APM  Manual"></a>Pinpoint  APM  Manual</h2><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>在日常开发过程中需要通过<code>APM(Application Performance Management)</code>工具来监控我们部署的应用服务是否稳定正常，目前常用的有<code>skywalking</code>和<code>pinpint</code><a id="more"></a><img src="http://skywalking.apache.org/assets/img/Pinpoint-PK-skywalking.184b13d4.png" alt="性能对比截图"></li></ul><h1 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h1><ul><li><a href="http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/" target="_blank" rel="noopener">CentOS 7</a></li><li><a href="https://injdk.cn/" target="_blank" rel="noopener">JDK1.8</a></li><li><a href="https://www.jetbrains.com/idea/download/#section=mac" target="_blank" rel="noopener">IntelliJ IDEA</a></li><li><a href="https://mirror.olnevhost.net/pub/apache/tomcat/tomcat-9/v9.0.34/bin/apache-tomcat-9.0.34.tar.gz" target="_blank" rel="noopener">Tomcat 9</a></li><li><a href="https://github.com/naver/pinpoint/archive/v2.0.1.zip" target="_blank" rel="noopener">pinpoint 的源码包</a></li><li><a href="https://github.com/naver/pinpoint/releases/download/v2.0.1/pinpoint-agent-2.0.1.tar.gz" target="_blank" rel="noopener">pinpoint-agent-2.0.1.tar.gz</a>  代理客户端</li><li><a href="https://github.com/naver/pinpoint/releases/download/v2.0.1/pinpoint-collector-2.0.1.war" target="_blank" rel="noopener">pinpoint-collector-2.0.1.war</a></li><li><a href="https://github.com/naver/pinpoint/releases/download/v2.0.1/pinpoint-web-2.0.1.war" target="_blank" rel="noopener">pinpoint-web-2.0.1.war</a></li><li><a href="http://hbase.apache.org/downloads.html" target="_blank" rel="noopener">hbase 2.2.4</a></li><li><a href="https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz" target="_blank" rel="noopener">apache zooKeeper 3.6.0</a> </li><li>单机部署的话可以使用<code>hbase内置的zookeeper</code>如果使用外置的版本是<code>zookeeper3.5</code>以上需要注意会<code>默认占用8080端口做AdminServer</code>，你可以修改<code>zoo.cfg</code>来修改<code>admin.serverPort=9999</code><h1 id="JDK安装配置"><a href="#JDK安装配置" class="headerlink" title="JDK安装配置"></a>JDK安装配置</h1></li><li>首先下载jdk，创建java 环境目录<code>mkdir -p /usr/local/java/</code></li><li>解压 <code>tar -xvf jdk-8u202-linux-x64.tar.gz -C /usr/local/java/</code></li><li>最后<code>vim /etc/profile</code> 添加</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_202</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><h1 id="Hbase环境配置"><a href="#Hbase环境配置" class="headerlink" title="Hbase环境配置"></a>Hbase环境配置</h1><ul><li>解压hbase  <code>tar -xvf hbase-2.2.4-bin.tar.gz</code></li><li>修改hbase的配置文件<code>vim /root/hbase-2.2.4/conf/hbase-env.sh</code> 中添加一行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置java_home</span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_202/</span><br><span class="line">使用外部zookeeper管理hbase</span><br><span class="line">export HBASE_MANAGES_ZK=flase</span><br></pre></td></tr></table></figure><ul><li>修改hbase的配置文件<code>vim /root/hbase-2.2.4/conf/hbase-site.xml</code> 中添加一行 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> &lt;configuration&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">          &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;/root/hbase-2.2.4/data/hbase&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">          &lt;name&gt;hbase.zookeeper.property.dataDir&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;/root/hbase-2.2.4/data/zookeeper&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">          &lt;name&gt;hbase.master.port&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;60000&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">          &lt;name&gt;hbase.regionserver.port&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;60020&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">  &lt;/configuration&gt;</span><br><span class="line">* 启动hbase  `cd /root/hbase-2.2.4/bin` 并执行`./start-hbase.sh`</span><br><span class="line">* 打开 `http://127.0.0.1:16010/master-status` 查看hbase web管控台</span><br><span class="line">* 导入pinpoint到hbase 即解压`pinpoint-2.0.1.tar.gz`后得到`/root/pinpoint-2.0.1/hbase/scripts/hbase-create.hbase `的sql文件并拷贝到`hbase的bin目录`</span><br><span class="line">* `./root/hbase-2.2.4/bin/hbase shell hbase-create.hbase `执行之后可以`status &apos;detailed&apos;`查看数据</span><br></pre></td></tr></table></figure><ul><li><p>在浏览器打开查看hbase <a href="http://10.211.55.4:16010/master-status" target="_blank" rel="noopener">http://10.211.55.4:16010/master-status</a></p><p><img src="https://i.loli.net/2020/04/12/lhTfJuGYrSxb146.jpg" alt="Xnip2020-04-12_19-34-34_hbase.jpg"></p></li></ul><h1 id="配置web和collector"><a href="#配置web和collector" class="headerlink" title="配置web和collector"></a>配置web和collector</h1>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* 解压tomcat `tar -xvf apache-tomcat-9.0.34.tar.gz`并重命名`cp -R apache-tomcat-9.0.34 web`</span><br><span class="line">* 修改tomcat 的默认端口号`vim /root/web/conf/server.xml`找到8080 修改成5050</span><br><span class="line">* 将web部署到webapps里面重命名为ROOT.war `cp -R pinpoint-web-2.0.1.war /root/web/webapps/ROOT.war`</span><br><span class="line">* 启动tomcat  `进入cd /root/web/bin`目录并执行`./startup.sh `</span><br><span class="line">* 修改ROOT.war 默认配置文件绑定zookeeper的实际地址</span><br><span class="line">  /进入目录 </span><br><span class="line">  cd web/webapps/ROOT/WEB-INF/classes/</span><br><span class="line">  修改hbase.properties中 </span><br><span class="line">  hbase.client.host=127.0.0.1</span><br><span class="line">  修改pinpoint-web.properties 中</span><br><span class="line">  pinpoint.zookeeper.address=127.0.0.1</span><br><span class="line">  进入目录</span><br><span class="line">  cd /root/web/webapps/ROOT/WEB-INF/classes/profiles/local</span><br><span class="line">  修改hbase-env.properties </span><br><span class="line">  hbase.client.host=127.0.0.1</span><br><span class="line">  修改pinpoint-web-env.properties </span><br><span class="line">  pinpoint.zookeeper.address=127.0.0.1</span><br><span class="line">  进入目录</span><br><span class="line">  cd /root/web/webapps/ROOT/WEB-INF/classes/profiles/release</span><br><span class="line">  修改hbase-env.properties </span><br><span class="line">  hbase.client.host=127.0.0.1</span><br><span class="line">  修改pinpoint-web-env.properties </span><br><span class="line">  pinpoint.zookeeper.address=127.0.0.1</span><br><span class="line">* collector基本和web配置步骤一致</span><br></pre></td></tr></table></figure><h1 id="配置agent"><a href="#配置agent" class="headerlink" title="配置agent"></a>配置agent</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 打包springboot项目并整合agent参数`java -javaagent:/root/pinpoint-agent-2.0.1/pinpoint-bootstrap-2.0.1.jar -Dpinpoint.agentId=应用服务名id -Dpinpoint.applicationName=应用服务名id -jar mongodb-1.0.jar`</span><br><span class="line">java -javaagent:/root/pinpoint-agent-2.0.1/pinpoint-bootstrap-2.0.1.jar -Dpinpoint.agentId=codewindy-mongodb -Dpinpoint.applicationName=codewindy-mongodb -jar mongodb-1.0.jar</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/04/12/mvInzeOaYPy4QXf.jpg" alt="Xnip2020-04-12_20-05-48pinpoint_init.jpg"><br><img src="https://i.loli.net/2020/04/12/mCT5Esp69j3DrlS.jpg" alt="Xnip2020-04-12_20-06-41_pinpoint_callTree.jpg"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://github.com/ameizi/DevArticles/issues/166" target="_blank" rel="noopener">pinpoint 安装部署教程</a></li><li><a href="https://github.com/naver/pinpoint/releases" target="_blank" rel="noopener">pinpoint-agent-collector -web下载</a></li><li><a href="http://skywalking.apache.org/zh/blog/2019-02-24-skywalking-pk-pinpoint.html" target="_blank" rel="noopener">skywalking vs pinpoint</a></li><li><a href="http://www.tangrui.net/2016/pinpoint-plugin-development.html" target="_blank" rel="noopener">pinpoint原理和docker部署</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雷雨天温度湿度会影响Wi-Fi</title>
      <link href="2020/01/29/weather-affect-your-wifi/"/>
      <url>2020/01/29/weather-affect-your-wifi/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Weather-Affect-Your-Wi-Fi"><a href="#Weather-Affect-Your-Wi-Fi" class="headerlink" title="Weather Affect Your Wi-Fi"></a>Weather Affect Your Wi-Fi</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>老家升级了光纤，但是没有光猫的超级管理员账号，无法查看和配置</li><li>使用过程中发现一个问题，恶劣天气是否会影响Wi-Fi<a id="more"></a></li><li>结论：<strong><font style="color:black; background:yellow"> 有许多天气条件会严重削弱WiFi信号，但只会在室外条件下影响WiFi信号,降雨对WiFi信号的影响最大。你知道为什么吗？因为，无线电频率被雨滴吸收，并被雨滴部分阻挡，空气中的水分会打断路由器的信号的发送和接收。</font></strong></li><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">移动光猫账号： CMCCAdmin 密码：aDm8H%MdA</span><br><span class="line">华为的：telecomadmin 密码：admintelecom</span><br><span class="line">中国移动光纤宽带ip：192.168.100.1的超级账号：telecomadmin 密码：nE7jA%5m</span><br><span class="line">中国移动默认光猫超级管理员账号密码汇总</span><br><span class="line">已知：</span><br><span class="line">型号HS8545M5 可用</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-参考"><a href="#二-参考" class="headerlink" title="二. 参考"></a>二. 参考</h1><ul><li><strong>由于频率越高，受到环境影响越大，电磁波在空气中传播的时候频率高的电磁波，更容易被反射和吸收</strong>，下图是衰减系数表，随着频率增加，增益和距离的衰减系数会越来越大。因此<strong><font color="red">60GHz的频率在室外的时候，特别容易受到高湿度和下雨天影响的原因</font></strong></li><li><img src="http://www.irouteros.com/wp-content/uploads/2018/08/lhg60tu2.png" alt="雨天的衰耗问题"></li><li><a href="https://www.itren.org/171.html" target="_blank" rel="noopener"><strong>型号HS8545M5</strong></a></li><li><a href="https://the-weather-station.com/does-weather-affect-your-wifi/" target="_blank" rel="noopener">does-weather-affect-your-wifi</a></li><li><a href="https://www.techwalla.com/articles/can-humidity-affect-a-wi-fi-signal" target="_blank" rel="noopener">can-humidity-affect-a-wi-fi-signal</a></li><li><a href="http://www.irouteros.com/?p=414" target="_blank" rel="noopener">MikroTik 60GHz无线设备（上）</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac系统下安装mysql</title>
      <link href="2020/01/29/MacOS-MySQL-Config/"/>
      <url>2020/01/29/MacOS-MySQL-Config/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="MacOS-MySQL-Install-amp-Config"><a href="#MacOS-MySQL-Install-amp-Config" class="headerlink" title="MacOS MySQL Install &amp; Config"></a>MacOS MySQL Install &amp; Config</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li><a href="https://segmentfault.com/a/1190000019689864" target="_blank" rel="noopener">MySQL8 下载安装</a><a id="more"></a></li><li><code>F11 或者command +m 可以快速回到desktop</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>https 原理和应用</title>
      <link href="2020/01/14/principle-https/"/>
      <url>2020/01/14/principle-https/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Principles-and-Applications-of-https"><a href="#Principles-and-Applications-of-https" class="headerlink" title="Principles and Applications of https"></a>Principles and Applications of https</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>理解http 和https 的区别</li><li>理解http 1.0 和http 1.1 和http2.0 的区别</li><li>在对外提供接口的情况下，如何设计和保证数据的安全可靠性<a id="more"></a><h1 id="二-原理"><a href="#二-原理" class="headerlink" title="二. 原理"></a>二. 原理</h1></li><li><a href="http://www.ichenpeng.net/1176592" target="_blank" rel="noopener">www.ichenpeng.net</a><h1 id="三-应用"><a href="#三-应用" class="headerlink" title="三. 应用"></a>三. 应用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codewindy.mongodb.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.map.MapUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.SecureUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.asymmetric.KeyType;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.asymmetric.RSA;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.asymmetric.Sign;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.asymmetric.SignAlgorithm;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.RandomStringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codewindy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-01-14 8:59 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * https://www.bookstack.cn/read/hutool/093507f34fe0715d.md</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAESByHutool</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1. 生成公钥和私钥并指定加密type 和长度</span></span><br><span class="line"></span><br><span class="line">        RSA rsa = <span class="keyword">new</span> RSA();</span><br><span class="line">        String privateKeyBase64 = rsa.getPrivateKeyBase64();</span><br><span class="line">        String publicKeyBase64 = rsa.getPublicKeyBase64();</span><br><span class="line">        System.out.println(<span class="string">"keyPair.getPrivate() 私钥= "</span> + privateKeyBase64);</span><br><span class="line">        System.out.println(<span class="string">"keyPair.getPublic() 公钥= "</span> + publicKeyBase64);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 获取待加密的敏感原始数据</span></span><br><span class="line">        String content = HttpRequest</span><br><span class="line">                .get(<span class="string">"https://api.myip.com/"</span>)</span><br><span class="line">                <span class="comment">//超时，毫秒</span></span><br><span class="line">                .timeout(<span class="number">20000</span>)</span><br><span class="line">                .header(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE)</span><br><span class="line">                .execute()</span><br><span class="line">                .body();</span><br><span class="line">        <span class="comment">//3. 每次生成AES 16 位随机密码</span></span><br><span class="line">        String aesKey = RandomStringUtils.randomNumeric(<span class="number">16</span>);</span><br><span class="line">        System.out.println(<span class="string">"每次生成AES 16 位随机密码aesKey = "</span> + aesKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 使用公钥加密 aes对称密码 后的key</span></span><br><span class="line">        String encryptAesKey = rsa.encryptBase64(aesKey, KeyType.PrivateKey);</span><br><span class="line">        System.out.println(<span class="string">"使用公钥加密 aes对称密码 后的encryptAesKey = "</span> + encryptAesKey);</span><br><span class="line">        <span class="comment">//5. AES 加密后的内容</span></span><br><span class="line">        String encryptContent = SecureUtil.aes(aesKey.getBytes()).encryptBase64(content);</span><br><span class="line">        System.out.println(<span class="string">"AES 加密后的内容 encryptContent = "</span> + encryptContent);</span><br><span class="line"></span><br><span class="line">        Sign sign = SecureUtil.sign(SignAlgorithm.MD5withRSA);</span><br><span class="line">        <span class="keyword">byte</span>[] signedContent = sign.sign(content.getBytes());</span><br><span class="line">        System.err.println(<span class="string">"对原始数据进行签名signedContent = "</span> + signedContent);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟获取request对象里面的parameters</span></span><br><span class="line">        String urlPath = <span class="string">"/admin/queryUserInfo"</span>;</span><br><span class="line">        String httpMethod = <span class="string">"POST"</span>;</span><br><span class="line">        <span class="keyword">long</span> clientTimeStamp = DateUtil.currentSeconds();</span><br><span class="line">        HashMap&lt;String, Object&gt; requestParams = MapUtil.newHashMap();</span><br><span class="line">        requestParams.put(<span class="string">"urlPath"</span>, urlPath);</span><br><span class="line">        requestParams.put(<span class="string">"httpMethod"</span>, httpMethod);</span><br><span class="line"><span class="comment">//        requestParams.put("clientSign", request.getClientSign());</span></span><br><span class="line">        requestParams.put(<span class="string">"clientTimeStamp"</span>, clientTimeStamp + <span class="string">""</span>);</span><br><span class="line">        String sign2String = MapUtil.sortJoin(MapUtil.sort(requestParams), <span class="string">"&amp;"</span>, <span class="string">"="</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        String calculateSign = SecureUtil.hmacSha1(aesKey.getBytes()).digestHex(sign2String);</span><br><span class="line"><span class="comment">//        calculateSign计算出来的sign和request 请求里面的参数clientSign进行比较，如果不一致说明数据被篡改了s</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"计算出来的sign和request 请求里面的参数clientSign 进行比较 = "</span> + calculateSign);</span><br><span class="line">        System.out.println(<span class="string">"解密-----------------------------------------------------"</span>);</span><br><span class="line">        <span class="comment">//6. 使用私钥解密后的key</span></span><br><span class="line"></span><br><span class="line">        String decryptAesKey = rsa.decryptStr(encryptAesKey, KeyType.PublicKey);</span><br><span class="line">        System.out.println(<span class="string">"使用私钥解密后的decryptAesKey = "</span> + decryptAesKey);</span><br><span class="line">        <span class="comment">//7. 解密得到明文的 aes 对称密码 解密加密的content数据</span></span><br><span class="line"></span><br><span class="line">        String decryptContent = SecureUtil.aes(decryptAesKey.getBytes()).decryptStr(encryptContent);</span><br><span class="line">        System.out.println(<span class="string">"解密得到明文的 aes 对称密码 解密加密的content数据 = "</span> + decryptContent);</span><br><span class="line">        <span class="comment">//8. 签名和验签 https://hutool.cn/docs/#/crypto/%E7%AD%BE%E5%90%8D%E5%92%8C%E9%AA%8C%E8%AF%81-Sign</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> verify = sign.verify(content.getBytes(), signedContent);</span><br><span class="line">        System.err.println(<span class="string">"验签状态verify = "</span> + verify);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-参考"><a href="#四-参考" class="headerlink" title="四. 参考"></a>四. 参考</h1><ul><li><a href="https://www.kancloud.cn/ichenpeng/blog/1176592" target="_blank" rel="noopener">https://www.kancloud.cn/ichenpeng/blog/1176592</a></li><li><a href="https://www.kancloud.cn/ichenpeng/blog/1094601" target="_blank" rel="noopener">countdownLatch 使用</a></li><li><a href="https://hutool.cn/docs/#/" target="_blank" rel="noopener">Hutool doc</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS 配置JDK和Gradle环境变量</title>
      <link href="2020/01/02/MacOS-jdk-gradle/"/>
      <url>2020/01/02/MacOS-jdk-gradle/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="MacOS-JDK-amp-Gradle-amp-Maven-Settings"><a href="#MacOS-JDK-amp-Gradle-amp-Maven-Settings" class="headerlink" title="MacOS JDK &amp; Gradle &amp; Maven Settings"></a>MacOS JDK &amp; Gradle &amp; Maven Settings</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>mac系统下配置开发环境变量</li></ul><a id="more"></a><h1 id="二-准备条件"><a href="#二-准备条件" class="headerlink" title="二. 准备条件"></a>二. 准备条件</h1><ul><li><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk13-downloads-5672538.html" target="_blank" rel="noopener">下载<code>jdk 1.8</code></a></li><li>国内镜像地址 <a href="https://injdk.cn/" target="_blank" rel="noopener">https://injdk.cn/</a></li><li><a href="https://gradle.org/next-steps/?version=4.10.3&format=bin" target="_blank" rel="noopener">下载<code>gradle 4.10.3</code></a></li><li><a href="http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip" target="_blank" rel="noopener">下载<code>maven 3.6.3</code></a></li></ul><h1 id="三-步骤"><a href="#三-步骤" class="headerlink" title="三. 步骤"></a>三. 步骤</h1><ul><li><p><code>vim /etc/profile</code>然后按住<code>shift +G</code> 添加以下脚本后执行<code>source /etc/profile</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/"</span><br><span class="line">CLASS_PATH="$JAVA_HOME/lib"</span><br><span class="line">PATH=".:$PATH:$JAVA_HOME/bin"</span><br></pre></td></tr></table></figure></li><li><p><code>vim ~/.bash_profile</code> 配置gradle 和maven</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export M2_HOME=/usr/local/maven3.6.3/</span><br><span class="line">export PATH=$PATH:$M2_HOME/bin</span><br><span class="line">GRADLE_HOME=/usr/local/gradle4.10.3</span><br><span class="line">export GRADLE_HOME</span><br><span class="line">export PATH=$PATH:$GRADLE_HOME/bin</span><br></pre></td></tr></table></figure></li><li><p><code>vim ~/.zshrc</code> 在底部新增<code>source ~/.bash_profile</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">gradle 配置阿里云加速</span></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url 'https://maven.aliyun.com/repository/public/' &#125;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">在maven 的settings.xml文件中配置jar包仓库本地地址 </span></span><br><span class="line">&lt;localRepository&gt;/usr/local/xl_repo&lt;/localRepository&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash">然后找到mirror配置以下</span></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyunmaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;阿里云公共仓库&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-参考"><a href="#四-参考" class="headerlink" title="四. 参考"></a>四. 参考</h1><ul><li><a href="https://help.aliyun.com/document_detail/102512.html?spm=a2c40.aliyun_maven_repo.0.0.361865e9b6VaFh" target="_blank" rel="noopener">aliyun mirror manual</a></li><li><a href="https://javalibs.com/" target="_blank" rel="noopener">https://javalibs.com/</a> maven repository</li><li><a href="https://mirrors.huaweicloud.com/java/jdk/8u172-b11/" target="_blank" rel="noopener">huaweiCloud mirrors</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux源码编译安装postgres</title>
      <link href="2019/12/28/install-postgresql-from-source-code/"/>
      <url>2019/12/28/install-postgresql-from-source-code/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="install-postgresql-from-source-code"><a href="#install-postgresql-from-source-code" class="headerlink" title="install postgresql from source code"></a>install postgresql from source code</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>最近经常需要处理postgres数据库相关环境配置的事情，遂记录一下</li></ul><a id="more"></a><h1 id="二-步骤"><a href="#二-步骤" class="headerlink" title="二. 步骤"></a>二. 步骤</h1><ul><li><a href="https://www.tecmint.com/install-postgresql-from-source-code-in-linux/" target="_blank" rel="noopener">tecmint postgres tutorials</a></li><li><a href="https://www.tecmint.com/install-postgresql-on-ubuntu/" target="_blank" rel="noopener">ubuntu apt-get install  postgres</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> postgres </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐讯k2通过编程器刷breed后升级padavan固件</title>
      <link href="2019/12/15/k2-breed-padavan/"/>
      <url>2019/12/15/k2-breed-padavan/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="斐讯k2路由器通过ch340编程板刷入breed"><a href="#斐讯k2路由器通过ch340编程板刷入breed" class="headerlink" title="斐讯k2路由器通过ch340编程板刷入breed"></a>斐讯k2路由器通过ch340编程板刷入breed</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>2017年在<code>jd自营</code>买的斐讯k2路由器自动更新固件到<code>22.6.532.231</code>，网络经常会出现卡顿，于是动了刷机的心思<a id="more"></a><h1 id="二-准备条件"><a href="#二-准备条件" class="headerlink" title="二. 准备条件"></a>二. 准备条件</h1></li><li>先认真阅读这篇恩山论坛的教程  <font style="color:black; background:yellow"><a href="https://www.right.com.cn/FORUM/thread-636761-1-1.html" target="_blank" rel="noopener"><strong>航校门口二楼修</strong></a></font></li><li>淘宝购买 ch340编程板并下载<a href="http://www.wch.cn/products/CH340.html" target="_blank" rel="noopener">相应的驱动</a>也可以找卖家要</li><li>下载<a href="http://tftpd32.jounin.net/" target="_blank" rel="noopener">tftpd32</a> 服务器</li><li>下载k2 对应的 <a href="https://github.com/hanwckf/rt-n56u/releases" target="_blank" rel="noopener">老毛子padavan 固件</a>/或<a href="http://dl.geewan.com/" target="_blank" rel="noopener">极玩固件</a></li><li>下载<a href="https://github.com/codewindy/mac_soft/blob/master/Xshell-6.0.0181p_2.exe.7z" target="_blank" rel="noopener">xshell免费版</a>或secureCRT或putty等可以连接 串口软件</li></ul><h1 id="三-操作"><a href="#三-操作" class="headerlink" title="三. 操作"></a>三. 操作</h1><ul><li>关闭win10防火墙，总共需要关闭三个地方</li><li>安装ch340驱动 <code>win+pause</code>打开win10属性后点击设备管理器里面会多一个串口，短接5v <strong>注意接好线后只会亮一个红灯，我试了2个晚上，第一次错以为要三个灯全部亮，其实还是接线的问题浪费大量时间</strong></li><li>插入ch340，并打开xshell按serial串口方式接入</li><li>给k2路由器接电然后一直按9就行了，后面直接输入路由器的ip地址和breed.bin输入成功</li><li>断电然后按住reset按钮5s 后 等路由器重启之后xshell会打印出<code>breed&gt;</code>成功进入breed，后面可以刷入任意固件了<h1 id="四-问题解决"><a href="#四-问题解决" class="headerlink" title="四. 问题解决"></a>四. 问题解决</h1></li><li><code>按9 没反应一直使用默认的3 启动的</code>是因为淘宝5块钱买的ch340 杜邦线是母对母，需要自己额外买母对公或者自己把线割开用铜丝接入*<em>是线跟编程器接触不良导致的rx线信号没有传入，需要重新插好线，电源短接5v *</em></li><li>刷完<code>padavan 老毛子固件</code>之后需要重置reset 到出厂设置，然后设置Wi-Fi 信号地区选择 <strong>Australia</strong><h1 id="五-参考"><a href="#五-参考" class="headerlink" title="五. 参考"></a>五. 参考</h1></li><li><a href="https://www.right.com.cn/FORUM/thread-636761-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/FORUM/thread-636761-1-1.html</a></li><li><a href="http://www.wch.cn/products/CH340.html" target="_blank" rel="noopener">http://www.wch.cn/products/CH340.html</a> 编程器板驱动</li><li><a href="https://github.com/codewindy/mac_soft/blob/master/Xshell-6.0.0181p_2.exe.7z" target="_blank" rel="noopener">https://github.com/codewindy/mac_soft/blob/master/Xshell-6.0.0181p_2.exe.7z</a> xhell 串口模式连接</li><li><a href="http://tftpd32.jounin.net/" target="_blank" rel="noopener">http://tftpd32.jounin.net/</a> tftp服务器</li><li><a href="https://github.com/hanwckf/rt-n56u/releases" target="_blank" rel="noopener">https://github.com/hanwckf/rt-n56u/releases</a> k2刷机固件</li><li><a href="http://dl.geewan.com/" target="_blank" rel="noopener">http://dl.geewan.com/</a> 极玩固件</li><li><a href="https://github.com/codewindy/soft-common/blob/master/k2_breed_padavan.7z" target="_blank" rel="noopener">https://github.com/codewindy/soft-common/blob/master/k2_breed_padavan.7z</a></li><li><a href="http://opt.cn2qq.com/padavan/" target="_blank" rel="noopener">http://opt.cn2qq.com/padavan/</a></li><li><a href="https://www.right.com.cn/FORUM/thread-636761-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/FORUM/thread-636761-1-1.html</a></li><li><a href="http://www.duomingxing.com/down/mtk68.php" target="_blank" rel="noopener">www.duomingxing.com/down/mtk68.php</a></li><li><a href="https://www.mingjinglu.com/write/548.html" target="_blank" rel="noopener">k2p官改固件下载</a></li><li><a href="https://github.com/mayunbaba2/K2" target="_blank" rel="noopener">K2官改固件github下载</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS 下 Terminal 设置代理上网</title>
      <link href="2019/11/21/Terminal-Proxy/"/>
      <url>2019/11/21/Terminal-Proxy/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="MacOS-Terminal-Proxy-Settings"><a href="#MacOS-Terminal-Proxy-Settings" class="headerlink" title="MacOS Terminal Proxy Settings"></a>MacOS Terminal Proxy Settings</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一.  背景"></a>一.  背景</h1><ul><li>装完macos系统后，经常使用<code>Terminal</code>终端来写blog提交到github，但是老是丢包，最终通过代理来实现<a id="more"></a></li></ul><h1 id="二-准备"><a href="#二-准备" class="headerlink" title="二.  准备"></a>二.  准备</h1><ul><li><a href="https://github.com/qinyuhang/ShadowsocksX-NG-R/releases" target="_blank" rel="noopener">ShadowsocksX-NG</a>  软件并配置好可用的ssr节点</li></ul><h1 id="三-实现"><a href="#三-实现" class="headerlink" title="三. 实现"></a>三. 实现</h1><ul><li><p>打开<a href="https://www.diggui.com/" target="_blank" rel="noopener">https://www.diggui.com/</a> 查询<code>github.com</code>的A 记录并添加到<code>sudo vim /etc/hosts</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">A:github.com@8.8.8.8</span><br><span class="line">; &lt;&lt;&gt;&gt; DiG diggui.com &lt;&lt;&gt;&gt; @8.8.8.8 github.com A</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 46485</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;github.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">github.com.59INA140.82.113.4</span><br><span class="line"></span><br><span class="line">;; Query time: 9 msec</span><br><span class="line">;; SERVER: 8.8.8.8#53(8.8.8.8)</span><br><span class="line">;; WHEN: Tue Jan 14 14:24:33 UTC 2020</span><br><span class="line">;; MSG SIZE  rcvd: 55</span><br></pre></td></tr></table></figure></li><li><p>在<code>~/.zshrc</code>文件中配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias setroxy='export http_proxy=http://127.0.0.1:1087;</span><br><span class="line">export https_proxy=http://127.0.0.1:1087;'</span><br><span class="line">alias unsetproxy='unset http_proxy https_proxy'</span><br><span class="line">alias ip='curl cip.cc'</span><br></pre></td></tr></table></figure></li><li><p>只配置git代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"> #</span><span class="bash">设置</span></span><br><span class="line"> git config --global http.proxy 'socks5://127.0.0.1:1086' </span><br><span class="line"> git config --global https.proxy 'socks5://127.0.0.1:1086'</span><br><span class="line"><span class="meta"> #</span><span class="bash">取消</span></span><br><span class="line"> git config --global --unset http.proxy</span><br><span class="line"> git config --global --unset https.proxy</span><br><span class="line"> git clone https://github.com/codewindy/blog.git --config "http.proxy=127.0.0.1:1086"</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta"> #</span><span class="bash">只对github.com</span></span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">取消代理</span></span><br><span class="line">git config --global --unset http.https://github.com.proxy</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">只对github.com</span></span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:7891</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">取消代理</span></span><br><span class="line">git config --global --unset http.https://github.com.proxy</span><br></pre></td></tr></table></figure></li><li><p>在斐讯k2路由器刷机geewan或者openwrt/LEDE等石像鬼系统，直接配置ssr节点在路由器里面实现全局代理<br><img src="https://i.loli.net/2019/11/22/2SZVI5WJmxYLdOP.jpg" alt="Xnip2019-11-22_21-36-42.jpg"></p><h1 id="四-效果"><a href="#四-效果" class="headerlink" title="四. 效果"></a>四. 效果</h1><p><img src="https://i.loli.net/2019/11/21/NalKSW27cfmC5pR.jpg" alt="Xnip2019-11-21_22-02-55.jpg"></p></li></ul><h1 id="五-参考"><a href="#五-参考" class="headerlink" title="五. 参考"></a>五. 参考</h1><ul><li><a href="https://blog.naaln.com/2019/03/terminal-proxy/" target="_blank" rel="noopener">blog.naaln.com</a></li><li><a href="https://gist.github.com/laispace/666dd7b27e9116faece6" target="_blank" rel="noopener">gist config </a></li><li><a href="https://www.diggui.com/" target="_blank" rel="noopener">https://www.diggui.com/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常综合笔记</title>
      <link href="2019/10/28/daily-note/"/>
      <url>2019/10/28/daily-note/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Daily-Note"><a href="#Daily-Note" class="headerlink" title="Daily Note"></a>Daily Note</h2><h1 id="一-身体健康最重要，也是基础"><a href="#一-身体健康最重要，也是基础" class="headerlink" title="一. 身体健康最重要，也是基础"></a>一. 身体健康最重要，也是基础</h1><ul><li>跑步🏃 慢 45分钟 呼气吸气4步，长时间跑伤膝盖</li><li>一周四次就好 跑前热身下蹲 卷腹<a id="more"></a></li><li>luyten jd-gui</li><li>宜信技术学院 阿里中间件</li><li>jvm jinfo  阿里巴巴arthas  Perfma </li><li>ros 重定向</li><li>etcher 跨平台usb安装</li><li>api网关只做服务发现 代理</li><li>mq幂等 数据库唯一性约束是最后一道防线</li><li>等额本金 等额本息</li><li>enable右键插件</li><li>easyexcel导出excel插件 </li><li>wk2html生成pdf插件demo</li><li>首付额外交钱 装修 物业 契税</li><li>坚持下班后更新blog</li><li>全民k歌</li><li>出国旅游 车子 房子</li><li>Kafka flink clickhouse spark</li><li>synthing</li><li>ac ap接网线的方式实现拓展 有线级连组网</li><li>docsify 整理文档</li><li>git tag 学习</li><li>理财2900指数以下 2800以下 2600以下 增加被动理财收入</li><li>fyi 供参阅</li><li>大数据学习  尚硅谷bigdata </li><li>解决mac 摄像头睡眠问题</li><li>读书/健身 投资提升自己</li><li>nginx默认上传大小是1m 需要修改client_max_body_size 100M；</li><li>navicat 连接卡断 编辑连接开启keepalived 30</li><li>避免久坐脂肪肝 甲状腺结节尿酸高 甘油三酯血粘度高</li><li>tableplus</li><li>ubuntu pastebin 在线</li><li>cip.cc 查询ip</li><li>camtasia使用录制分享视频提高口才</li><li>mac vim配置语法着色</li><li>file.pizza</li><li>xxl-job 任务调度</li><li>rolan </li><li>tablego</li><li>Apollo 配置</li><li>url.ipaiban.com 短链</li><li>en.haseecomputer.com 神船官网</li><li>sony a7 RIV </li><li>thinkpad x1 extreme gen2 Wi-Fi6</li><li>allatori 加密 charmsongo.cn</li><li>jasypt 加密enc</li><li>jps -l</li><li>jstack </li><li>jstat -gcutil pid 2000 代表2s</li><li>光纤收发器  光纤交换路由设备</li><li>soft-common add routeros镜像 pppoe session截图</li><li><a href="https://www.runningcheese.com/userscripts" target="_blank" rel="noopener">https://www.runningcheese.com/userscripts</a> 好用的greasyfork script</li><li><a href="https://tool.imiku.me/ssr_decode/" target="_blank" rel="noopener">https://tool.imiku.me/ssr_decode/</a> 在线解析</li><li>更新ros blog地址为github </li><li>13.pdf ros大玩家qq和b站视频链接🔗</li><li><code>how do you spend your time</code>  <a href="https://www.youtube.com/watch?v=vZbzR7f7maI" target="_blank" rel="noopener">下载</a></li><li>gradle复杂项目配置</li><li>postman 视频host </li><li>聚簇锁引 主建索引 非聚簇锁引 非主键索引<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">聚簇索引的叶子节点中保存整行记录 而非聚簇索引保存的是该行记录的主键的值 相比之下 非聚簇索引比聚簇索引小很多,count（ID）会比count(*)多一个是否是null的判断</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong>少糖少油少盐 早睡早起多吃水果常备保温杯多喝热水</strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxifier 全局代理</title>
      <link href="2019/10/14/Proxifier-MacOS-Setting/"/>
      <url>2019/10/14/Proxifier-MacOS-Setting/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Proxifier-MacOS-Setting"><a href="#Proxifier-MacOS-Setting" class="headerlink" title="Proxifier MacOS Setting"></a>Proxifier MacOS Setting</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一.  背景"></a>一.  背景</h1><ul><li>装完macos系统后，一直不能像win10一样轻松上Twitter和Google，试了n种软件终于找到一种可用的方式<a id="more"></a></li></ul><h1 id="二-准备条件"><a href="#二-准备条件" class="headerlink" title="二.  准备条件"></a>二.  准备条件</h1><ul><li>*<em>license key for mac *</em>  <code>P427L-9Y552-5433E-8DSR3-58Z68</code> </li><li>下载   <a href="https://proxifier.com/download/ProxifierMac.dmg" target="_blank" rel="noopener">Proxifier v2.24</a> </li><li>下载  配置文件 <a href="https://github.com/codewindy/mac_soft/blob/master/proxifierRules4mac.ppx" target="_blank" rel="noopener">proxifierRules4mac.ppx</a></li><li>下载  <a href="https://github.com/codewindy/mac_soft/blob/master/ShadowsocksX-NG-R8.dmg" target="_blank" rel="noopener">shadowsocksX-NG-R8</a></li></ul><h1 id="三-安装"><a href="#三-安装" class="headerlink" title="三.  安装"></a>三.  安装</h1><ul><li>先安装 <code>shadowsocksX-NG-R8</code></li><li>然后安装 <code>Proxifier</code> 并使用license注册</li><li>然后导入配置文件<code>proxifierRules4mac.ppx</code></li></ul><h1 id="四-效果"><a href="#四-效果" class="headerlink" title="四.  效果"></a>四.  效果</h1><ul><li>已经能正常使用Google和Twitterrific了</li><li><img src="https://i.loli.net/2019/10/14/EUSiaK9mWbBgNJH.jpg" alt="Proxifier-Tutorial.jpg"><h1 id="五-其他方式"><a href="#五-其他方式" class="headerlink" title="五.  其他方式"></a>五.  其他方式</h1></li><li>直接在<code>路由器geewan</code><a href="http://dl.geewan.com/%E5%85%A8%E9%83%A8%E5%8E%86%E5%8F%B2%E5%9B%BA%E4%BB%B6/0.0.23/" target="_blank" rel="noopener">固件GF_PSG1218_K2 - bigwan 0.0.23-fix10 </a>或者<code>极路由等LEDE</code>刷机里面配置好<code>ssr</code>代理即可全局上网，但是使用过程中发现灵活性较差</li><li>直接使用chrome免费插件 <a href="https://github.com/codewindy/soft-common/blob/master/skyzip.crx" target="_blank" rel="noopener"><strong>skyzip</strong></a></li></ul><h1 id="六-免费节点"><a href="#六-免费节点" class="headerlink" title="六.  免费节点"></a>六.  免费节点</h1><ul><li><a href="https://ji-f.pw/signin" target="_blank" rel="noopener">几鸡-学习助理</a> 台湾的学习免费节点网速很棒，注册需要能先上Google</li><li><a href="https://lncn.org/" target="_blank" rel="noopener">lncn.org</a> 能满足日常使用，但需要配置hosts文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在本地host文件中将本站域名绑定到 69.194.14.16</span><br><span class="line">安卓可下载 Hosts Go 添加 ， windows具体操作方法如下↓</span><br><span class="line">目录：C:/Windows/System32/drivers/etc，记事本打开host文件</span><br><span class="line">在最后一行添加(注意空格)： 69.194.14.16 lncn.org</span><br><span class="line">win+R 输入cmd回车，执行： ipconfig /flushdns</span><br><span class="line">重新刷新页面即可,如失效请还原host并用代理访问！</span><br><span class="line">macOS/Linux 下直接 echo "69.194.14.16 lncn.org" &gt;&gt; /etc/hosts </span><br><span class="line">export http_proxy=http://127.0.0.1:1087 经常会github连不上 可以curl cip.cc查看ip地址</span><br></pre></td></tr></table></figure><h1 id="七-参考"><a href="#七-参考" class="headerlink" title="七.  参考"></a>七.  参考</h1><ul><li><a href="https://www.kagura.me/dev/20190324005534.html" target="_blank" rel="noopener">kagura.me</a>   神楽</li><li><a href="https://lncn.org/" target="_blank" rel="noopener">lncn.org</a>   免费节点</li><li><a href="https://ji-f.pw/signin" target="_blank" rel="noopener">几鸡-学习助理</a> 台湾学习助理</li><li><a href="http://dl.geewan.com/%E6%96%90%E8%AE%AF%E8%B7%AF%E7%94%B1-Phicomm/%E6%9C%80%E6%96%B0%E5%85%8D%E6%8B%86%E6%9C%BA%E6%96%90%E8%AE%AFK1K2%E5%88%B7%E6%9E%81%E7%8E%A9%E5%9B%BA%E4%BB%B6%E6%95%99%E7%A8%8B.rar" target="_blank" rel="noopener">geewan</a> 斐讯k2/极路由固件教程</li><li><a href="https://install.appcenter.ms/users/clashx/apps/clashx-pro/distribution_groups/public" target="_blank" rel="noopener">ClashX Pro</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装win10双系统</title>
      <link href="2019/10/03/Dual-System-win10/"/>
      <url>2019/10/03/Dual-System-win10/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Dual-System-Boot-win10-and-MacOS"><a href="#Dual-System-Boot-win10-and-MacOS" class="headerlink" title="Dual System Boot win10 and MacOS"></a>Dual System Boot win10 and MacOS</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>在安装完MacOS之后，发现不能上Google试了n种方式都失败告终，并且mac下载文件速度很慢、占用太多内存<a id="more"></a></li><li>因为z7-kp7gz电脑一到手就只安装了MacOS10.14.6 mojave，现在只需按照正常流程安装win10 企业版1809到机械硬盘上即可。</li></ul><ul><li>先安装macOS后安装win10的好处就是不需要自己去重建uefi引导和创建200M以上的esp分区</li></ul><h1 id="二-准备"><a href="#二-准备" class="headerlink" title="二. 准备"></a>二. 准备</h1><ul><li><a href="https://msdn.itellyou.cn" target="_blank" rel="noopener">msdn I tell you</a> 下载<a href="ed2k://|file|cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso|4478906368|E7C526499308841A4A6D116C857DB669|/" target="_blank" rel="noopener">win10企业版系统</a>，注意<code>intel cpu 6</code>代以后不支持win7了</li><li>8G以上U盘一个</li><li><a href="https://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/" target="_blank" rel="noopener"><strong>Universal-USB-Installer-1.9.8.9.exe</strong> </a>请在win环境下格式化成fat32制作启动盘，否则会无法识别</li><li><strong>注意：</strong> 西数固态sn750安装系统前使用<code>DiskGenius</code>格式化成GPT(GUID格式），否则会识别不出nvme的ssd</li></ul><h1 id="三-安装步骤"><a href="#三-安装步骤" class="headerlink" title="三. 安装步骤"></a>三. 安装步骤</h1><ul><li><p>按<strong>F2</strong> 进入bios或者<strong>F7</strong>引导项，选择win10安装u盘进入</p></li><li><p><img src="https://i.loli.net/2019/10/03/adyUKQw6WrCJnXq.jpg" alt="Jietu20191003-115130安装引导0.jpg"></p></li><li><p>格式化机械硬盘的C盘，并点击一下步</p></li><li><p><img src="https://i.loli.net/2019/10/03/Xt8G1yuhC29LWlx.jpg" alt="Jietu20191003-114902安装引导.jpg"></p></li><li><p>依次安装即可，重启后选择从硬盘启动，也可以拔出u盘</p></li><li><p><a href="https://github.com/codewindy/soft-common/blob/master/HWIDGen%2030.10.rar" target="_blank" rel="noopener">win10激活工具HWIDGen v52.01</a>下载和<a href="http://www.hasee.com/Chinese/drivers/drivers/index.php/Download/Index/model.html?id=525" target="_blank" rel="noopener">相应的驱动</a></p></li><li><p>直接Win键+X，打开Windows Powershell输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slmgr /skms kms.03k.org</span><br><span class="line">slmgr /ato</span><br><span class="line">最后可以cmd命令输入”slmgr.vbs -dlv”来查看windows10激活状态。</span><br></pre></td></tr></table></figure></li><li><p>最终效果如下<br><img src="https://i.loli.net/2019/10/04/W59GQXP2SuvmEx1.png" alt="151570158264_.pic_hd.jpg"></p></li><li><p>sn750 固态测速如下，感觉挺快的，质量一般<br><img src="https://i.loli.net/2019/11/20/AKyIxW2hPLsV6lX.png" alt="IMG_7039.PNG"></p><h1 id="四-问题解决"><a href="#四-问题解决" class="headerlink" title="四. 问题解决"></a>四. 问题解决</h1></li><li><p>记得安装所有驱动，包括游戏管理中心的驱动，会在任务管理器的性能选项中显示2个独立显卡</p></li><li><p>安装双系统之后重启进入win10会出现<a href="https://imac.hk/mac-os-x-windows-systme-time.html" target="_blank" rel="noopener">时间差8小时</a></p></li><li><p>win+x 进入管理员cmd模式执行代码</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1/</span><br></pre></td></tr></table></figure><ul><li><img src="https://i.loli.net/2019/10/03/P81dwv63MJDqzam.png" alt="IMG_6635.PNG"></li></ul><h1 id="五-参考"><a href="#五-参考" class="headerlink" title="五. 参考"></a>五. 参考</h1><ul><li><a href="https://www.isharepc.com/2137.html" target="_blank" rel="noopener">永久激活win10企业版</a></li><li><a href="ed2k://|file|cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso|4478906368|E7C526499308841A4A6D116C857DB669|/" target="_blank" rel="noopener">msdn.itellyou.cn</a> Windows 10 Enterprise LTSC 2019 (x64) - DVD (Chinese-Simplified) 系统下载</li><li><a href="https://u.diannaodian.com/" target="_blank" rel="noopener">电脑店pe制作工具</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果安装教程</title>
      <link href="2019/09/25/MacOS-Tutorial/"/>
      <url>2019/09/25/MacOS-Tutorial/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="MacOS-Install-Tutorial"><a href="#MacOS-Install-Tutorial" class="headerlink" title="MacOS Install Tutorial"></a>MacOS Install Tutorial</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>原先准备入手<strong>thinkpad x1 extreme gen2</strong>或<strong>MacBook pro</strong>，都需要额外买扩展坞迫于预算有限于是默默寻找黑苹果的适配机型<strong>z7-kp7gz</strong><a id="more"></a></li><li>硬件信息如下 总共花了 <strong>6249.9</strong> RMB<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">| Component | Model                                                        |</span><br><span class="line">| --------- | ------------------------------------------------------------ |</span><br><span class="line">| CPU       | Intel Core(TM) i7<span class="number">-8750</span>H                                      |</span><br><span class="line">| GPU       | Intel UHD630 / Nvidia GTX1060 (Z7m 为 <span class="number">1050</span>Ti；皆无法驱动)       |</span><br><span class="line">| RAM       | Micron Crucial <span class="number">8</span>GB+<span class="number">16</span>GB                                       |</span><br><span class="line">| NVMe      | WD Black SN750 NVME SSD <span class="number">500</span>G                                  |</span><br><span class="line">| SSD       | Phison SATA SSD <span class="number">128</span>G + <span class="number">1</span>T 机械硬盘                             |</span><br><span class="line">| Wireless  | Intel AC9462/<span class="number">9560</span>（无法驱动，已更换 BCM94360CS2）                |</span><br><span class="line">| Ethernet  | Realtek RTL8168H                                             |</span><br><span class="line">| Audio     | Realtek ALC269vc                                             |</span><br><span class="line"></span><br><span class="line"># What's working</span><br><span class="line"></span><br><span class="line">- 睿频、变频正常（使用 <span class="number">18</span> 款 MacBook Pro SMBIOS，最低 <span class="number">800</span>Mhz, 最高睿频 <span class="number">4.1</span>GHz）</span><br><span class="line">- Intel UHD630（已应用显存补丁，<span class="number">2048</span> MB）</span><br><span class="line">- 亮度调节（可在设置中调节或使用 Fn+F11, Fn+F12 快捷键）</span><br><span class="line">- I2C HID 触控板（需要正确驱动电池后才可以设置手势）</span><br><span class="line">- 有线网卡</span><br><span class="line">- 声音（ALC269vc, 使用 AppleALC 仿冒，注入 layout-id 为 <span class="number">88</span>，外放、耳机、麦克风全部正常）</span><br><span class="line">- 电池状态（现已使用 Clover Hotpatch 驱动）</span><br><span class="line">- USB （使用 USBInjectAll + SSDT 驱动，<span class="number">3.0</span> <span class="number">5</span>G/s 速度正常，Type-C 可用）</span><br><span class="line">- 睡眠（使用 Clover Hotpatch 修复）</span><br><span class="line">- etc.</span><br><span class="line"></span><br><span class="line">注：以上情况基于 KP7GZ 系列机型；对于使用其它机型的用户，可能会有一些功能不正常，请用户测试后反馈。</span><br><span class="line"></span><br><span class="line"># What's partial working</span><br><span class="line"></span><br><span class="line">- 蓝牙 (需要热启动 macOS 才可用，即先进入 Winodws 后重启进入 macOS、或者在 macOS 下使用虚拟机模拟热启动过程，不支持 AirDrop.)</span><br><span class="line"></span><br><span class="line"># What's not working</span><br><span class="line"></span><br><span class="line">- 独立显卡（GTX1060， 目前没有适用于 Mojave 的 Nvidia WebDriver）</span><br><span class="line">- 无线网卡（Intel AC9462 无解，使用蓝牙共享网络、USB共享网络或者USB网卡替代，或更换无线网卡）</span><br><span class="line">- **HDMI/MiniDP（该模具 HDMI/MiniDP 直接由独显输出, 独显无法驱动，所以 HDMI/MiniDP 也无法使用）**</span><br><span class="line">- 读卡器（读卡器走的 USB <span class="number">2.0</span> 外置，无法使用）</span><br><span class="line"></span><br><span class="line">注：请注意，目前已知的**所有**同方模具神舟战神机型（包括但不限于本 EFI 支持的所有机型），自带的 Nvidia 显卡 (无论是 <span class="number">1050</span>Ti, <span class="number">1060</span> 或所有 GTX <span class="number">16</span>/RTX <span class="number">20</span> 系显卡) ，在 <span class="number">10.13</span><span class="number">.6</span> 版本下**皆无法被正常识别并驱动**。目前针对此问题没有任何解决方案。我们建议不要把大好青春浪费在研究驱动独显上。关于外接显示器的解决方案，请参见硬件兼容性报告。</span><br><span class="line"></span><br><span class="line">**除非 Nvidia 官方更新 <span class="number">10.14</span> 的 WebDriver，否则独显、HDMI 不可用的问题将无法解决，请避免再提类似的 issues.**</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-准备条件"><a href="#二-准备条件" class="headerlink" title="二. 准备条件"></a>二. 准备条件</h1><ul><li>一个8G以上 u盘</li><li>下载刻录苹果系统MacOS到u盘的软件 <a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">etcher</a></li><li>下载<a href="https://blog.daliansky.net/macOS-Mojave-10.14.6-18G87-Release-version-with-Clover-5033-original-image.html" target="_blank" rel="noopener">黑果小兵</a>制作好的Mac系统 <a href="https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/" target="_blank" rel="noopener">macos_mojave_10.14.6_clover5033</a>  ,下载完后注意校验文件的md5值一致,保证系统文件完整.</li><li>Z7-kp7gz <a href="https://github.com/kirainmoe/hasee-tongfang-macos" target="_blank" rel="noopener">笔记本电脑对应的EFI</a></li><li>bcm94360cs2 NGFF转接卡 请自己淘宝</li></ul><h1 id="三-安装过程"><a href="#三-安装过程" class="headerlink" title="三.安装过程"></a>三.安装过程</h1><ul><li><font style="color:black; background:yellow">注意安装过程中不需要安装多次，即第一次从u盘启动，格式化硬盘后后面都是boot from mac启动</font></li><li>将电脑 D面的11个螺丝取下，断开内置电源排线，替换内置的无线网卡Intel AC9560为淘宝165元买的白苹果<code>bcm94360cs2</code>，注意安装NGFF转接卡的时候固定螺丝用电胶带绝缘处理，黑白色的天线也需要替换，向上拔就行</li><li><img src="https://i.loli.net/2019/09/24/A1YPOstH7yBRUCN.jpg" alt="IMG_6578.JPG"></li><li><img src="https://i.loli.net/2019/09/25/XIdeuJBRcy4pjri.jpg" alt="51569325210_.pic_hd copy.jpg"></li><li>注意首先按F2 进入bios将安全启动Secure Boot 改成 Disable</li><li>然后插入u盘 按F7 从u盘启动开始进入安装引导</li><li>点击磁盘工具，格式化需要安装的硬盘为apfs格式 GUID分区图</li><li><img src="https://i.loli.net/2019/09/24/WBDbdaNM596Ei1o.png" alt="14.png"></li><li>后面的步骤一直点击下一步即可直到进入macos系统</li><li>联网下载<a href="https://github.com/codewindy/mac_soft/blob/master/Clover%20Configurator.zip" target="_blank" rel="noopener">clover configuration</a>然后mount EFI分区，并替换成<a href="https://github.com/kirainmoe/hasee-tongfang-macos/releases/download/latest/kp7gz.zip" target="_blank" rel="noopener">github下载的z7-kp7gz</a></li><li><img src="https://i.loli.net/2019/09/25/MunhEyB5LPKVsji.png" alt="Screen Shot 2019-09-25 at 9.57.17 AM.png"></li><li><img src="https://i.loli.net/2019/09/25/Mn6pEXtsLx2wFcW.png" alt="Screen Shot 2019-09-25 at 9.59.26 AM.png"></li><li>执行以下优化shell脚本即可<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/kirainmoe/hasee-tongfang-macos/master/Addons/optimize.sh)"</span><br><span class="line">新脚本 curl -fsSL https://efi.kirainmoe.com/installer &gt; inst &amp;&amp; chmod +x ./inst &amp;&amp; sudo ./inst</span><br></pre></td></tr></table></figure></li></ul><h1 id="五-效果"><a href="#五-效果" class="headerlink" title="五. 效果"></a>五. 效果</h1><ul><li><p>优化后的效果如下</p></li><li><p><img src="https://i.loli.net/2019/12/16/NTlkZQPOjeUH8nB.jpg" alt="Xnip2019-11-23_13-34-53.jpg"></p></li><li><p><img src="https://i.loli.net/2020/03/10/qoLNDKrF1BUXvjg.jpg" alt="Xnip2020-03-03_22-30-12_cpu"></p><h1 id="六-问题解决"><a href="#六-问题解决" class="headerlink" title="六. 问题解决"></a>六. 问题解决</h1></li><li><p>常见：安装完成后重启发生内核 panic，卡在 <code>VTDecoderXPCService</code> 错误：请在 Clover 界面按 O，定位到显卡设置（带有 Graphics 字样），勾选 <strong>inject-intel</strong>，并修改 <strong>-platform-id</strong> 从 <strong>0x12345678</strong> 修改为 <font style="color:black; background:yellow">0x3E9B0000</font></p></li><li><p><img src="https://i.loli.net/2019/09/25/DicFNPE1T6hbzLx.jpg" alt="IMG_1005.JPG"></p></li><li><p>因重新安装win10到sn750 nvme固态硬盘上会在clover 引导启动项会多出冗余，直接进入u盘安装的PE系统打开 bootice 找到多余的启动项，我这里多余的是<code>Phison SATA SSD</code>里面的EFI文件，然后重启电脑进入macOS系统，直接打开<code>clover configurator</code>软件加载EFI，然后删除Microsoft文件夹后再次重启即可。</p></li><li><p><img src="https://i.loli.net/2019/11/20/EVbGyz3jLYalPcq.jpg" alt="IMG_9972.jpeg"></p></li><li><p><img src="https://i.loli.net/2019/11/21/Ot82967gcQGFPWJ.jpg" alt="Xnip2019-11-21_22-43-14.jpg"></p></li></ul><h1 id="七-升级tips"><a href="#七-升级tips" class="headerlink" title="七. 升级tips"></a>七. 升级tips</h1><ul><li><p><font style="color:black; background:yellow">如果你是第一次替换完配置文件，或者你在系统内 OTA 更新了新版本的系统，那么请在终端中执行以下命令重建 kext 缓存，并重启电脑：</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kextcache -i /</span><br></pre></td></tr></table></figure></li><li><p>解决电脑睡眠后摄像头问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo killall VDCAssistant</span><br></pre></td></tr></table></figure></li><li><p>解决macOS安装外部软件的问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br><span class="line">control + space 空格 切换系统自带输入法</span><br><span class="line">sudo scutil --<span class="keyword">set</span> HostName  windys-MacBook-Pro 修改电脑host名称 跟linux系统修改不同</span><br></pre></td></tr></table></figure></li><li><p>系统升级到Catalina10.15.1之后偶尔会卡死在GUI桌面上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -h now  </span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></li><li><p>macOS系统vim语法和配置刷新dns</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp -r /usr/share/vim/vimrc ~<span class="regexp">/.vimrc</span></span><br><span class="line"><span class="regexp">echo "syntax on"&gt;&gt;~/</span>.vimrc</span><br><span class="line">sudo killall -HUP mDNSResponder;</span><br><span class="line">sudo killall mDNSResponderHelper;</span><br><span class="line">sudo dscacheutil -flushcache</span><br></pre></td></tr></table></figure></li><li><p><a href="https://hackintosh.kirainmoe.com/an-zhuang-hou/chang-yong-ming-ling-he-you-hua#zheng-que-kai-qi-hidpi" target="_blank" rel="noopener">正确开启HIDPI</a></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">注意必须使用 1424x802 的分辨率，才能在休眠唤醒的时候不遇到四分之一屏和花屏。</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">使用以下代码开启（来自小米 Pro 的仓库）：</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">修改分辨率可以直接在系统设置里面选择显示Display来勾选对应的尺寸</span></span><br><span class="line">sh -c "$(curl -fsSL https://raw.githubusercontent.com/daliansky/XiaoMi-Pro-Hackintosh/master/one-key-hidpi/one-key-hidpi.sh)"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如要恢复，删除 <span class="comment">#/System/Library/Displays/Contents/Resources/Overrides/DisplayVendorID-9e5 即可。如果你是 Catalina 以上系统，你可能需要进入 Recovery 模式下挂载系统分区操作</span></span></span><br><span class="line">cd /Volumes/"Your System Disk Part"/System/Library/Displays/Contents/Resources/Overrides</span><br><span class="line">rm -rf ./DisplayVendorID-9e5</span><br><span class="line">cp -r ./backup/* ./</span><br></pre></td></tr></table></figure><ul><li><p><a href="https://zh.wikihow.com/%E5%9C%A8Mac%E4%B8%8A%E5%8F%B3%E9%94%AE%E7%82%B9%E5%87%BB" target="_blank" rel="noopener">在macOS系统下右键点击</a> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 直接按住control 并点击trackpad 触摸板</span><br><span class="line">2. 通过在设置里面找到trackpad 进行设置point&amp;click 找到Secondary click 选择自己喜欢的方式即可</span><br></pre></td></tr></table></figure></li><li><p>解决 10.14 以上系统字体渲染模糊</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</span><br></pre></td></tr></table></figure></li></ul><h1 id="八-参考"><a href="#八-参考" class="headerlink" title="八. 参考"></a>八. 参考</h1><ul><li><a href="https://blog.daliansky.net/" target="_blank" rel="noopener">黑果小兵</a> 下载MacOS 和 tutorial</li><li><a href="https://github.com/kirainmoe/hasee-tongfang-macos" target="_blank" rel="noopener">kirainmoe 战神kp7gz</a>下载 EFI 和安装运到的问题</li><li><a href="https://macdownload.org/" target="_blank" rel="noopener">mac软件下载 国外</a> </li><li><a href="https://macwk.com/" target="_blank" rel="noopener">mac精品软件下载</a></li><li><a href="https://xclient.info/" target="_blank" rel="noopener">精品mac应用分享</a></li><li><a href="https://aneeo.com/ios" target="_blank" rel="noopener">https://aneeo.com/ios </a></li><li><a href="http://en.haseecomputer.com/PC/detail_1078.html" target="_blank" rel="noopener">hasee kp7gz</a></li><li><a href="https://www.macappdownload.com/cleanmymac-x/" target="_blank" rel="noopener">macAppDownload.com</a></li><li><a href="https://www.appstorrent.ru/programs/" target="_blank" rel="noopener">appsTorrent.ru</a></li><li><a href="https://macwk.com/" target="_blank" rel="noopener">macwk</a></li><li><a href="https://mackie100projects.altervista.org/" target="_blank" rel="noopener">Clover Configurator</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中島 みゆき</title>
      <link href="2019/05/12/%E4%B8%AD%E5%B3%B6%E3%81%BF%E3%82%86%E3%81%8D/"/>
      <url>2019/05/12/%E4%B8%AD%E5%B3%B6%E3%81%BF%E3%82%86%E3%81%8D/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul><li><p><code>《無家可歸的小孩》家なき子</code></p><a id="more"></a><h2 id="中島-みゆき"><a href="#中島-みゆき" class="headerlink" title=" 中島 みゆき"></a> <a href="https://www.miyuki.jp/" target="_blank" rel="noopener">中島 みゆき</a></h2></li><li><p><code>中岛美雪91首精选</code></p><iframe width="560" height="315" src="https://www.bilibili.com/video/av47704670?from=search&seid=10905959108083544668" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></li><li><p><code>【MV】中岛美雪 -空と君のあいだに 中日字幕版</code></p><iframe width="560" height="315" src="https://www.youtube.com/embed/T90kWv7_zwk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.miyuki.jp/s/y10/?ima=2257" target="_blank" rel="noopener">中島みゆき オフィシャルサイト</a></li><li><a href="https://music.dmkt-sp.jp/album/A2000230558" target="_blank" rel="noopener">https://music.dmkt-sp.jp/album/A2000230558</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-Learning-Video</title>
      <link href="2019/04/16/Java-Learning/"/>
      <url>2019/04/16/Java-Learning/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="以下视频等资源仅供自己翻阅复习"><a href="#以下视频等资源仅供自己翻阅复习" class="headerlink" title="以下视频等资源仅供自己翻阅复习"></a>以下视频等资源仅供自己翻阅复习</h2><ul><li><strong>java编程</strong></li><li>【idea版本2019java就业班】 链接: <a href="https://pan.baidu.com/s/1gBV-EfRsql7UWZJ6NFbrig" target="_blank" rel="noopener">https://pan.baidu.com/s/1gBV-EfRsql7UWZJ6NFbrig</a> 提取码: 24xw </li><li>【冯佳java基础】 链接: <a href="https://pan.baidu.com/s/1PWcnlD1Pvq-P5V0XR7NAoA" target="_blank" rel="noopener">https://pan.baidu.com/s/1PWcnlD1Pvq-P5V0XR7NAoA</a> 提取码: tq2a </li></ul><a id="more"></a><ul><li><a href="https://drive.google.com/drive/folders/1KwXsGZmU5Xu49yG_BkSJohNuWfyE_96P" target="_blank" rel="noopener">极客时间_Goole Drive</a> 链接： <a href="https://drive.google.com/drive/folders/1KwXsGZmU5Xu49yG_BkSJohNuWfyE_96P" target="_blank" rel="noopener">https://drive.google.com/drive/folders/1KwXsGZmU5Xu49yG_BkSJohNuWfyE_96P</a></li><li>【传智大数据就业班完整版】 链接: <a href="https://pan.baidu.com/s/10aGKUQYWPdYc3Ijx04gzjQ" target="_blank" rel="noopener">https://pan.baidu.com/s/10aGKUQYWPdYc3Ijx04gzjQ</a> 提取码: srev </li><li>【RabbitMQ消息中间件技术精讲】 链接: <a href="https://pan.baidu.com/s/1Ob5OFHuO1QOjBNTclsC8Xg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Ob5OFHuO1QOjBNTclsC8Xg</a> 提取码: mg8t </li><li>【尚硅谷Java核心基础_2019年版】 链接: <a href="https://pan.baidu.com/s/1fDwPoilaWhKi2AuVSJ1EBw" target="_blank" rel="noopener">https://pan.baidu.com/s/1fDwPoilaWhKi2AuVSJ1EBw</a> 提取码: tryd </li><li>【Java并发编程与高并发解决方案(完整)】 链接: <a href="https://pan.baidu.com/s/1v-O6I3hx2ogiscKhYi_jhA" target="_blank" rel="noopener">https://pan.baidu.com/s/1v-O6I3hx2ogiscKhYi_jhA</a> 提取码: s6eu </li><li>【Kali Linux Tutorials】 链接: <a href="https://pan.baidu.com/s/1sJfETUvw9RTc5kyqP3qJ3A" target="_blank" rel="noopener">https://pan.baidu.com/s/1sJfETUvw9RTc5kyqP3qJ3A</a> 提取码: puny </li><li>【黑马c++全栈培训第24期】 链接: <a href="https://pan.baidu.com/s/1DSqfvEu8YVbKcPv6qzeA7g" target="_blank" rel="noopener">https://pan.baidu.com/s/1DSqfvEu8YVbKcPv6qzeA7g</a> 提取码: 1d2p</li><li>【葉子先生_ALL】 链接: <a href="https://pan.baidu.com/s/1keNhN4azjwBRlHILJhV48A" target="_blank" rel="noopener">https://pan.baidu.com/s/1keNhN4azjwBRlHILJhV48A</a> 提取码: p12i</li><li>【张志君 Mybatis+SpringMVC】 链接: <a href="https://pan.baidu.com/s/1Yndl_a8SaBcu5HnyK-nqqw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Yndl_a8SaBcu5HnyK-nqqw</a> 提取码: zi92 </li><li>【RouterOS tutorials】 链接: <a href="https://pan.baidu.com/s/1W99FZfTKYuvpipINlKQxBw" target="_blank" rel="noopener">https://pan.baidu.com/s/1W99FZfTKYuvpipINlKQxBw</a> 提取码: 37hy </li><li>【尚硅谷大数据技术之Spring 事务的传播行为】 链接: <a href="https://pan.baidu.com/s/11fyM2skl2VMjlt9S80xXgA" target="_blank" rel="noopener">https://pan.baidu.com/s/11fyM2skl2VMjlt9S80xXgA</a> 提取码: nygj  </li><li>【尚硅谷SpringCloud视频】 链接: <a href="https://pan.baidu.com/s/1cuznabCfvA36lBSSSM0fzw" target="_blank" rel="noopener">https://pan.baidu.com/s/1cuznabCfvA36lBSSSM0fzw</a> 提取码: suqc </li><li>【Spring Cloud微服务实战】 链接: <a href="https://pan.baidu.com/s/1EOm95PDwlpUlzgIOfR4WnA" target="_blank" rel="noopener">https://pan.baidu.com/s/1EOm95PDwlpUlzgIOfR4WnA</a> 提取码: 9ysb  </li><li>【长投理财_ALL】 链接: <a href="https://pan.baidu.com/s/154u0B8b6aGFKahRrwzcPng" target="_blank" rel="noopener">https://pan.baidu.com/s/154u0B8b6aGFKahRrwzcPng</a> 提取码: a861</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打不开网页,重置ie浏览器</title>
      <link href="2018/12/15/reset-ie-broswer/"/>
      <url>2018/12/15/reset-ie-broswer/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="重置ie浏览器"><a href="#重置ie浏览器" class="headerlink" title="重置ie浏览器"></a>重置ie浏览器</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>电脑设置代理关掉后会经常出现不能打开网页的情况<a id="more"></a></li></ul><h1 id="二-解决"><a href="#二-解决" class="headerlink" title="二. 解决"></a>二. 解决</h1><ul><li>在win10下新建一个bat脚本文件并执行<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rundll32 inetcpl.cpl ResetIEtoDefaults</span><br><span class="line">set p=rundll32 inetcpl.cpl ResetIEtoDefaults</span><br><span class="line">set q=reset successful</span><br><span class="line">echo %p%</span><br><span class="line">echo %q%</span><br><span class="line">)</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux操作系统加固和经验总结</title>
      <link href="2018/11/21/Aliyun-Linux-tips/"/>
      <url>2018/11/21/Aliyun-Linux-tips/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Linux-tips-from-aliyun"><a href="#Linux-tips-from-aliyun" class="headerlink" title="Linux tips from aliyun"></a>Linux tips from aliyun</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li><p>整理出开发中常见的笔记，发现阿里云上有已经很不错的参考文档</p></li><li><p>前几天同事<code>rm -rf  /data/</code>不小心删除了服务器的文件导致了事故</p><a id="more"></a></li><li><p><img src="https://i.loli.net/2019/11/21/idqaSKc9sgMHeQR.jpg" alt="Xnip2019-11-21_22-08-49.jpg"></p><h1 id="二-步骤"><a href="#二-步骤" class="headerlink" title="二. 步骤"></a>二. 步骤</h1></li><li><p>以后执行rm -rf 替换成mv /tmp目录，然后再写crontab script 每隔7天定时清空/tmp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. 在/usr/local/bin/目录下vim rm2tmp.sh</span><br><span class="line">  TRASH_DIR=/tmp/.trash"  </span><br><span class="line">  for i in $*; do  </span><br><span class="line">  STAMP=`date +%m-%d-%H:%M:%S`  </span><br><span class="line">  fileName=`basename $i`  </span><br><span class="line">  mv $i $TRASH_DIR/$fileName.$STAMP  </span><br><span class="line">  done</span><br><span class="line">2. vim ~/.bashrc 在底部添加 alias rm="sh /usr/local/bin/rm2tmp.sh"</span><br><span class="line">   然后source ~/.bashrc</span><br><span class="line">3. 最后 crontab -e 新增 0 2 * * 0 rm -rf /tmp/.trash 每周日凌晨2点删除/tmp目录下的垃圾文件</span><br></pre></td></tr></table></figure></li><li><p><code>find ./ sort | xargs md5</code> 查看当前目录下排序后的文件md5</p></li><li><p><code>ubuntu</code>修改默认内核版本以及禁止自动升级 <code>https://www.jianshu.com/p/c76bc5e113f1</code></p></li><li><p><code>ubuntu</code> 默认<code>desktop</code>版本会安装dnsmasq，修改<code>/etc/resolv.conf</code>重启后不会生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> cat /etc/resolv.conf </span><br><span class="line"><span class="meta">#</span> Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)</span><br><span class="line"><span class="meta">#</span>     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN       注意看：</span><br><span class="line"></span><br><span class="line">1 /etc/resolv.conf 其实是一个Link</span><br><span class="line"></span><br><span class="line">它其实指向的是 /run/resolvconf/resolv.conf </span><br><span class="line"></span><br><span class="line">3 如果想自己定义 nameserver，那么有以下2个办法：</span><br><span class="line"></span><br><span class="line">A 在网卡的配置文件/etc/network/interfaces 里面加：</span><br><span class="line"></span><br><span class="line">dns-nameservers 192.168.3.45 192.168.8.10</span><br><span class="line"></span><br><span class="line">dns-search foo.org bar.com </span><br><span class="line"></span><br><span class="line">重启网络</span><br><span class="line"></span><br><span class="line">sudo service networking restart </span><br><span class="line">或者</span><br><span class="line">sudo /etc/init.d/networking restart</span><br><span class="line">也可以重启网卡</span><br><span class="line">sudo ifconfig eth0 down </span><br><span class="line">sudo ifconfig eth0 up</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">B 修改 resolvconf服务的配置文件: /etc/resolvconf/resolv.conf.d/base </span><br><span class="line"></span><br><span class="line">echo "search test.com" &gt;&gt; /etc/resolvconf/resolv.conf.d/base </span><br><span class="line">echo "nameserver 202.106.0.20 " &gt;&gt; /etc/resolvconf/resolv.conf.d/base </span><br><span class="line">这样，在机器重启或 resolvconf 服务重启 都可以保证配置会写到/etc/resolv.conf 里面 </span><br><span class="line"></span><br><span class="line">重启 resolvconf 服务</span><br><span class="line"></span><br><span class="line">service resolvconf restart</span><br><span class="line"></span><br><span class="line">A比B的优先级更高,,不过可能会断网.</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-参考"><a href="#三-参考" class="headerlink" title="三. 参考"></a>三. 参考</h1><ul><li><a href="https://help.aliyun.com/knowledge_detail/49809.html" target="_blank" rel="noopener"> Linux操作系统加固</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPhone 广告限制🚫</title>
      <link href="2018/11/04/ios-adblock/"/>
      <url>2018/11/04/ios-adblock/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="iPhone广告问题处理"><a href="#iPhone广告问题处理" class="headerlink" title="iPhone广告问题处理"></a>iPhone广告问题处理</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>目前日常使用的是2018年5月份在香港🇭🇰中环ifc一楼apple store购入的iPhone 8 plus港版256G</li><li>经常会在淘宝和京东或Safari等浏览器app上看到自己说过或者查询过的商品，一开始还以为是大数据推荐算法，后面发现其实更改一下设置即可屏蔽<code>advertisement</code></li></ul><a id="more"></a><h1 id="二-解决"><a href="#二-解决" class="headerlink" title="二. 解决"></a>二. 解决</h1><ul><li>打开<strong>设置</strong>  选择<strong>隐私</strong>  然后选中<strong>广告</strong></li><li><img src="https://i.loli.net/2019/11/04/dGfhZquQWbVL1mR.png" alt="IMG_6751.PNG"></li><li>打开限制广告追踪即可屏蔽掉广告</li><li>还可以在jd或者taobao等app上 逐一关闭语音和相机📷允许按钮</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> iPhone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>善于搜索自己需要的资源</title>
      <link href="2018/09/03/MASTER-OF-SEARCH/"/>
      <url>2018/09/03/MASTER-OF-SEARCH/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="MASTER-OF-SEARCH"><a href="#MASTER-OF-SEARCH" class="headerlink" title="MASTER OF SEARCH"></a>MASTER OF SEARCH</h2><h2 id="学会获取自己想要的学习资源"><a href="#学会获取自己想要的学习资源" class="headerlink" title="学会获取自己想要的学习资源"></a>学会获取自己想要的学习资源</h2><ul><li><a href="http://pandownload.com/" target="_blank" rel="noopener">http://pandownload.com/</a> 下载并保存资源到百度云</li><li><a href="https://yandex.ru/" target="_blank" rel="noopener">https://yandex.ru/</a> 俄罗斯的搜索引擎,一般用于搜索开发中运到的bug等</li><li><a href="https://rsload.net/" target="_blank" rel="noopener">https://rsload.net/</a>  一般用于下载win软件的时候使用的帐号密码都是<strong>rsload.net</strong></li><li><a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a>  免费好用的图床</li><li><a id="more"></a><h2 id="下载安装后登录百度账号就可以了"><a href="#下载安装后登录百度账号就可以了" class="headerlink" title="下载安装后登录百度账号就可以了"></a>下载安装后登录百度账号就可以了</h2></li><li><a href="http://pandownload.com/" target="_blank" rel="noopener">pandownload </a>下载后在里面搜索<strong>一般用于找java开发、极客时间等资源</strong></li><li><a href="https://www.lanzous.com/i7xao2b" target="_blank" rel="noopener">亿寻v0.1.0065.zip</a></li><li><img src="https://i.loli.net/2019/09/03/SMr6m3qGyXRVAJ7.png" alt="截图如下"></li><li><a href="https://rsload.net/" target="_blank" rel="noopener">https://rsload.net/</a>  一般用于下载win软件的时候使用的帐号密码都是<strong>rsload.net</strong></li><li><img src="https://i.loli.net/2019/09/04/mIvdk5W4yc8VZpM.png" alt="rsload.net"></li><li><a href="https://jd.ma/" target="_blank" rel="noopener">https://jd.ma/</a> 在<code>https://t.me/JDMa1</code>里面有很多百度云java等资源链接</li><li><a href="https://t.me/shikeycom" target="_blank" rel="noopener">https://shikey.com/</a> </li><li><a href="https://alkt.lanzoui.com/iDWoxgdkowf" target="_blank" rel="noopener">百度云下载加速工具</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RouterOS抓包恢复PPPOE密码</title>
      <link href="2018/05/01/RouterOS_PPPOE_PacketSniffer/"/>
      <url>2018/05/01/RouterOS_PPPOE_PacketSniffer/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="RouterOS-PPPOE-Session-Password-Packet-Sniffer"><a href="#RouterOS-PPPOE-Session-Password-Packet-Sniffer" class="headerlink" title="RouterOS PPPOE(Session) Password Packet Sniffer "></a>RouterOS PPPOE(Session) Password Packet Sniffer </h2><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>老家的破旧路由器跟不上现在的需求,想升级成更好的,但是宽带密码忘了,管理员密码也不记得了,如何恢复<strong>PPPOE</strong>密码?<a id="more"></a><h1 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h1></li><li>安装了虚拟机<strong>VMware</strong>的电脑并导入<a href="https://github.com/codewindy/soft-common/blob/master/MikroTik-RouterOS-6.44.2_crackzsoft.com.ova" target="_blank" rel="noopener">routeros6.44.2</a>镜像或淘宝<strong>rb750gr3</strong>等</li><li>网线一根</li><li><a href="https://rsload.net/soft/10943-vmware-workstation.html" target="_blank" rel="noopener">VMWARE 虚拟机</a> 下载</li><li><a href="https://2.na.dl.wireshark.org/win64/Wireshark-win64-3.0.1.exe" target="_blank" rel="noopener">wireshark</a> 下载</li><li><a href="https://mikrotik.com/download#" target="_blank" rel="noopener">winbox </a> 客户端</li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><ul><li><p>考虑到我买的rb750gr3不具有通用性及经济实惠性,我后面都采用虚拟机来实现<br><img src="https://i.loli.net/2019/05/02/5ccaa3bb59313.png" alt="2019-05-02_153951_000.png"></p><p><img src="https://i.loli.net/2019/05/02/5ccaa3bc747cc.png" alt="2019-05-02_150656_001.png"></p><p><img src="https://i.loli.net/2019/05/02/5ccaa3be60e45.png" alt="2019-05-02_151738_002.png"></p><p><img src="https://i.loli.net/2019/05/02/5ccaa3bd57277.png" alt="2019-05-02_152312_003.png"></p></li><li><p>先将家里老旧路由器的  <font style="color:black; background:yellow"> WAN口 </font>  插上网线连接到电脑的 <strong>RJ45网口</strong> </p></li><li><p>打开虚拟机<strong>vmware</strong> 导入 <a href="https://github.com/codewindy/soft-common/blob/master/MikroTik-RouterOS-6.44.2_crackzsoft.com.ova" target="_blank" rel="noopener">routeros 镜像</a>, 桥接到<strong><code>物理网卡</code></strong></p></li><li><p>下载并打开<strong>winbox</strong>客户端,并通过<strong>winbox</strong> 来登录ros,默认帐号是 <strong>admin</strong> 密码是 <strong>空</strong></p><p><img src="https://i.loli.net/2019/05/02/5ccaa3be54129.png" alt="2019-05-02_152916_004.png"></p><p><img src="https://i.loli.net/2019/05/02/5ccaa3becc873.png" alt="2019-05-02_153222_005.png"></p><p><img src="https://i.loli.net/2019/05/02/5ccaa3ba5e19d.png" alt="2019-05-02_153852_007.png"></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[admin@fsm] &gt; ip export </span><br><span class="line"><span class="meta">#</span><span class="bash"> may/02/2019 15:45:48 by RouterOS 6.44.2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> software id = ZJ3M-ESHW</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">/ip pool</span><br><span class="line">add name=pool1 ranges=10.16.0.2-10.16.0.254</span><br><span class="line">/ip address</span><br><span class="line">add address=192.168.199.22/24 comment=defconf interface=ether1 network=192.168.199.0</span><br><span class="line">add address=192.168.199.122/24 interface=ether1 network=192.168.199.0</span><br><span class="line">/ip cloud</span><br><span class="line">set update-time=no</span><br><span class="line">/ip dhcp-client</span><br><span class="line">add dhcp-options=hostname,clientid disabled=no interface=ether1</span><br><span class="line">/ip dns</span><br><span class="line">set allow-remote-requests=yes servers=192.168.199.1</span><br><span class="line">/ip firewall nat</span><br><span class="line">add action=masquerade chain=srcnat out-interface-list=WAN</span><br><span class="line">/ip route</span><br><span class="line">add disabled=yes distance=1 gateway=192.168.199.1</span><br><span class="line">[admin@fsm] &gt; ppp export </span><br><span class="line"><span class="meta">#</span><span class="bash"> may/02/2019 15:45:52 by RouterOS 6.44.2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> software id = ZJ3M-ESHW</span></span><br><span class="line"></span><br><span class="line">/ppp profile</span><br><span class="line">add dns-server=223.5.5.5 local-address=10.16.0.1 name=8M remote-address=pool1</span><br></pre></td></tr></table></figure><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><ul><li><strong>chap ** 认证过程是md5加密的,但是</strong>pap <strong>是明文认证方式,所以我们通过ros伪造</strong>pppoe**服务器来抓包获取</li><li><a href="http://blog.sina.com.cn/s/blog_5384e78b0100fhno.html" target="_blank" rel="noopener">PPP-PAP认证原理</a></li><li><a href="http://blog.sina.com.cn/s/blog_5384e78b0100fhnr.html" target="_blank" rel="noopener">PPP-CHAP认证原理</a><blockquote><p>PPP提供了两种可选的身份认证方法：口令验证协议PAP（Password Authentication Protocol，PAP）和质询握手协议（Challenge Handshake Authentication Protocol，CHAP）。如果双方协商达成一致，也可以不使用任何身份认证方法。　　CHAP认证比PAP认证更安全，因为CHAP不在线路上发送明文密码，而是发送经过摘要算法加工过的随机序列，也 被称为”挑战字符串”.如图所示。同时，身份认证可以随时进行，包括在双方正常通信过程中。因此，非法用户就算截获并成功破解了一次密码，此密码也将在 一段时间内失效<br><img src="https://i.loli.net/2019/05/02/5cca8c8d6a894.jpg" alt="chap认证过程">)) </p></blockquote></li></ul><ul><li><strong>使用Java代码来创建和解析出账号密码</strong><br><img src="https://i.loli.net/2020/04/05/tlpzI5nU2fwXQbu.png" alt="PPPoE processon"></li><li><a href="https://github.com/codewindy/JavaTutorials" target="_blank" rel="noopener">项目地址</a> <code>https://github.com/codewindy/JavaTutorials</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codewindy.mongodb.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.CharsetUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.extra.ssh.JschUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.extra.ssh.Sftp;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.mongodb.pojo.ApiResult;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.mongodb.pojo.PppoeDetail;</span><br><span class="line"><span class="keyword">import</span> com.codewindy.mongodb.service.MikrotikService;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> me.legrange.mikrotik.ApiConnection;</span><br><span class="line"><span class="keyword">import</span> me.legrange.mikrotik.MikrotikApiException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> codewindy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@desc</span> &lt;a href="https://wiki.mikrotik.com/wiki/Manual:RouterOS_features"&gt;RouterOS_features&lt;/&gt;</span></span><br><span class="line"><span class="comment"> *       RouterOS is MikroTik's stand-alone operating system based on linux v3.3.5 kernel.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-03-25 9:44 PM</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MikrotikServiceImpl</span> <span class="keyword">implements</span> <span class="title">MikrotikService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiResult <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        ApiConnection con = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// connect to router</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            con = initApiConnection(username, password);</span><br><span class="line">            <span class="comment">// log in to router</span></span><br><span class="line">            List&lt;Map&lt;String, String&gt;&gt; execute = con.execute(<span class="string">"/ip/address/print"</span>);</span><br><span class="line">            <span class="comment">// execute a command</span></span><br><span class="line">            con.close();</span><br><span class="line">            <span class="comment">// disconnect from router</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(execute);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (MikrotikApiException e) &#123;</span><br><span class="line">            log.info(<span class="string">"登录RouterOS失败 = &#123;&#125;"</span>, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    /ip pool add name=pppoe_pool1 ranges=10.10.10.2-10.10.10.254</span></span><br><span class="line"><span class="comment">    /ppp profile add name=pppoe_profile local-address=10.10.10.1 remote-address=pppoe_pool1</span></span><br><span class="line"><span class="comment">    /interface pppoe-server server add authentication=pap service-name=PPPoE_Server interface=wan one-session-per-host=yes default-profile=pppoe_profile</span></span><br><span class="line"><span class="comment">    Mikrotik API 调用和直接winbox的不同，需要添加/ 转义</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiResult <span class="title">createPPPOEServer</span><span class="params">(String ipPoolRange)</span> </span>&#123;</span><br><span class="line">        ApiConnection con = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// connect to router</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            con = initApiConnection(<span class="string">"admin"</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="comment">// log in to router</span></span><br><span class="line">            con.execute(<span class="string">"/ip/pool/print"</span>);</span><br><span class="line">            con.execute(<span class="string">"/ip/pool/add name=pool1 ranges=10.10.10.2-10.10.20.1"</span>);</span><br><span class="line">            con.execute(<span class="string">"/ppp/profile/add name=pppoe_10M remote-address=pool1"</span>);</span><br><span class="line">            con.execute(<span class="string">"/ppp/secret/add name=0327 password=0327Test service=pppoe profile=pppoe_10M"</span>);</span><br><span class="line">            con.execute(<span class="string">"/interface/pppoe-server/server/add authentication=pap service-name=PPPoE_Server interface=ether1 one-session-per-host=yes default-profile=pppoe_10M"</span>);</span><br><span class="line">            con.execute(<span class="string">"/interface/pppoe-server/server/enable numbers=0"</span>);</span><br><span class="line">            <span class="comment">//开始执行抓包pppoe-session file-limit=10KiB  控制文件大小 内存好像没起作用</span></span><br><span class="line">            String command4capFileName = <span class="string">"/tool/sniffer/set file-name=%s.cap filter-mac-protocol=pppoe file-limit=10KiB memory-limit=10KiB"</span>;</span><br><span class="line">            con.execute(String.format(command4capFileName, DateUtil.today()));</span><br><span class="line">            log.info(<span class="string">"开始执行抓包pppoe-session===&#123;&#125;"</span>, String.format(command4capFileName, DateUtil.today()));</span><br><span class="line">            con.execute(<span class="string">"/tool/sniffer/start mac-protocol=pppoe interface=ether1 direction=rx"</span>);</span><br><span class="line">            List&lt;Map&lt;String, String&gt;&gt; resultMapList = con.execute(<span class="string">"/file/print"</span>);</span><br><span class="line">            <span class="keyword">for</span> (Map&lt;String, String&gt; fileMap : resultMapList) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((fileMap.get(<span class="string">"type"</span>).contains(<span class="string">".cap"</span>) || fileMap.get(<span class="string">"type"</span>).contains(<span class="string">".pcap"</span>))&amp;&amp; Integer.parseInt(fileMap.get(<span class="string">"size"</span>))&gt;<span class="number">1000</span>)&#123;</span><br><span class="line">                    <span class="comment">//创建pppoe服务器抓包时候控制文件size 一般大于2000B 就无法执行file print detail，即不能在terminal上解析报文了</span></span><br><span class="line">                    con.execute(<span class="string">"/tool/sniffer/stop"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(<span class="string">"初始化pppoe服务器成功!"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MikrotikApiException e) &#123;</span><br><span class="line">            log.info(<span class="string">"登录RouterOS失败 = &#123;&#125;"</span>, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiConnection <span class="title">initApiConnection</span><span class="params">(String username, String password)</span> <span class="keyword">throws</span> MikrotikApiException </span>&#123;</span><br><span class="line">        ApiConnection con;</span><br><span class="line">        con = ApiConnection.connect(<span class="string">"192.168.2.2"</span>);</span><br><span class="line">        con.setTimeout(<span class="number">5000</span>);</span><br><span class="line">        <span class="comment">// set command timeout to 5 seconds</span></span><br><span class="line">        con.login(username, password);</span><br><span class="line">        <span class="keyword">return</span> con;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析后的json中包含了\u0000 空格</span></span><br><span class="line"><span class="comment">     *  &#123;</span></span><br><span class="line"><span class="comment">     *         "account": "test4pppoe",</span></span><br><span class="line"><span class="comment">     *         "password": "123456Test\u0000\u0000\u0000\u0000\u0000\u0000"</span></span><br><span class="line"><span class="comment">     *     &#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiResult <span class="title">getPcapFileDetail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ApiConnection con = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// connect to router</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            con = initApiConnection(<span class="string">"admin"</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="comment">// log in to router</span></span><br><span class="line">            List&lt;Map&lt;String, String&gt;&gt; resultMapList = con.execute(<span class="string">"/file/print"</span>);</span><br><span class="line">            resultMapList.stream().filter(s -&gt; s.get(<span class="string">"type"</span>).contains(<span class="string">".cap"</span>) || s.get(<span class="string">"type"</span>).contains(<span class="string">".pcap"</span>)).forEach(s -&gt; System.out.println(<span class="string">"pcap报文的size="</span>+s.get(<span class="string">"size"</span>)));</span><br><span class="line">            <span class="comment">//获取每个cap数据包里面的content</span></span><br><span class="line">            List&lt;String&gt; contentList = resultMapList.stream().filter(s -&gt; s.get(<span class="string">"type"</span>).contains(<span class="string">".cap"</span>) || s.get(<span class="string">"type"</span>).contains(<span class="string">".pcap"</span>)).map(s -&gt; s.get(<span class="string">"contents"</span>)).collect(Collectors.toList());</span><br><span class="line">            <span class="comment">//获取每个content里面的pppoe 账号密码</span></span><br><span class="line">            Set&lt;String&gt; pppoeAccountSet = contentList.stream().filter(content -&gt; content.contains(<span class="string">"user"</span>)&amp;&amp; content.contains(<span class="string">"authentication"</span>)).map(content -&gt; StrUtil.subBetween(content, <span class="string">"user"</span>, <span class="string">"authentication"</span>).trim()).collect(Collectors.toSet());</span><br><span class="line">            List&lt;PppoeDetail&gt; pppoeDetailList = Lists.newArrayListWithCapacity(pppoeAccountSet.size());</span><br><span class="line">            <span class="keyword">for</span> (String pppoeAccount : pppoeAccountSet) &#123;</span><br><span class="line">                List&lt;String&gt; passwordlist = contentList.stream().filter(content-&gt;content.contains(pppoeAccount)).map(content -&gt; StrUtil.subBetween(content, pppoeAccount, <span class="string">"\u0000"</span>).trim()).distinct().collect(Collectors.toList());</span><br><span class="line">                PppoeDetail pppoeDetail = <span class="keyword">new</span> PppoeDetail();</span><br><span class="line">                pppoeDetail.setAccount(pppoeAccount);</span><br><span class="line">                <span class="keyword">if</span> (!CollectionUtils.isEmpty(passwordlist)) &#123;</span><br><span class="line">                    <span class="comment">//直接截取字符串 去除了二进制流中的乱码 \u0000空格 �LV</span></span><br><span class="line">                    pppoeDetail.setPassword(StrUtil.subPre(passwordlist.get(<span class="number">0</span>),<span class="number">16</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                pppoeDetailList.add(pppoeDetail);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// execute a command</span></span><br><span class="line">            con.close();</span><br><span class="line">            <span class="comment">// disconnect from router</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(pppoeDetailList);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MikrotikApiException e) &#123;</span><br><span class="line">            log.info(<span class="string">"获取PPPOESession详情失败 = &#123;&#125;"</span>, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiResult <span class="title">downloadPPPOESession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//下载Packet Sniffer下载创建的pcap文件</span></span><br><span class="line">        <span class="comment">//TODO</span></span><br><span class="line">        <span class="comment">//1. 不能直接抓去pppoe-session的数据</span></span><br><span class="line">        <span class="comment">//2. pppoe 服务器的ip 地址动态传入</span></span><br><span class="line">        <span class="comment">//3. 切换网络会出现winbox退出</span></span><br><span class="line">        <span class="comment">//4. file print detail 不能查看2kb之外大文件，无法解析出contents内容</span></span><br><span class="line">        <span class="comment">//5. 登录接口只调用一次，使用redis缓存账号密码</span></span><br><span class="line">        <span class="comment">//6. 统一修改接口返回参数 T data</span></span><br><span class="line">        <span class="comment">//7. 使用vim 或cat 来解析cap或pcap抓包文件</span></span><br><span class="line">        <span class="comment">//ApiConnection con = null;</span></span><br><span class="line">        <span class="comment">// connect to router</span></span><br><span class="line">        <span class="comment">//C:\WBYF_IDEA</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">// con = initApiConnection("admin", "");</span></span><br><span class="line">            <span class="comment">// log in to router</span></span><br><span class="line">            <span class="comment">//List&lt;Map&lt;String, String&gt;&gt; resultMapList = con.execute("/file/print");</span></span><br><span class="line">            Sftp sftp= JschUtil.createSftp(<span class="string">"192.168.2.2"</span>, <span class="number">22</span>, <span class="string">"admin"</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="comment">//进入远程目录</span></span><br><span class="line">            sftp.cd(<span class="string">"/"</span>);</span><br><span class="line">            log.info(<span class="string">"获取sftp文件当前路径"</span>,sftp.pwd());</span><br><span class="line">            log.info(<span class="string">"显示当前目录下的文件"</span>,sftp.ls(<span class="string">"/"</span>));</span><br><span class="line">            List&lt;String&gt; fileList = sftp.ls(<span class="string">"/"</span>);</span><br><span class="line">            <span class="comment">//下载远程文件</span></span><br><span class="line">            fileList.stream().filter(s -&gt; s.contains(<span class="string">".cap"</span>) || s.contains(<span class="string">".pcap"</span>)).forEach(capFile -&gt; sftp.get(capFile, <span class="string">"C:\\WBYF_IDEA\\"</span>));</span><br><span class="line">            <span class="comment">//上传本地文件</span></span><br><span class="line">            <span class="comment">//sftp.put("e:/test.jpg", "/opt/upload");</span></span><br><span class="line">            <span class="comment">//sftp.get("0325.cap", "C:\\WBYF_IDEA\\");</span></span><br><span class="line">            <span class="comment">//关闭连接</span></span><br><span class="line">           <span class="comment">// List&lt;String&gt; strings = FileUtil.readUtf8Lines("C:\\WBYF_IDEA\\0325.cap");</span></span><br><span class="line"></span><br><span class="line">            sftp.close();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(<span class="string">"下载pcap数据文件成功"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">"下载pcap抓包文件失败 = &#123;&#125;"</span>, e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ApiResult(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiResult <span class="title">parseLocalPcapFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//String localPwd = System.getProperty("user.dir");</span></span><br><span class="line"></span><br><span class="line">        String path =<span class="string">"C:\\WBYF_IDEA\\JavaTutorials\\mongodb\\src\\main\\resources\\pcap"</span>;</span><br><span class="line">        List&lt;String&gt; fileList = FileUtil.listFileNames(path);</span><br><span class="line">        List&lt;String&gt; parsedStringList = Lists.newArrayListWithCapacity(fileList.size());</span><br><span class="line">        <span class="keyword">for</span> (String pcapFileName : fileList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pcapFileName.contains(<span class="string">".cap"</span>)||pcapFileName.contains(<span class="string">".pcap"</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">"pcapFileName = "</span> + path+File.separator+pcapFileName);</span><br><span class="line">                String parsedString = FileUtil.readString(path+File.separator+pcapFileName, CharsetUtil.UTF_8);</span><br><span class="line">                parsedStringList.add(parsedString);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//System.out.println("path = " + path);</span></span><br><span class="line">        <span class="comment">//已经获取到解析好的pcap二进制流数据转String了，接下来分批去重提取账号密码</span></span><br><span class="line">        <span class="comment">//1， winbox公用api端口会被挤下线</span></span><br><span class="line">        <span class="comment">//2. mac地址修改成和服务器一样的</span></span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> ApiResult(parsedStringList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><ul><li>使用wireshark 打开抓到的cap 报文即可.<br><img src="https://i.loli.net/2019/05/02/5ccaa3bdac0fa.png" alt="2019-05-02_153339_006.png"></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.ich8.com/post/3699" target="_blank" rel="noopener">抓包获取PPPOE账号密码</a></li><li><a href="https://blog.csdn.net/vivianliulu/article/details/77449780" target="_blank" rel="noopener">pppoe源码分析</a></li><li><a href="https://crackzsoft.com/mikrotik-routeros/" target="_blank" rel="noopener">mikrotik routeros 6.44.2 LEVEL 6 FOR VMWARE + CRACK</a></li><li><a href="http://demo2.mt.lv/webfig/" target="_blank" rel="noopener">mikrotik demo</a> MikroTik RouterOS online demo</li><li><a href="https://wiki.edcwifi.com/index.php?title=MikroTik%E6%89%8B%E5%86%8C" target="_blank" rel="noopener">MikroTik手册</a></li><li><a href="https://download.edcwifi.com/index.php?title=MikroTik%E6%89%8B%E5%86%8C" target="_blank" rel="noopener">EDCwifi.com</a></li><li><a href="http://www.rosjb.com" target="_blank" rel="noopener">pppoe自动到期通知</a></li><li><a href="https://gitee.com/jkwindy/pic4blog2/blob/master/RouterOS_RECOVER_PPPOE_PASSWORD/routeros%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Av637e.pdf" target="_blank" rel="noopener">routeros入门到精通v637e.pdf</a></li><li><a href="https://wiki.mikrotik.com/wiki/Manual:Tools/Packet_Sniffer" target="_blank" rel="noopener">Packet_Sniffer</a> </li><li><a href="https://wiki.mikrotik.com/wiki/Manual:Interface/PPPoE" target="_blank" rel="noopener">PPPOE Protocal diagram</a></li><li><a href="https://space.bilibili.com/434853043spm_id_from=333.788.b_765f7570696e666f.2" target="_blank" rel="noopener">ros大玩家</a> 视频教程 <code>QQ：1247004718（微信同号）</code></li><li><a href="https://www.edcwifi.com.cn/wiki/13.pdf" target="_blank" rel="noopener">RouterOS  edcwifi</a></li><li><a href="https://tools.ietf.org/pdf/rfc2516.pdf" target="_blank" rel="noopener">rfc2516.pdf</a> <code>datatracker.ietf.org/doc/rfc2516</code></li><li><a href="https://github.com/GideonLeGrange/mikrotik-java" target="_blank" rel="noopener">GideonLeGrange-mikrotik-java</a>  Mikrotik Java API Client</li><li><a href="https://stefenson.github.io/tags/PPPoE/" target="_blank" rel="noopener">PPPoE服务器编写</a></li><li><a href="[http://www.roslm.com:82/index.php?dir=/002.%E8%B7%AF%E7%94%B1%E4%B8%93%E5%8C%BA](http://www.roslm.com:82/index.php?dir=/002.路由专区)">https://www.ros9.com/index.php</a></li><li><a href="https://docs.google.com/file/d/0ByWLVUEElhsmLXhBeEt3MHk1U2s/edit" target="_blank" rel="noopener">HunterTik2.3.1.iso</a></li><li><a href="https://www.huakings.cn/post/216.html" target="_blank" rel="noopener">X86 3865U安装ROS+LEDE双软路由(重要插件)</a></li><li><a href="https://stubarea51.net/2020/02/15/mikrotik-routerosv7-first-look-vxlan/" target="_blank" rel="noopener">mikrotik-routerosv7-first-look-vxlan</a></li><li><a href="https://help.mikrotik.com/docs/display/ROS/RouterOS" target="_blank" rel="noopener">Mikrotik jira docs</a></li><li><a href="https://mirrors.dtops.cc/iso/ros5.25_1G/" target="_blank" rel="noopener">MikroTik 5.25</a></li><li><a href="https://www.edcwifi.com.cn/project/afc_api/Public/Uploads/2019-10-17/5da816a82f565.pdf" target="_blank" rel="noopener">RouterOS wifi</a></li><li><a href="https://mikrotik.com/download/archive" target="_blank" rel="noopener">mikrotik archive</a></li><li><a href="https://kkslinuxinfo.wordpress.com/category/mikrotik-routeros/" target="_blank" rel="noopener">RouterOS kernel 2.6.35-3.3.5</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不登陆Oracle下载JDK</title>
      <link href="2017/11/21/Oracle-JDK-Download/"/>
      <url>2017/11/21/Oracle-JDK-Download/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Oracle-JDK-Download-No-Need-Login"><a href="#Oracle-JDK-Download-No-Need-Login" class="headerlink" title="Oracle JDK Download No Need Login"></a>Oracle JDK Download No Need Login</h2><h1 id="一-背景"><a href="#一-背景" class="headerlink" title="一. 背景"></a>一. 背景</h1><ul><li>目前下载Oracle JDK 都需要登陆才能下载，无意间发现在GitHub上有 </li><li>国内镜像地址 <a href="https://injdk.cn/" target="_blank" rel="noopener">https://injdk.cn/</a></li><li>下载地址是 <code>https://github.com/frekele/oracle-java/releases</code><a id="more"></a></li><li><img src="https://i.loli.net/2019/11/21/Qed3YCRy57qpKcM.jpg" alt="Xnip2019-11-21_23-10-25.jpg"><!--more--></li></ul><h1 id="二-参考"><a href="#二-参考" class="headerlink" title="二. 参考"></a>二. 参考</h1><ul><li><a href="https://www.kagura.me/dev/20190424161314.html" target="_blank" rel="noopener">鹞之神乐</a></li><li><a href="https://github.com/frekele/oracle-java/releases" target="_blank" rel="noopener">Oracle-JDK下载</a></li><li><a href="https://mirrors.huaweicloud.com/java/jdk/8u172-b11/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/java/jdk/8u172-b11/</a> 华为云镜像下载</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM学习笔记</title>
      <link href="2017/07/01/JVM-Optimized/"/>
      <url>2017/07/01/JVM-Optimized/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="内存分配"><a href="#内存分配" class="headerlink" title="内存分配"></a>内存分配</h1><p>堆内存有以下三个主要区域</p><ul><li>新生代<ul><li>Eden空间，新创建的实例都通过Eden空间进入运行时内存区域；</li><li>Survivor 0空间，存活时间长的实例将会从Eden空间移动到 Survivor 0空间；</li><li>Survivor 1空间，存活时间更长的实例将会从Survivor空间移动到 Survivor 1空间；</li></ul></li></ul><a id="more"></a><ul><li><p>老年代</p><ul><li>大对象直接进入老年代，比如特别长的字符串；</li><li>虚拟机给每个对象定义了一个对象年龄计数器，如果对象在Eden空间出生并经过第一次MinorGC仍然存活，并且能够被Survivor容纳的话，将被移动到Survivor 0空间，同时对象的年龄设为1。对象在Survivor中没熬过一次MinorGC，年龄就增加1，到达一定程度（默认15岁）就被晋升到老年代中。</li></ul></li><li><p>永久代</p><ul><li>包含类、方法等细节元信息。</li></ul></li></ul><p><img src="https://github.com/codewindy/DesignPattern/blob/master/pic4hexo/4.jpg" alt><br><img src="https://github.com/codewindy/DesignPattern/blob/master/pic4hexo/31.jpg" alt><br><img src="https://github.com/codewindy/DesignPattern/blob/master/pic4hexo/47.jpg" alt></p><ul><li><p>对什么进行回收</p><ul><li>枚举出所有的GC roots，从roots出发向下搜索，搜索走过的路称为引用链，在这些链上的对象在搜索的过程中会被打上标记，然后gc再做一次扫描，把没有被标记的对象全部清理掉,虚拟机为每个对象定义了一个年龄计数器，每次清理活下来的对象年龄往上递增，并移动到Survivor区域，当年龄达到15岁（默认的，可以修改）直接升到老年代。</li><li>那些可以做roots引用点的是：<ul><li>栈中的引用对象</li><li>方法区中静态引用指向的对象</li><li>方法区中常量引用指向的对象</li></ul></li></ul></li><li><p>何时回收</p><ul><li>Java GC主要针对Java堆区域进行垃圾回收，堆内存被分为新生代和老年代，其中新生代又分成Eden、Survivor0和Survivor1三块区域，新的对象都在Eden区创建出来。</li><li>新生代的垃圾回收叫做minor gc，当Eden区没有足够的空间分配给新对象的时候就触发minor gc，当老年代剩余空间不足以放置从新生代升过来的对象时触发full gc</li><li>新生代垃圾收集算法是复制算法</li><li>老年代的是标记-清除-压缩算法</li></ul></li></ul><p>在新生代中，每次垃圾收集都发现有大批对象死去，只有少量存活，则使用复制算法，新生代内存被分为一个较大的Eden区和两个较小的Survivor区，每次只使用Eden区和一个Survivor区，当回收时将Eden区和Survivor还存活着的对象一次性的拷贝到另一个Survivor区上，最后清理掉Eden区和刚才使用过的Survivor区，Eden和Survivor的默认比例是8：1，可以使用-XX:SurvivorRatio来设置该比例。</p><p>而老年代中对象存活率高，没有额外的空间对它进行分配担保，必须使用“标记-清理”或“标记-整理”算法。</p><p>内存分配图</p><p>Java VisualVM 监控</p><h1 id="垃圾回收算法"><a href="#垃圾回收算法" class="headerlink" title="垃圾回收算法"></a>垃圾回收算法</h1><ul><li><font color="red">标记-清除算法</font><br> 在程序运行期间，若可以使用的内存被耗尽，GC线程就会被触发并将程序暂停，随后扫描内存中所有的对象，将依旧存活的对象标记一遍，然后执行清除操作，清除没有被标记的对象，释放内存。（缺点：产生大量的内存碎片）</li><li><font color="red">复制算法</font><br>复制算法是为了解决标记-清除算法所产生的内存碎片。<br>首先将内存大小相等的两部分，每次只使用其中的一部分，等这部分用完了，就把活着的对象移动到另一边，然后把剩下的部分全部清除掉。<br>优点：避免产生内存碎片<br>缺点：造成浪费。本来挺大一片地方，现在只能用一半，搞得挺不爽的</li><li><font color="red">标记-整理算法</font><br>算法不直接对可回收对象进行清理，而是让所有可用的对象都向一端移动。然后直接清理掉边界意外的内存。<br>很显然，整理这一下需要时间，所以与标记清除算法相比，这一步花费了不少时间，但从长远来看，这一步还是很有必要的。<br>该算法可谓“道德高尚，自己栽树，后人乘凉”</li><li><font color="red">分代收集</font><br>根据对象存活周期的不同将内存划分为几块。一般是把Java堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集时都有大批对象死去，只有少量存活，那就使用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。老年代中存活率高，使用标记清理或者标记整理算法来回收。</li></ul><h1 id="GC调优"><a href="#GC调优" class="headerlink" title="GC调优"></a>GC调优</h1><p>| 配置 | 描述 |<br>| – |<br>| -Xms | 初始堆内存大小 |<br>| -Xmx | 堆内存最大值（最大不要超过物理内存的80%） |<br>| -Xnm | 新生代大小 |<br>| -XX:permSize | 初始永久代大小 |<br>| -XX:MaxPermSize | 永久代最大容量 |</p><ul><li>对新生代中的Eden区和survivor区以及老年代区域的大小进行调整。</li><li>大对象直接进入老年代</li><li>长期存活的对象直接进入老年代</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://ot2hu9qoc.bkt.clouddn.com/memorymanagement-whitepaper-150215.pdf" target="_blank" rel="noopener">jvm Tuning pdf</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/jvms8.pdf" target="_blank" rel="noopener">jvms8.pdf</a></li><li>深入理解jvm虚拟机</li><li><a href="https://yemengying.com/" target="_blank" rel="noopener">Giraffe</a></li><li><a href="https://www.cnblogs.com/xrq730/p/4989451.html" target="_blank" rel="noopener">五月的仓颉</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的数据结构和算法(上)</title>
      <link href="2017/05/25/DataStruture/"/>
      <url>2017/05/25/DataStruture/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font style="color:black; background:yellow">TreeMap 源码里面有红黑树,要学会自我总结和归纳知识,反思避免错误</font><br><font style="color:black; background:yellow"><strong><a href="https://www.cs.usfca.edu/~galles/visualization/RedBlack.html" target="_blank" rel="noopener">红黑树BST的实现</a></strong></font><br><font color="blue"><strong><a href="https://www.cs.usfca.edu/~galles/visualization/flash.html" target="_blank" rel="noopener">具体图形化帮助理解请参考,旧金山大学usfca的算法演示</a></strong></font></p><blockquote><p>从简单的开始BubbleSort–&gt;SelectSort–&gt;BinarySort–&gt;QuickSort–&gt;DualPivotQuickSort<br>HashMap(自己实现一个简单的)–&gt;TreeMap–&gt;Red_Black_Tree</p></blockquote><h2 id="一-冒泡排序BubbleSort-2种方式实现"><a href="#一-冒泡排序BubbleSort-2种方式实现" class="headerlink" title="一. 冒泡排序BubbleSort[2种方式实现]"></a>一. 冒泡排序BubbleSort[2种方式实现]</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * FJ day13 javaSE常见对象 数组冒泡排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yui</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.codewindy.sorting;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1_BubbleSort</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span>[] arr = &#123; <span class="number">66</span>, <span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">55</span> &#125;;</span><br><span class="line">          bubbleSort(arr);</span><br><span class="line">          System.out.println(arr2String(arr));</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 打印 到五角星 冒泡排序 返回值类型void 参数列表 int[] arr</span></span><br><span class="line"><span class="comment">      * 1. void</span></span><br><span class="line"><span class="comment">      * 2. int[] arr</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;<span class="comment">//arr.length=6</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span>; i++) &#123;<span class="comment">//-1 是应为6个数只需要比较5次</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length-<span class="number">1</span>-i; j++) &#123;<span class="comment">//-1 防止索引越界 -i是为了提高效率</span></span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                   <span class="comment">/*   int temp=arr[i];</span></span><br><span class="line"><span class="comment">                        arr[i]=arr[j];</span></span><br><span class="line"><span class="comment">                        arr[j]=temp;*/</span></span><br><span class="line">                        Demo1_BubbleSort.swap(arr,j, j+<span class="number">1</span>);</span><br><span class="line">                        <span class="comment">// 调用静态的换位方法</span></span><br><span class="line">                   &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/*------------------------------上面的是第一种方式实现BubbleSort,下面的是第二种有图有真相-----------*/</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">          <span class="comment">// 定义参数</span></span><br><span class="line">          <span class="keyword">boolean</span> swapped = <span class="keyword">true</span>;</span><br><span class="line">          <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">          <span class="keyword">int</span> temp;</span><br><span class="line">          <span class="keyword">while</span> (swapped) &#123;</span><br><span class="line">              swapped = <span class="keyword">false</span>;</span><br><span class="line">              j++;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - j; i++) &#123;</span><br><span class="line">                   <span class="comment">// 对i ,i+1 进行交换</span></span><br><span class="line">                   <span class="keyword">if</span> (arr[i] &gt; arr[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                        temp = arr[i];</span><br><span class="line">                        arr[i] = arr[i + <span class="number">1</span>];</span><br><span class="line">                        arr[i + <span class="number">1</span>] = temp;</span><br><span class="line">                        swapped = <span class="keyword">true</span>; <span class="comment">// &#123; 66, 11, 22, 33, 1, 55 &#125;进入这个方法 说明还能继续冒泡排序</span></span><br><span class="line">                   &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 打印数组 转化车位那个字符串的方法 1. 返回值的类型string 2. 参数列表 int[] arr</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">arr2String</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">          StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">          sb.append(<span class="string">"["</span>);</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">              <span class="keyword">if</span> (i == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                   sb.append(arr[i]).append(<span class="string">"]"</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   sb.append(arr[i]).append(<span class="string">", "</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> sb.toString();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 交换数组的位置 1. 返回值类型void 2. 参数列表int[] arr,int i,int j</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">          arr[i] = arr[j];</span><br><span class="line">          arr[j] = temp; <span class="comment">// 默认左边的&gt; 右边的 冒泡排序向后面移动</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-选择排序的简单实现"><a href="#二-选择排序的简单实现" class="headerlink" title="二. 选择排序的简单实现"></a>二. 选择排序的简单实现</h2>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codewindy.sorting;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2_selectSort</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">int</span>[] arr=&#123;<span class="number">66</span>,<span class="number">55</span>,<span class="number">44</span>,<span class="number">33</span>,<span class="number">22</span>,<span class="number">11</span>&#125;;</span><br><span class="line">          selectSort(arr);</span><br><span class="line">          String arr2String = Demo1_BubbleSort.arr2String(arr);</span><br><span class="line">          System.out.println(<span class="string">"选择排序打印输出结果:"</span> +arr2String);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 选择排序</span></span><br><span class="line"><span class="comment">      * 1. void</span></span><br><span class="line"><span class="comment">      * 2. int[] arr</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;<span class="comment">//arr.length=6</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">if</span>(arr[i]&gt;arr[j])&#123;</span><br><span class="line">                   <span class="comment">/*   int temp=arr[i];</span></span><br><span class="line"><span class="comment">                        arr[i]=arr[j];</span></span><br><span class="line"><span class="comment">                        arr[j]=temp;*/</span></span><br><span class="line">                        Demo1_BubbleSort.swap(arr, i, j);</span><br><span class="line">                        <span class="comment">// 调用静态的换位方法</span></span><br><span class="line">                   &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三-BinarySearch-Arrays参考源码-二分查找法"><a href="#三-BinarySearch-Arrays参考源码-二分查找法" class="headerlink" title="三 .BinarySearch[Arrays参考源码]二分查找法"></a>三 .BinarySearch[Arrays参考源码]二分查找法</h2>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codewindy.sorting;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3_BinarySearch</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span>[] arr = &#123; <span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>, <span class="number">77</span> &#125;;</span><br><span class="line">          <span class="comment">// System.out.println(arr.length); //打印数组元素的个数 也是长度 角标 从0 开始</span></span><br><span class="line">          <span class="comment">// System.out.println(arr[arr.length]); //数组角标越界异常</span></span><br><span class="line">          <span class="comment">// System.out.println(binarySearch(arr, 22));</span></span><br><span class="line">          <span class="comment">// System.out.println(binarySearch(arr, 66));</span></span><br><span class="line">          <span class="comment">// System.out.println(binarySearch(arr, 888));</span></span><br><span class="line">          System.out.println(<span class="string">"--------------通过jdk方式实现--------------------"</span>);</span><br><span class="line">          System.out.println(binarySearch1(arr, <span class="number">22</span>));</span><br><span class="line">          System.out.println(binarySearch1(arr, <span class="number">66</span>));</span><br><span class="line">          System.out.println(binarySearch1(arr, <span class="number">888</span>));</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/*------------第二种方式--------------------*/</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch1</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> binarySearch0(a, <span class="number">0</span>, a.length, key);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch0</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> fromIndex, <span class="keyword">int</span> toIndex, <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span> low = fromIndex;</span><br><span class="line">          <span class="keyword">int</span> high = toIndex - <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">              <span class="keyword">int</span> mid = (low + high) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">              <span class="keyword">int</span> midVal = a[mid];</span><br><span class="line">              <span class="keyword">if</span> (midVal &lt; key)</span><br><span class="line">                   low = mid + <span class="number">1</span>;</span><br><span class="line">              <span class="keyword">else</span> <span class="keyword">if</span> (midVal &gt; key)</span><br><span class="line">                   high = mid - <span class="number">1</span>;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">                   <span class="keyword">return</span> mid; <span class="comment">// key found</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> -(low + <span class="number">1</span>); <span class="comment">// key not found.</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 二分查找法</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">      *            数组,int key 形参</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> 返回值是int -1 表示找不到</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">          <span class="comment">// 记录最小索引的值</span></span><br><span class="line">          <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line">          <span class="comment">// 记录最大索引的值</span></span><br><span class="line">          <span class="keyword">int</span> max = arr.length - <span class="number">1</span>;</span><br><span class="line">          <span class="comment">// 求出中间的位置索引的值(min+max)/2</span></span><br><span class="line">          <span class="keyword">int</span> mid = (max + min) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">          <span class="comment">// 判断</span></span><br><span class="line">          <span class="keyword">while</span> (arr[mid] != key) &#123;</span><br><span class="line">              <span class="keyword">if</span> (arr[mid] &gt; key) &#123;</span><br><span class="line">                   max = mid - <span class="number">1</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key &gt; arr[mid]) &#123; <span class="comment">// 如果要找的key &gt;mid 中间值</span></span><br><span class="line">                   min = mid + <span class="number">1</span>; <span class="comment">// 那么中间值</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (min &gt; max) &#123;</span><br><span class="line">                   <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              mid = (max + min) &gt;&gt;&gt; <span class="number">1</span>; <span class="comment">// 无论最大值 还是最小值改变中间值需要改变</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> mid;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-快速排序是对冒泡排序的优化"><a href="#四-快速排序是对冒泡排序的优化" class="headerlink" title="四 .快速排序是对冒泡排序的优化"></a>四 .快速排序是对冒泡排序的优化</h2>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line">思想是: 先取数组的pivot left /right 然后进行刷选,数组中 &lt;pivot 的值往左边丢, &gt; pivot 的数组的值往右边丢,最终递归实现排序nlog2N 的时间复杂度和</span><br><span class="line">二叉树的效率基本类似</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codewindy.sorting;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08_MyquickSort</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span>[] arr=&#123;<span class="number">7</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">98</span>,<span class="number">3</span>&#125;;</span><br><span class="line">          quicksort(arr, <span class="number">0</span>, arr.length-<span class="number">1</span>);</span><br><span class="line">          System.out.println(arr2String(arr));</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 定义一个方法将 数组转化成字符串</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">arr2String</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(arr==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="string">"null"</span>;</span><br><span class="line">          <span class="keyword">int</span> iMax=arr.length-<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">if</span>(iMax==-<span class="number">1</span>) <span class="keyword">return</span> <span class="string">"[]"</span>;</span><br><span class="line"></span><br><span class="line">          StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">          sb.append(<span class="string">"["</span>);</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ; i++) &#123;</span><br><span class="line">              sb.append(arr[i]);</span><br><span class="line">              <span class="keyword">if</span>(i==iMax)&#123;</span><br><span class="line">                   <span class="keyword">return</span> sb.append(<span class="string">"]"</span>).toString(); <span class="comment">//在数组iMax 位置处时候返回</span></span><br><span class="line">              &#125;</span><br><span class="line">              sb.append(<span class="string">", "</span>);</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 将数组中的元素进行交换swap</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> l</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> r</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">          <span class="keyword">int</span> temp=arr[l];</span><br><span class="line">          arr[l]=arr[r];</span><br><span class="line">          arr[r]=temp;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 快速排序 是 对BubbleSort 的一种算法优化,具体实现如下</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> arr  要进行排序的数组</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> left  数组的起始index 位置 一般0</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> right 数组的iMax length 的值arr.lenth-1</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">int</span> l=left;</span><br><span class="line">          <span class="keyword">int</span> r=right;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">int</span> pivot=arr[(l+r)&gt;&gt;<span class="number">1</span>]; <span class="comment">//找中间位置</span></span><br><span class="line">          <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">              <span class="keyword">while</span>(arr[l]&lt;pivot) l++;</span><br><span class="line">              <span class="keyword">while</span>(pivot&lt;arr[r]) r--;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//出口 如果发生交叉越界就跳出,跳出while 循环</span></span><br><span class="line">              <span class="keyword">if</span>(l&gt;=r) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">              <span class="comment">/*int temp=arr[l];</span></span><br><span class="line"><span class="comment">              arr[l]=arr[r];</span></span><br><span class="line"><span class="comment">              arr[r]=temp;*/</span></span><br><span class="line">              swap(arr, l, r);</span><br><span class="line"></span><br><span class="line">              <span class="comment">/**</span></span><br><span class="line"><span class="comment">               * 这里写的看不懂了,应该是左边--&gt;向右遍历到了pivot 临界值,就让r 继续向左移动</span></span><br><span class="line"><span class="comment">               */</span></span><br><span class="line">              <span class="keyword">if</span>(arr[l]==pivot) --r;</span><br><span class="line">              <span class="keyword">if</span>(arr[r]==pivot) ++l;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//当 左边和右边相等的时候,说明已经partition 分段的临界点,需要越界一位</span></span><br><span class="line">          <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">              l++;</span><br><span class="line">              r--;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">/**</span></span><br><span class="line"><span class="comment">           * 但第一次partition 将数组分段结束后  对左右2边的数组进行递归处理</span></span><br><span class="line"><span class="comment">           * 难点: 递归</span></span><br><span class="line"><span class="comment">           * continue 和break 的区别</span></span><br><span class="line"><span class="comment">           * return finally 的执行顺序?</span></span><br><span class="line"><span class="comment">           */</span></span><br><span class="line">          <span class="keyword">if</span>(left&lt;r) quicksort(arr, left, r);</span><br><span class="line">          <span class="keyword">if</span>(l&lt;right) quicksort(arr,l,right);</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 写一个固定容量同步容器，拥有put和get方法，以及getCount方法，</span></span><br><span class="line"><span class="comment">   * 能够支持2个生产者线程以及10个消费者线程的阻塞调用</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * 使用wait和notify/notifyAll来实现</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * 使用Lock和Condition来实现</span></span><br><span class="line"><span class="comment">   * 对比两种方式，Condition的方式可以更加精确的指定哪些线程被唤醒</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@author</span> codewindy</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">package</span> jp.codewindy.producer.consumer;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line">  <span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line">  <span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line">  <span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line">  <span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyContainer</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">private</span> LinkedList&lt;T&gt; lists = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">int</span> MAX = <span class="number">10</span>; <span class="comment">//最多10个元素</span></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">      <span class="keyword">private</span> Condition producer = lock.newCondition();</span><br><span class="line">      <span class="keyword">private</span> Condition consumer = lock.newCondition();</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              lock.lock();</span><br><span class="line">              <span class="comment">//想想为什么用while而不是用if？</span></span><br><span class="line">              <span class="keyword">while</span>(lists.size() == MAX) &#123;</span><br><span class="line">                  producer.await();</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              lists.add(t);</span><br><span class="line">              ++count;</span><br><span class="line">              <span class="comment">//通知消费者线程进行消费</span></span><br><span class="line">              consumer.signalAll();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">              lock.unlock();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          T t = <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              lock.lock();</span><br><span class="line">              <span class="keyword">while</span>(lists.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                  consumer.await();</span><br><span class="line">              &#125;</span><br><span class="line">              t = lists.removeFirst();</span><br><span class="line">              count --;</span><br><span class="line">              <span class="comment">//通知生产者进行生产</span></span><br><span class="line">              producer.signalAll();</span><br><span class="line"></span><br><span class="line">          &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">              lock.unlock();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> t;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          MyContainer&lt;String&gt; c = <span class="keyword">new</span> MyContainer&lt;&gt;();</span><br><span class="line">          <span class="comment">//启动消费者线程</span></span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">              <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++) System.out.println(c.get());</span><br><span class="line">              &#125;, <span class="string">"c"</span> + i).start();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">              TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">          &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">              e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//启动生产者线程</span></span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++) &#123;</span><br><span class="line">              <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">25</span>; j++) c.put(Thread.currentThread().getName() + <span class="string">" "</span> + j);</span><br><span class="line">              &#125;, <span class="string">"p"</span> + i).start();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> HashMap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集合类的并发修改异常分析</title>
      <link href="2017/05/22/ConcurrentModificationException/"/>
      <url>2017/05/22/ConcurrentModificationException/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>===<br><font style="color:black; background:yellow">List集合类中并发修改异常的处理</font></p><blockquote><p>在oracle 起别名如果有数字/或者空格特殊字符必须加””<br>主要读源码 String/ArrayList.iterator()/TreeMap/HashMap<br>alt shift  h 生成equals 和hashcode 方法  想通过hashcode 找火车表的座位 ,然后如果hashcode 相同就有backet 桶结构再来比较equals如果相同就不存<br>31 是一个质数 不大不小在int 里面 且 2 的5 次方 -1       2&lt;&lt;4-1 100000-1  32  –&gt;31</p></blockquote><ul><li>hashcode() 在hashSet添加元素的时候会自动调用如果相同就调用equals 在比较为了提高效率,属性相同的对象返回值必须相同,属性不同的返回值尽量不同</li><li>equals() 属性相同返回true 不存 属性不同返回false ,说明对象不同就存到一个bucket桶子里面 链表的方式存储</li></ul><a id="more"></a><ul><li><p>书写顺序: select distinct..<code>*</code> from ..where[不能接聚合函数] ..group by ..having[聚合函数过滤条件] order by..limit[offset ,count/oracle里面没有]..desc<br>  sql语句的执行顺序: 嵌套子查询出来的 () 包起来 在重新起别名salavg,一张表自己内连接</p><p>  from emp where group by ..having ..select..rownum..order by..desc<br>  join on / is not null /group by 为毛线要在select 里面拼接条件</p></li></ul><p><strong>TODO_List</strong></p><ol><li>重看HashMap 在jdk1.7和1.8 内部实现的区别</li><li>for循环删除需要i– 因为list.remove() 一个元素会使得list向上移动所以需要改成i–</li><li>list.remove(i–),在list.iterator里面重写的方法实现了i– ,你不– 就会漏删除,所以可以直接用iterator.remove();不能用list.remove(“bbb”)否则并发修改异常;</li><li>foreach 里面用的就是iterator迭代器,所以不能list.remove(“bbb”);<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">* Exception in thread <span class="string">"main"</span> java.util.ConcurrentModificationException</span><br><span class="line">at java.util.ArrayList$Itr.checkForComodification(Unknown Source)</span><br><span class="line">at java.util.ArrayList$Itr.next(Unknown Source)</span><br><span class="line">at com.itheima.treeset.TestDeleteofArrayList.main(TestDeleteofArrayList.java:<span class="number">34</span>)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (lastRet &lt; <span class="number">0</span>)</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException();</span><br><span class="line">           checkForComodification();</span><br><span class="line"></span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               AbstractList.<span class="keyword">this</span>.remove(lastRet);</span><br><span class="line">               <span class="keyword">if</span> (lastRet &lt; cursor)</span><br><span class="line">                   cursor--;</span><br><span class="line">               lastRet = -<span class="number">1</span>;</span><br><span class="line">               expectedModCount = modCount;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IndexOutOfBoundsException e) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">checkForComodification</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (modCount != expectedModCount)</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="一-并发修改异常的实例分析"><a href="#一-并发修改异常的实例分析" class="headerlink" title="一 .并发修改异常的实例分析"></a>一 .并发修改异常的实例分析</h2><ol><li>FJ_day17_20总结讲解内容</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codewindy.treeset;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDeleteofArrayList</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="string">"aaa"</span>);</span><br><span class="line"><span class="comment">/*list.add("bbb");</span></span><br><span class="line"><span class="comment">list.add("bbb");*/</span></span><br><span class="line"></span><br><span class="line">list.add(<span class="string">"bbb"</span>);</span><br><span class="line">list.add(<span class="string">"ccc"</span>);</span><br><span class="line">list.add(<span class="string">"bbb"</span>);</span><br><span class="line">list.add(<span class="string">"ddd"</span>);</span><br><span class="line">list.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//普通for 循环可以删除 但是i 需要--,删除元素 后list 会向上移动</span></span><br><span class="line"><span class="comment">//所以漏掉了一个</span></span><br><span class="line"><span class="comment">/*for(int i=0;i&lt;list.size();i++)&#123;</span></span><br><span class="line"><span class="comment">if(list.get(i).equals("bbb"))&#123;</span></span><br><span class="line"><span class="comment">list.remove(i--);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------上面普通for 下面方法2 Iterator实现删除----------------------------------------------</span></span><br><span class="line"><span class="comment">/*Iterator&lt;String&gt; iterator = list.iterator();</span></span><br><span class="line"><span class="comment">while(iterator.hasNext())&#123;</span></span><br><span class="line"><span class="comment">String temp = iterator.next();</span></span><br><span class="line"><span class="comment">if(temp.equals("bbb"))&#123;</span></span><br><span class="line"><span class="comment">//list.remove("bbb");//不能用list自己的remove 方法并发修改异常</span></span><br><span class="line"><span class="comment">iterator.remove();</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span> (String str : list) &#123;</span><br><span class="line"><span class="keyword">if</span>(str.equals(<span class="string">"bbb"</span>))&#123;</span><br><span class="line">list.remove(str);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(list);</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="二-HashMap-在jdk1-7和1-8-内部实现的区别"><a href="#二-HashMap-在jdk1-7和1-8-内部实现的区别" class="headerlink" title="二. HashMap 在jdk1.7和1.8 内部实现的区别"></a>二. HashMap 在jdk1.7和1.8 内部实现的区别</h2><h2 id="三-count-1-和count-的区别"><a href="#三-count-1-和count-的区别" class="headerlink" title="三. count(1) 和count(*) 的区别"></a>三. count(1) 和count(*) 的区别</h2><pre><code><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sql syntax</span><br><span class="line"></span><br><span class="line">group by 一般和聚合函数一起使用才有意义,比如 count sum avg等,使用group by的两个要素:</span><br><span class="line">   (1) 出现在<span class="keyword">select</span>后面的字段 要么是是聚合函数中的,要么就是<span class="keyword">group</span> <span class="keyword">by</span> 中的.</span><br><span class="line">   (<span class="number">2</span>) 要筛选结果 可以先使用<span class="keyword">where</span> 再用<span class="keyword">group</span> <span class="keyword">by</span> 或者先用<span class="keyword">group</span> <span class="keyword">by</span> 再用<span class="keyword">having</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>后面的字段必须与<span class="keyword">select</span>后面的没有使用聚合函数的字段匹配</span><br><span class="line">The <span class="keyword">GROUP</span> <span class="keyword">BY</span> syntax combines scalar <span class="keyword">column</span> expressions <span class="keyword">and</span> <span class="keyword">aggregate</span> expressions. An asterisk (*) <span class="keyword">is</span> allowed <span class="keyword">only</span> <span class="keyword">in</span> the <span class="keyword">COUNT</span>(*) <span class="keyword">aggregate</span> function.</span><br><span class="line">The <span class="keyword">SQL</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> syntax</span><br><span class="line"></span><br><span class="line">The <span class="keyword">general</span> syntax <span class="keyword">is</span>:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">column</span>-<span class="keyword">names</span></span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">table</span>-<span class="keyword">name</span></span><br><span class="line"> <span class="keyword">WHERE</span> condition</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">column</span>-<span class="keyword">names</span></span><br><span class="line"></span><br><span class="line">The <span class="keyword">general</span> syntax <span class="keyword">with</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">is</span>:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">column</span>-<span class="keyword">names</span></span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">table</span>-<span class="keyword">name</span></span><br><span class="line"> <span class="keyword">WHERE</span> condition</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">column</span>-<span class="keyword">names</span></span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">column</span>-<span class="keyword">names</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> 姓名</span><br><span class="line"><span class="keyword">FROM</span> 学生表</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> *</span><br><span class="line">    <span class="keyword">FROM</span> 选课表</span><br><span class="line">    <span class="keyword">WHERE</span> 学生表.学号 = 选课表.学号 <span class="keyword">AND</span> 课程号 = <span class="string">'C1'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"> 所以count(1)和count(主键)这两个效率高。</span><br><span class="line"> 不相关子查询：子查询的查询条件不依赖于父查询的称为不相关子查询。</span><br><span class="line">相关子查询：子查询的查询条件依赖于外层父查询的某个属性值的称为相关子查询，带EXISTS 的子查询就是相关子查询</span><br><span class="line">EXISTS表示存在量词：带有EXISTS的子查询不返回任何记录的数据，只返回逻辑值“True”或“False”</span><br><span class="line"></span><br><span class="line">Having与Where的区别</span><br><span class="line"></span><br><span class="line">where 子句的作用是在对查询结果进行分组前，将不符合where条件的行去掉，即在分组之前过滤数据，where条件中不能包含聚组函数，使用where条件过滤出特定的行。</span><br><span class="line">having 子句的作用是筛选满足条件的组，即在分组之后过滤数据，条件中经常包含聚组函数，使用having 条件过滤出特定的组，也可以使用多个分组标准进行分组。</span><br><span class="line"></span><br><span class="line">这就是需要注意的一点，在<span class="keyword">select</span>指定的字段要么就要包含在<span class="keyword">Group</span> <span class="keyword">By</span>语句的后面，作为分组的依据；要么就要被包含在聚合函数中。</span><br></pre></td></tr></table></figure></code></pre><h2 id="四-下面这段话摘自Effective-Java"><a href="#四-下面这段话摘自Effective-Java" class="headerlink" title="四 .下面这段话摘自Effective Java"></a>四 .下面这段话摘自Effective Java</h2><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在程序执行期间，只要equals方法的比较操作用到的信息没有被修改，那么对这同一个对象调用多次，hashCode方法必须始终如一地返回同一个整数。</span><br><span class="line">如果两个对象根据equals方法比较是相等的，那么调用两个对象的hashCode方法必须返回相同的整数结果。</span><br><span class="line">如果两个对象根据equals方法比较是不等的，则hashCode方法不一定得返回不同的整数。</span><br><span class="line">　　对于第二条和第三条很好理解，但是第一条，很多时候就会忽略。在《Java编程思想》一书中的P495页也有同第一条类似的一段话：</span><br><span class="line"></span><br><span class="line">　　“设计hashCode()时最重要的因素就是：无论何时，对同一个对象调用 hashCode()都应该产生同样的值。如果在讲一个对象用put()添加进HashMap时产生一个hashCdoe值，而用get()取出时却产生 了另一个hashCode值，那么就无法获取该对象了。所以如果你的hashCode方法依赖于对象中易变的数据，用户就要当心了，因为此数据发生变化 时，hashCode()方法就会生成一个不同的散列码”。</span><br></pre></td></tr></table></figure></code></pre><h2 id="总结两种比较器Comparable和Comparator，后者相比前者有如下优点："><a href="#总结两种比较器Comparable和Comparator，后者相比前者有如下优点：" class="headerlink" title="总结两种比较器Comparable和Comparator，后者相比前者有如下优点："></a>总结两种比较器Comparable和Comparator，后者相比前者有如下优点：</h2><ol><li><p>如果实现类没有实现Comparable接口，又想对两个类进行比较（或者实现类实现了Comparable接口，但是对compareTo方法内的比较算法不满意），那么可以实现Comparator接口，自定义一个比较器，写比较算法</p></li><li><p>实现Comparable接口的方式比实现Comparator接口的耦合性要强一些，如果要修改比较算法，要修改Comparable接口的实现类，而实现Comparator的类是在外部进行比较的，不需要对实现类有任何修改。从这个角度说，其实有些不太好，尤其在我们将实现类的.class文件打成一个.jar文件提供给开发者使用的时候。实际上实现Comparator接口的方式后面会写到就是一种典型的策略模式。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Exception </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keep Reading</title>
      <link href="2017/05/20/Keep-Reading-bak/"/>
      <url>2017/05/20/Keep-Reading-bak/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="以下书籍pdf仅供自己翻阅复习"><a href="#以下书籍pdf仅供自己翻阅复习" class="headerlink" title="以下书籍pdf仅供自己翻阅复习"></a>以下书籍pdf仅供自己翻阅复习</h2><ul><li><strong>java编程</strong></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/design-pattern-java.pdf" target="_blank" rel="noopener">设计模式 design-pattern-java</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Craig%20Walls%20-%20Spring%20in%20Action%204th%20Edition%20-%202014.pdf" target="_blank" rel="noopener">spring的经典之作 Spring in Action 4th Edition</a></li></ul><a id="more"></a><ul><li><a href="http://ot2hu9qoc.bkt.clouddn.com/java-concurrency.pdf" target="_blank" rel="noopener">并发笔记 java-concurrency</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/think-in-java.pdf" target="_blank" rel="noopener">Think in java 编程思想</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/serverStartup.pdf" target="_blank" rel="noopener">Tomcat官方pdf</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/serverStartup.txt" target="_blank" rel="noopener">TomcatStartup Sequence</a></li><li><strong>网络相关</strong></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/niaoge_Linux_v2_0.pdf" target="_blank" rel="noopener">鸟哥的linux私房菜</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/nginx%E4%BC%98%E5%8C%96.pdf" target="_blank" rel="noopener">nginx笔记优化</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/TCPIP%E8%AF%A6%E8%A7%A3%28%E5%8D%B71%E5%8D%8F%E8%AE%AE%29.pdf" target="_blank" rel="noopener">计算机网络经典 TCP/IP volume I</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Wireshark%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E7%9A%84%E8%89%BA%E6%9C%AF_%E6%9E%97%E6%B2%9B%E6%BB%A1%E8%91%97_%E5%8C%97%E4%BA%AC%EF%BC%9A%E4%BA%BA%E6%B0%91%E9%82%AE%E7%94%B5%E5%87%BA%E7%89%88%E7%A4%BE%20,2016.02_P198.pdf" target="_blank" rel="noopener">Wireshark网络分析的艺术_林沛满</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/%E5%9B%BE%E8%A7%A3%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.pdf" target="_blank" rel="noopener">图解性能优化</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/%E5%9B%BE%E8%A7%A3HTTP+%E5%BD%A9%E8%89%B2%E7%89%88@www.java1234.com.pdf" target="_blank" rel="noopener">图解http</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/merged.pdf" target="_blank" rel="noopener">merged.pdf</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/merged.pdf" target="_blank" rel="noopener">JAVA核心知识点整理.pdf</a></li></ul><hr>防止重复找软件浪费时间---<ul><li><a href="http://ot2hu9qoc.bkt.clouddn.com/BaiduType_Setup_Light.exe" target="_blank" rel="noopener">百度IME</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/CCleaner+Pro+v5.31+x86_x64+%E7%BB%BF%E8%89%B2%E7%89%88%5B%E5%A2%9E%E5%BC%BA%5D.7z" target="_blank" rel="noopener">cclear pro5.31</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Everything-1.4.1.867b.x64-Setup.exe" target="_blank" rel="noopener">everything</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/JMeter%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A.doc" target="_blank" rel="noopener">jmeter从入门到精通.doc</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B82017.doc" target="_blank" rel="noopener">java面试宝典2017</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/SQLyog-12.4.1-0_51cto.exe" target="_blank" rel="noopener">SQLyog最新版本rsload.net</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Sublime+Text+3+%E4%B8%AD%E6%96%87%E4%BC%98%E5%8C%96%E7%89%88S1.5.6.exe" target="_blank" rel="noopener">sublime Text3 S1.5.6</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/UltraISO+v9.66.3300+%E7%89%B9%E5%88%AB%E7%89%88%E7%BB%BF%E8%89%B2%E7%89%88.7z" target="_blank" rel="noopener">ultraISO</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Universal-USB-Installer-1.9.7.8.exe" target="_blank" rel="noopener">universal-USB-Installer </a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/VMware%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE.docx" target="_blank" rel="noopener">VMwareNetworkConfig.docx</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/FastDFS_tut.docx" target="_blank" rel="noopener">fastdfs 安装手册</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/FSCapture8.7.exe" target="_blank" rel="noopener">FSCapture8.7</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/FSViewer64.zip" target="_blank" rel="noopener">FSViewer64.zip</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/WinRAR5.5_KeyGen.rar" target="_blank" rel="noopener">WinRAR5.5_KeyGen.rar</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/fg764p.exe" target="_blank" rel="noopener">fg764p</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/idea_eclipsebak.zip" target="_blank" rel="noopener">idea和eclipse的配置文件备份</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/ss-3.4.3.zip" target="_blank" rel="noopener">ss3.4.3</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Wireshark-win64-2.4.2.exe" target="_blank" rel="noopener">wireshark</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/jdk-7u80-windows-x64.exe" target="_blank" rel="noopener">jdk1.7_80</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Git-2.15.0-64-bit.exe" target="_blank" rel="noopener">Git2.15</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/rsload.net.Xme5.rar" target="_blank" rel="noopener">Xmanager_rsload.Xme5.rar</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Navicat.rar" target="_blank" rel="noopener">rsload.net.NavicatPremium.rar</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/navicat11.1%E5%AE%8C%E7%BE%8E%E7%A0%B4%E8%A7%A3%E7%89%88%E5%86%85%E5%B8%A6%E6%B3%A8%E5%86%8C%E6%9C%BA.rar" target="_blank" rel="noopener">navicat 4 MySQL</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/RouterOS%206.39.2%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%93%E7%94%A8.rar" target="_blank" rel="noopener">Routeros6.39 vmware winbox</a></li><li><a href="http://markdownpad.com/download/markdownpad2-setup.exe" target="_blank" rel="noopener">markdownPad</a>  <code>http://ot2hu9qoc.bkt.clouddn.com/KG.exe</code></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/LiebaoFreeWiFi5.1.exe" target="_blank" rel="noopener">猎豹wifi</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/BCompare-zh-4.1.9.21719_2_bak.zip" target="_blank" rel="noopener">BeyondCompare4</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Advanced-REST-client_v3.1.9.zip" target="_blank" rel="noopener">Advanced-REST-client</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/MyLanViewer.7z" target="_blank" rel="noopener">MyLANViewer</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/ProxifierSetup.exe" target="_blank" rel="noopener">proxifier 正版</a> <code>注册码 5EZ8G-C3WL5-B56YG-SCXM9-6QZAP</code></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/HA-Proxifier331-LDR.7z" target="_blank" rel="noopener">proxifier 汉化版</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/TeamViewer_Setup_2.exe" target="_blank" rel="noopener">teamviewer </a> <code>https://dl.tvcdn.de/download/TeamViewer_Setup.exe</code></li><li><a href="http://mirrors.neusoft.edu.cn/centos/6.9/isos/x86_64/CentOS-6.9-x86_64-minimal.iso" target="_blank" rel="noopener">centos6.9 minimal</a></li><li><a href="https://cdn1.evernote.com/win6/public/Evernote_6.7.5.5825.exe" target="_blank" rel="noopener">evernote</a></li><li><a href="http://static1.huyanbao.com/pc/huyanbao_last.exe" target="_blank" rel="noopener">护眼宝</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/IDM6.29.2.7z" target="_blank" rel="noopener">IDM</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/PotPlayer.zip" target="_blank" rel="noopener">potplayer</a></li><li><a href="https://www.sumatrapdfreader.org/dl/SumatraPDF-3.1.2-64.zip" target="_blank" rel="noopener">SumatraPDF</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/VanDyke.rar" target="_blank" rel="noopener">secureCRT </a></li><li><a href="https://www.visualsvn.com/files/VisualSVN-Server-3.6.4-x64.msi" target="_blank" rel="noopener">VisualSVN</a></li><li><a href="https://download.tortoisegit.org/tgit/2.5.0.0/TortoiseGit-2.5.0.0-64bit.msi" target="_blank" rel="noopener">TortoiseGIT</a></li><li><a href="http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/mars/2/eclipse-jee-mars-2-win32-x86_64.zip" target="_blank" rel="noopener">eclipse_mars</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/dropins.7z" target="_blank" rel="noopener">dropins.7z</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/ssg.zip" target="_blank" rel="noopener">ssg idea 插件</a></li><li><a href="https://www.editplus.com/ftp/epp430_64bit.exe" target="_blank" rel="noopener">editplus </a> <code>注册码a E8E8D-12490-A6CA2-01DF0-11D3B</code></li><li><a href="https://github.com/XhmikosR/notepad2-mod/releases/download/4.2.25.998/Notepad2-mod.4.2.25.998.exe" target="_blank" rel="noopener">notepad2-mod</a></li><li><a href="https://github.com/getlantern/forum/issues/833" target="_blank" rel="noopener">lantern 4.1.2</a></li><li><a href="http://ot2hu9qoc.bkt.clouddn.com/Source_Code_Read_Plan.7z" target="_blank" rel="noopener">Source_Code_Read_Plan settings.bak</a></li><li>filezilla &amp; winScp</li><li>vmware &amp; xmind<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">—– BEGIN LICENSE</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">—— END LICENSE ——</span><br><span class="line">Proxifier 注册码 序列号</span><br><span class="line">5EZ8G-C3WL5-B56YG-SCXM9-6QZAP（Standard Edition）</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> books </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim使用总结笔记</title>
      <link href="2017/05/13/Vim-Manual/"/>
      <url>2017/05/13/Vim-Manual/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Toggle-Vrapper-sublime-Text-IdeaVim-Chrome具有vim插件"><a href="#Toggle-Vrapper-sublime-Text-IdeaVim-Chrome具有vim插件" class="headerlink" title="Toggle Vrapper,sublime Text,IdeaVim,Chrome具有vim插件"></a><font style="color:black; background:yellow">Toggle Vrapper,sublime Text,IdeaVim,Chrome具有vim插件</font></h1><h2 id="chrome-的vimium-使用shift-进行提示-具体参考里面的快捷键"><a href="#chrome-的vimium-使用shift-进行提示-具体参考里面的快捷键" class="headerlink" title="chrome 的vimium 使用shift+? 进行提示  具体参考里面的快捷键"></a>chrome 的vimium 使用shift+? 进行提示  具体参考里面的快捷键</h2><p>1.<a href="https://github.com/582033/vim" target="_blank" rel="noopener">vimium</a> 的基本入门使用 <code>* j [japan在 k Korea在下面]</code><br>    * u pageUp  d pageDown<br>    * o 查找或者打开页面<br>    * x 退出  X还原<br>    * f 查询 —&gt;很关键<br>    * 有个很重要的是f6在地址栏获取焦点,tab键可以取消默认的搜索焦点然后按f<br>    * shift +J 往左  K 往右<br>    * g0 第一个tab  t 开启一个新的tab页面<br>    * g$ 最后一个tab<br>    * H 返回history L 跳转当前<br>    * t 新开一个tab<br>    * T 查找开启的tab<br>    * 但如果完全失灵了 可以使用ctrl +W 实现关闭浏览器窗口/chrome</p><a id="more"></a><h2 id="vim-初心者-Master的使用和dotfile"><a href="#vim-初心者-Master的使用和dotfile" class="headerlink" title="vim 初心者-Master的使用和dotfile"></a><a href="https://github.com/grigio/vim-sublime" target="_blank" rel="noopener">vim 初心者-Master的使用和dotfile</a></h2><ol><li><p>vim8.0在window可以通过git bash自带的练习</p><ul><li>vim + selfNote.md 定位到bottom 底部</li><li>vim +12 第12 行打开   +/ettercap 不能有空格</li><li><strong>a</strong> append 在光标后面插入</li><li>i 在光标前面插入insert  [A在行尾] [I 在首部][O 在行上方插入一行]</li><li>o 在光标所在行的下方 新建一行 转化为输入模式</li><li>编辑模式转化成插入模式</li><li>插入模式 转化成 编辑模式esc</li><li>编辑转化末行模式 : 10,20d   !ls/etc</li><li>:wq ==:x 保存退出</li></ul></li></ol><ul><li>编辑模式下ZZ 保存退出</li></ul><ol><li><p>以逐一字符为单位移动 h 左  l 右</p><ul><li>j [japan在K Korea在下面]</li><li>:help tutor 查看帮助文档</li></ul></li><li><p>以单词为单位移动</p><ol><li>w 移至下一个档次的词首   3w</li><li>e 跳至当前或者下一个单词的词尾</li><li>b跳至当前或前一个单词的词首</li></ol></li><li><p>行内跳转</p><ol><li>0 绝对行首 开头</li><li>$ 绝对行尾</li><li>^ 行首的第一个非空白字符</li></ol></li><li><p>行间跳转</p></li><li><p><code>4G</code> 跳转到第4行<br> G 最后一行<br> 末行模式直接输入: 50G向下跳转就可以了</p></li><li><p>翻屏</p><ol><li>ctrl f 向下翻屏</li><li>ctrl b 向上翻屏</li><li>ctrl d 向下翻半屏</li><li>crtl u 向上翻半屏</li></ol></li><li><p>删除单个字符</p><ul><li>x 删除光标所在处的单个字符  3x 删除光标后面3个字符</li></ul></li><li><p>删除命令d<br> d 命令跟跳转命令组合使用<br> 3dw de db<br> 2dd 删除当前光标所在2行</p></li><li><p>末行模式下删除,删除的可以撤销u,存在寄存器中,最后一次的d可以哟哦你过来粘贴<br> . 表示当前行  1,+3d 表示向下共删除4行<br> $ 最后一行<br> : .,$-1 从光标行删除到末行</p></li><li><p>粘贴命令p<br>p如果删除或复制的是整行,则粘贴在光标所在行的下方,如果复制或删除的是非整行,则粘贴在后面 P 相反</p></li><li><p>复制命令y<br>用法同d 命令<br>3yy  基本和d 相同</p></li><li><p>修改 先删除 内容,在进入insert 插入模式<br>c 用法同d 命令  c$  删除到末尾并进入插入模式</p></li><li><p>替换使用r 6ra 替换单个字符<br>R 进入替换模式,一直进入修改</p></li><li><p>撤销标记操作u</p><ol><li>u撤销前一次编辑操作 连续u 可撤销n&lt;50次 默认情况下</li><li>3u 直接撤销最近3次的编辑操作</li><li>ctrl r 撤销最近一次的撤销操作</li></ol></li><li><p>重复前一次编辑操作 [乐芙兰.] .</p></li><li><p>可视化模式</p><ol><li>v 按字符选取</li><li>V 按矩形选取</li></ol></li><li><p>查找替换末行模式使用<br>/Pattern<br>?pattern 模糊匹配<br>n 向上  N 向下匹配</p></li><li><dl><dt>查找并替换s 命令 gi 全局忽略大小写<br>起始地址,结束地址@pattern@string@gi</dt><dd>.,$-1s/id/ID/gi</dd></dl></li></ol><hr><pre><code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">   1、vim 单文件中查找方法</span><br><span class="line"></span><br><span class="line">   正常模式下使用 / 或 ? 命令执行向后搜索或向前搜索</span><br><span class="line"></span><br><span class="line">   /love从光标位置向前搜索关键词 love</span><br><span class="line">   ?love从光标位置向后搜索关键词 love</span><br><span class="line"></span><br><span class="line">   正常模式下使用 n 或 N 命令执行 向前查找 或 向后查找 下一个关键词</span><br><span class="line"></span><br><span class="line">   :set ic忽略大小写命令，ic 为 ignore case 缩写</span><br><span class="line">   :set is边输入边显示匹配结果，is 是 incsearch 命令的缩写</span><br><span class="line">   :set hls高亮显示匹配结果，hls 为 highlight search 缩写</span><br><span class="line"></span><br><span class="line">   可将上述设置放入.vimrc 文件中，设为默认搜索设置</span><br><span class="line"></span><br><span class="line">   :set noic nois nohls将取消上述设置</span><br><span class="line"></span><br><span class="line">   :noh暂时取消高亮显示，不会影响下次高亮显示匹配结果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   2、vim 多文件查找方法</span><br><span class="line"></span><br><span class="line">   正常模式下使用 :vim 或 :vimgrep 命令执行多文件搜索</span><br><span class="line"></span><br><span class="line">   搜索的时候涉及到选取文件问题，这里主要用到 * 作为通配符</span><br><span class="line">   ** 表示文件夹及子文件夹下的所有文件</span><br><span class="line"></span><br><span class="line">   搜索 love 关键词</span><br><span class="line">   :vim/love/*当前文件夹下的所有文件</span><br><span class="line">   :vim/love/**当前文件夹及子目录下的所有文件</span><br><span class="line">   :vim/love/**/*.php当前文件夹及子目录下的所有 php 文件</span><br><span class="line">   :vim/love/*.php aa/**/*.php当前文件夹下的 php 文件和 aa 目录及子目录下的 php 文件</span><br><span class="line"></span><br><span class="line">   使用 ** 和 * 可任意组合出想要搜索的文件</span><br><span class="line"></span><br><span class="line">   :cw查看搜索结果</span><br><span class="line">   :ccl关闭搜索结果</span><br><span class="line">   :cn查找下一个</span><br><span class="line">   :cp查找上一个</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   3、vim 单文件替换方法</span><br><span class="line"></span><br><span class="line">   单文件中使用 :s 命令进行替换操作</span><br><span class="line"></span><br><span class="line">   替换操作会涉及几个常用的标记</span><br><span class="line"><span class="meta">   %</span><span class="bash"> 所有行  g 单行内所有匹配项  i 忽略大小写  c  确认是否替换</span></span><br><span class="line"></span><br><span class="line">   关键词 old 替换为 new</span><br><span class="line">   :s/old/new将光标所在行第一个 old 替换为 new</span><br><span class="line">   :s/old/new/g将光标所在行所有 old 替换为 new</span><br><span class="line">   :%s/old/new/gc全文执行替换,询问是否替换</span><br><span class="line">   :3,10s/old/new/gic将第3行到第10行内容替换，忽略大小写，且每个询问是否替换</span><br><span class="line"></span><br><span class="line">   g i c 可自由组合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. vim 多文件操作</span><br><span class="line">设置vim中默认使用选择缓冲区寄存器 “*：</span><br><span class="line"></span><br><span class="line">set clipboard = unnamed</span><br><span class="line">则可以直接通过y,p和系统选择缓冲区进行数据交换。</span><br><span class="line"></span><br><span class="line">Vimer们对高效的追求永无止境。还有其他更好地方法吗？</span><br><span class="line"></span><br><span class="line">你可能想到了，vim寄存器。对，使用vim寄存器 “+p 粘贴即可。根本不用考虑是否自动缩进，是否paste模式，直接原文传递！:</span><br><span class="line"></span><br><span class="line">"+p</span><br><span class="line">要说vim寄存器，就要从vim文件间的复制粘贴说起。</span><br><span class="line"></span><br><span class="line">Vim中，若要复制当前行，普通模式下按 yy 即可，在要粘贴的地方按 p 。这是vim将复制内容保存到了自己的寄存器中的缘故。如果在其他地方执行yy，新的内容将覆盖掉原寄存器中内容。如果想保存原寄存器中内容而同时增加新 的内容呢？这时就要在yy前增加标签了。标签以双引号开始，跟着的是标签名称，可以是数字0-9，也可以是26个字母，然后就是复制操作，这样就把复制内 容保存到该标签寄存器里。通过下面命令显示所有寄存器内容：:</span><br><span class="line"></span><br><span class="line">:reg</span><br><span class="line">其中注意两个特殊的寄存器：”* 和 “+。这两个寄存器是和系统相通的，前者关联系统选择缓冲区，后者关联系统剪切板。通过它们可以和其他程序进行数据交换。</span><br><span class="line"></span><br><span class="line">备注：</span><br><span class="line">若寄存器列表里无”* 或 “+ 寄存器，则可能是由于没有安装vim的图形界面所致。Debian/Ubuntu下可以通过安装vim-gnome解决。</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install vim-gnome</span></span><br><span class="line">选择缓冲区和系统剪切板啥子区别？让我们继续研究。</span><br><span class="line"></span><br><span class="line">选择缓冲区和剪切板</span><br><span class="line">不同于Windows，Linux系统里存在两个剪切板：一个叫做选择缓冲区(X11 selection buffer)，另一个才是剪切板(clipboard)。</span><br><span class="line"></span><br><span class="line">选择缓冲区是实时的，当使用鼠标或键盘选择内容时，内容已经存在于选择缓冲区了，这或许就是选择缓冲区的由来吧。</span><br><span class="line"></span><br><span class="line">使用下面的命令查看选择缓冲区的内容：:</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> xclip -out</span></span><br><span class="line">如果没有xclip命令，Debian/Ubuntu下可以通过如下命令安装：:</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install xclip</span></span><br><span class="line">可以使用鼠标中键或键入Shift+Insert来粘贴选择缓冲区的内容。但对于有些GUI程序，比如gedit，只能通过鼠标中键调用选择缓冲区的内容，使用Shift+Insert的话，调用的是剪切板的内容。</span><br><span class="line"></span><br><span class="line">剪切板和Windows的剪切板类似，在选择文字内容后，执行Ctrl + c或在菜单里选择‘复制’的话，这时内容才存放到剪切板里。</span><br><span class="line"></span><br><span class="line">使用下面的命令查看剪切板的内容：:</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> xclip -out -sel clipboard</span></span><br><span class="line">而使用剪切板的内容，则是Ctrl+v。 但在有些情况下，比如gnome-terminal，不能直接使用Ctrl+c，Ctrl+v，这时就要用Shift+Ctrl+c，Shift+Ctrl+v代替。</span><br><span class="line"></span><br><span class="line">原格式粘贴</span><br><span class="line">好了，了解了选择缓冲区和剪切板，下面就是实现保留格式粘贴的完美解决方案：</span><br></pre></td></tr></table></figure></code></pre><h2 id="vim文件间复制粘贴的完美方案，文件传输的中转使用选择缓冲区。"><a href="#vim文件间复制粘贴的完美方案，文件传输的中转使用选择缓冲区。" class="headerlink" title="vim文件间复制粘贴的完美方案，文件传输的中转使用选择缓冲区。"></a>vim文件间复制粘贴的完美方案，文件传输的中转使用选择缓冲区。</h2><ol><li><p><strong>vim 编辑多个文件<code>:vsplit   :sp 水平分割 垂直切分窗口  Ctrl+6  两文件间的切换</code></strong></p><ul><li><p>在终端里输入<br>vim file1 file2 … filen便可以打开所有想要打开的文件</p></li><li><p>vim已经启动<br>输入     :<code>e  filelocation like  : e /etc/nginx.conf</code><br>可以再打开一个文件，并且此时vim里会显示出file文件的内容。</p></li><li><p>同时显示多个文件：<br>:sp         //水平切分窗口<br>:vsplit     //垂直切分窗口</p></li><li><p>Ctrl+6  //两文件间的切换<br>:bn      //下一个文件<br>:bp      //上一个文件<br>:ls       //列出打开的文件，带编号<br>:b1~n  //切换至第n个文件<br>对于用(v)split在多个窗格中打开的文件，这种方法只会在当前窗格中切换不同的文件。</p></li><li><p>在窗格间切换的方法<br>Ctrl+w+方向键——切换到前／下／上／后一个窗格<br>Ctrl+w+h/j/k/l ——同上<br>Ctrl+ww——依次向后切换到下一个窗格中</p></li></ul></li><li><p>多文件复制粘贴使用寄存器</p><ul><li>+y3y 复制三行</li><li>+p  粘贴  gp最后一行</li></ul></li><li><p>who |wc -l  5人同时登陆在线  last<br>tail -f catalina.out 打印log</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">方案一：</span><br><span class="line">选择文本内容</span><br><span class="line">vim普通模式下按 “*p 将选择缓冲区中内容粘贴进来</span><br><span class="line">方案二：</span><br><span class="line">复制文件内容</span><br><span class="line">vim普通模式下按 “+ p 将剪切板内容粘贴进来</span><br></pre></td></tr></table></figure></li></ol><h2 id="注意git配置windows-amp-unix-macos-之间差异"><a href="#注意git配置windows-amp-unix-macos-之间差异" class="headerlink" title="注意git配置windows&amp; unix(macos) 之间差异"></a>注意git配置windows&amp; unix(macos) 之间差异</h2><p>1.Git设置</p><p>git config –global core.autocrlf false<br>git config –global core.safecrlf true</p><p>2.AutoCRLF提交时转换为LF，检出时转换为CRLF<br>git config –global core.autocrlf true</p>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>事务的隔离级别</title>
      <link href="2017/05/11/Transaction-Isolation-ACID/"/>
      <url>2017/05/11/Transaction-Isolation-ACID/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul><li>ACID指数据库事务正确执行的四个基本要素分为原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。一个支持事务（Transaction）的数据库，必需要具有这四种特性，否则在事务过程（Transaction processing）当中无法保证数据的正确性，交易过程极可能达不到交易方的要求</li><li>数据库事务的隔离级别有4种，由低到高分别为Read uncommitted 、Read committed 、Repeatable read 、Serializable 。而且，在事务的并发操作中可能会出现脏读，不可重复读，幻读。下面通过事例一一阐述它们的概念与联系。</li></ul><a id="more"></a><h2 id="Read-uncommitted"><a href="#Read-uncommitted" class="headerlink" title="Read uncommitted"></a>Read uncommitted</h2><p>读未提交，顾名思义，就是一个事务可以读取另一个未提交事务的数据。</p><p>事例：老板要给程序员发工资，程序员的工资是3.6万/月。但是发工资时老板不小心按错了数字，按成3.9万/月，该钱已经打到程序员的户口，但是事务还没有提交，就在这时，程序员去查看自己这个月的工资，发现比往常多了3千元，以为涨工资了非常高兴。但是老板及时发现了不对，马上回滚差点就提交了的事务，将数字改成3.6万再提交。</p><p>分析：实际程序员这个月的工资还是3.6万，但是程序员看到的是3.9万。他看到的是老板还没提交事务时的数据。这就是脏读。</p><p>那怎么解决脏读呢？Read committed！读提交，能解决脏读问题。</p><h2 id="Read-committed"><a href="#Read-committed" class="headerlink" title="Read committed"></a>Read committed</h2><p>读提交，顾名思义，就是一个事务要等另一个事务提交后才能读取数据。</p><p>事例：程序员拿着信用卡去享受生活（卡里当然是只有3.6万），当他埋单时（程序员事务开启），收费系统事先检测到他的卡里有3.6万，就在这个时候！！程序员的妻子要把钱全部转出充当家用，并提交。当收费系统准备扣款时，再检测卡里的金额，发现已经没钱了（第二次检测金额当然要等待妻子转出金额事务提交完）。程序员就会很郁闷，明明卡里是有钱的…</p><p>分析：这就是读提交，若有事务对数据进行更新（UPDATE）操作时，读操作事务要等待这个更新操作事务提交后才能读取数据，可以解决脏读问题。但在这个事例中，出现了一个事务范围内两个相同的查询却返回了不同数据，这就是不可重复读。</p><p>那怎么解决可能的不可重复读问题？Repeatable read ！</p><h2 id="Repeatable-read"><a href="#Repeatable-read" class="headerlink" title="Repeatable read"></a>Repeatable read</h2><p>重复读，就是在开始读取数据（事务开启）时，不再允许修改操作</p><p>事例：程序员拿着信用卡去享受生活（卡里当然是只有3.6万），当他埋单时（事务开启，不允许其他事务的UPDATE修改操作），收费系统事先检测到他的卡里有3.6万。这个时候他的妻子不能转出金额了。接下来收费系统就可以扣款了。</p><p>分析：重复读可以解决不可重复读问题。写到这里，应该明白的一点就是，不可重复读对应的是修改，即UPDATE操作。但是可能还会有幻读问题。因为幻读问题对应的是插入INSERT操作，而不是UPDATE操作。</p><p>什么时候会出现幻读？</p><p>事例：程序员某一天去消费，花了2千元，然后他的妻子去查看他今天的消费记录（全表扫描FTS，妻子事务开启），看到确实是花了2千元，就在这个时候，程序员花了1万买了一部电脑，即新增INSERT了一条消费记录，并提交。当妻子打印程序员的消费记录清单时（妻子事务提交），发现花了1.2万元，似乎出现了幻觉，这就是幻读。</p><p>那怎么解决幻读问题？Serializable！</p><h2 id="Serializable-序列化"><a href="#Serializable-序列化" class="headerlink" title="Serializable 序列化"></a>Serializable 序列化</h2><p>Serializable 是最高的事务隔离级别，在该级别下，事务串行化顺序执行，可以避免脏读、不可重复读与幻读。但是这种事务隔离级别效率低下，比较耗数据库性能，一般不使用。</p><p>值得一提的是：大多数数据库默认的事务隔离级别是Read committed，比如Sql Server , Oracle。MySQL的默认隔离级别是Repeatable read。</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT Manual</title>
      <link href="2017/03/28/Git-Manual/"/>
      <url>2017/03/28/Git-Manual/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul><li>常用 Git 命令清单。几个专用名词的译名如下。</li><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库<a id="more"></a></li></ul><h1 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line">// 新建一个目录，将其初始化为Git代码库</span><br><span class="line">$ git init --bare [project-name]</span><br><span class="line"></span><br><span class="line">// 下载一个项目和它的整个代码历史</span><br><span class="line">$ git clone [url]</span><br></pre></td></tr></table></figure><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-28/5617535.jpg" alt></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>Git的设置文件为<code>.gitconfig</code>，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line">// 编辑Git配置文件</span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line">// 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure><h1 id="查看3种状态"><a href="#查看3种状态" class="headerlink" title="查看3种状态"></a>查看3种状态</h1><ul><li>工作区：项目所在目录</li><li>暂存态：add 到暂存区</li><li>仓库：commit 到仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">//objets</span><br><span class="line">[git@localhost .git]$ find /home/git/jd.git/.git/objects/ -type f</span><br><span class="line">/home/git/jd.git/.git/objects/ce/a2a9038c107da69ce2222aeb0b47f83df7c1a0</span><br><span class="line">/home/git/jd.git/.git/objects/bf/6399354dd8bd0538549b9dd254ffe48843c6bf</span><br><span class="line">/home/git/jd.git/.git/objects/7f/55fc6e3fcc69a0cc36a290b671a9a60ff1ee7b</span><br><span class="line"></span><br><span class="line">//HEAD</span><br><span class="line">[git@localhost .git]$ cat HEAD</span><br><span class="line">ref: refs/heads/master</span><br><span class="line"></span><br><span class="line">//master</span><br><span class="line">[git@localhost .git]$ cat refs/heads/master</span><br><span class="line">7f55fc6e3fcc69a0cc36a290b671a9a60ff1ee7b</span><br><span class="line"></span><br><span class="line">//commit</span><br><span class="line">[git@localhost .git]$ git cat-file commit 7f55</span><br><span class="line">tree bf6399354dd8bd0538549b9dd254ffe48843c6bf</span><br><span class="line">author yangqinghua &lt;yqh700@163.com&gt; 1491724859 +0800</span><br><span class="line">committer yangqinghua &lt;yqh700@163.com&gt; 1491724859 +0800</span><br><span class="line"></span><br><span class="line">is first commit</span><br><span class="line"></span><br><span class="line">//tree</span><br><span class="line">[git@localhost .git]$ git ls-tree bf63</span><br><span class="line">100644 blob cea2a9038c107da69ce2222aeb0b47f83df7c1a0    main.java</span><br><span class="line"></span><br><span class="line">//blob</span><br><span class="line">[git@localhost .git]$ git show cea2</span><br><span class="line">this is a java file</span><br><span class="line"></span><br><span class="line">//hash</span><br><span class="line">[git@localhost jd.git]$ git hash-object main.java</span><br><span class="line">cea2a9038c107da69ce2222aeb0b47f83df7c1a0</span><br></pre></td></tr></table></figure><h1 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 添加指定文件到暂存区</span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line">// 添加指定目录到暂存区，包括子目录</span><br><span class="line">$ git add [dir]</span><br><span class="line"></span><br><span class="line">// 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line">// 添加每个变化前，都会要求确认</span><br><span class="line">// 对于同一个文件的多处变化，可以实现分次提交</span><br><span class="line">$ git add -p</span><br><span class="line"></span><br><span class="line">// 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"></span><br><span class="line">// 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"></span><br><span class="line">// 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h1 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 提交暂存区到仓库区</span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line">// 提交暂存区的指定文件到仓库区</span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line">// 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line">// 提交时显示所有diff信息</span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line">// 使用一次新的commit，替代上一次提交</span><br><span class="line">// 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line">// 重做上一次commit，并包括指定文件的新变化</span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">// 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line">// 列出所有远程分支</span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line">// 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line">// 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line">// 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"></span><br><span class="line">// 新建一个分支，指向指定commit</span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"></span><br><span class="line">// 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line">// 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"></span><br><span class="line">// 切换到上一个分支</span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line">// 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line">// 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line">// 选择一个commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line">// 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line">// 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line">// 新建一个tag在当前commit</span><br><span class="line">$ git tag [tag]</span><br><span class="line"></span><br><span class="line">// 新建一个tag在指定commit</span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"></span><br><span class="line">// 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"></span><br><span class="line">// 删除远程tag</span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"></span><br><span class="line">// 查看tag信息</span><br><span class="line">$ git show [tag]</span><br><span class="line"></span><br><span class="line">// 提交指定tag</span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"></span><br><span class="line">// 提交所有tag</span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line">// 新建一个分支，指向某个tag</span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h1 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">// 显示有变更的文件</span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line">// 显示当前分支的版本历史</span><br><span class="line">$ git log</span><br><span class="line"></span><br><span class="line">// 显示commit历史，以及每次commit发生变更的文件</span><br><span class="line">$ git log --stat</span><br><span class="line"></span><br><span class="line">// 搜索提交历史，根据关键词</span><br><span class="line">$ git log -S [keyword]</span><br><span class="line"></span><br><span class="line">// 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class="line">$ git log [tag] HEAD --pretty=format:%s</span><br><span class="line"></span><br><span class="line">// 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class="line">$ git log [tag] HEAD --grep feature</span><br><span class="line"></span><br><span class="line">// 显示某个文件的版本历史，包括文件改名</span><br><span class="line">$ git log --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"></span><br><span class="line">// 显示指定文件相关的每一次diff</span><br><span class="line">$ git log -p [file]</span><br><span class="line"></span><br><span class="line">// 显示过去5次提交</span><br><span class="line">$ git log -5 --pretty --oneline</span><br><span class="line"></span><br><span class="line">// 显示所有提交过的用户，按提交次数排序</span><br><span class="line">$ git shortlog -sn</span><br><span class="line"></span><br><span class="line">// 显示指定文件是什么人在什么时间修改过</span><br><span class="line">$ git blame [file]</span><br><span class="line"></span><br><span class="line">// 显示暂存区和工作区的差异</span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line">// 显示暂存区和上一个commit的差异</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"></span><br><span class="line">// 显示工作区与当前分支最新commit之间的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line">// 显示两次提交之间的差异</span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"></span><br><span class="line">// 显示今天你写了多少行代码</span><br><span class="line">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class="line"></span><br><span class="line">// 显示某次提交的元数据和内容变化</span><br><span class="line">$ git show [commit]</span><br><span class="line"></span><br><span class="line">// 显示某次提交发生变化的文件</span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"></span><br><span class="line">// 显示某次提交时，某个文件的内容</span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"></span><br><span class="line">// 显示当前分支的最近几次提交</span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h1 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 下载远程仓库的所有变动</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line">// 显示所有远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line">// 显示某个远程仓库的信息</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line">// 增加一个新的远程仓库，并命名</span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line">// 取回远程仓库的变化，并与本地分支合并</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line">// 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line">// 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line">// 推送所有分支到远程仓库</span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><h1 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line">// 恢复某个commit的指定文件到暂存区和工作区</span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line">// 恢复暂存区的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line">// 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"></span><br><span class="line">// 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="line">$ git reset --hard</span><br><span class="line"></span><br><span class="line">// 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"></span><br><span class="line">// 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"></span><br><span class="line">// 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"></span><br><span class="line">// 新建一个commit，用来撤销指定commit</span><br><span class="line">// 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="line">$ git revert [commit]</span><br><span class="line"></span><br><span class="line">// 暂时将未提交的变化移除，稍后再移入</span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 生成一个可供发布的压缩包</span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure><h1 id="Set-up-GitHub-push-with-SSH-keys"><a href="#Set-up-GitHub-push-with-SSH-keys" class="headerlink" title="Set up GitHub push with SSH keys"></a>Set up GitHub push with SSH keys</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Create a repo. Make sure there is at least one file in it (even just the README) Generate ssh key:</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C "your_email@example.com"</span><br><span class="line">Copy the contents of the file ~/.ssh/id_rsa.pub to your SSH keys in your GitHub account settings. Test SSH key:</span><br><span class="line"></span><br><span class="line">ssh -T git@github.com</span><br><span class="line">clone the repo:</span><br><span class="line">git clone git://github.com/username/your-repository</span><br><span class="line">Now cd to your git clone folder and do:</span><br><span class="line"></span><br><span class="line">git remote set-url origin git@github.com:username/your-repository.git</span><br><span class="line">Now try editing a file (try the README) and then do:</span><br><span class="line"></span><br><span class="line">git add -A</span><br><span class="line">git commit -am "my update msg"</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/zeng6325998/article/details/109320301?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242" target="_blank" rel="noopener">git rebase教程</a></li><li><a href="https://blog.csdn.net/u010176097/article/details/96875148" target="_blank" rel="noopener">git rebase push commit</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashMap</title>
      <link href="2017/03/20/HashMapAndSSM/"/>
      <url>2017/03/20/HashMapAndSSM/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="HashMap的JDK-源码注释"><a href="#HashMap的JDK-源码注释" class="headerlink" title="HashMap的JDK 源码注释"></a>HashMap的JDK 源码注释</h2><ol><li>基于Map接口实现、允许null键/值、非同步、不保证有序(比如插入的顺序)、也不保证序不随时间变化。</li><li>Capacity就是bucket的大小，Load factor就是bucket填满程度的最大比例。如果对迭代性能要求很高的话不要把capacity设置过大，也不要把load factor设置过小。当bucket中的entries的数目大于capacity*load factor时就需要调整bucket的大小为当前的2倍。</li></ol><a id="more"></a><ol start="3"><li><p>put函数的实现</p><pre><code>对key的hashCode()做hash，然后再计算index;如果没碰撞直接放到bucket里；如果碰撞了，以链表的形式存在buckets后；如果碰撞导致链表过长(大于等于TREEIFY_THRESHOLD)，就把链表转换成红黑树；如果节点已经存在就替换old value(保证key的唯一性)如果bucket满了(超过load factor*current capacity)，就要resize。</code></pre></li><li><p>get函数的实现</p><pre><code>bucket里的第一个节点，直接命中；如果有冲突，则通过key.equals(k)去查找对应的entry若为树，则在树中通过key.equals(k)查找，O(logn)；若为链表，则在链表中通过key.equals(k)查找，O(n)。</code></pre></li><li><p>Hashmap的原理</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过hash的方法，通过put和get存储和获取对象。存储对象时，我们将K/V传给put方法时，它调用hashCode计算hash从而得到bucket位置，进一步存储，HashMap会根据当前bucket的占用情况自动调整容量(超过Load Facotr则resize为原来的2倍)。获取对象时，我们将K传给get，它调用hashCode计算hash从而得到bucket位置，并进一步调用equals()方法确定键值对。如果发生碰撞的时候，Hashmap通过链表将产生碰撞冲突的元素组织起来，在Java 8中，如果一个bucket中碰撞冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。</span><br></pre></td></tr></table></figure></li></ol><ul><li>什么时候会使用HashMap？他有什么特点？</li><li>你知道HashMap的工作原理吗？</li><li>你知道get和put的原理吗？</li><li>equals()和hashCode()的都有什么作用？</li><li>你知道hash的实现吗？为什么要这样实现？</li><li>如果HashMap的大小超过了负载因子(load factor)定义的容量，怎么办？</li></ul><h2 id="HashMap-的总结归纳"><a href="#HashMap-的总结归纳" class="headerlink" title="HashMap 的总结归纳"></a>HashMap 的总结归纳</h2><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-11/46599362.jpg" alt></p><h2 id="集合框架schema"><a href="#集合框架schema" class="headerlink" title="集合框架schema"></a>集合框架schema</h2><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-20/23337435.jpg" alt><br>SpringMVC的处理流程</p><hr><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-20/66747192.jpg" alt></p><h2 id="SpringMVC-的处理流程和ssm整合"><a href="#SpringMVC-的处理流程和ssm整合" class="headerlink" title="SpringMVC 的处理流程和ssm整合"></a>SpringMVC 的处理流程和ssm整合</h2><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-11/81747139.jpg" alt><br>struts2 的流程图</p><hr><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-20/29168157.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> hashmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 反向代理和负载均衡</title>
      <link href="2016/08/16/Nginx01/"/>
      <url>2016/08/16/Nginx01/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="http://tengine.taobao.org/book/" target="_blank" rel="noopener">阿里tengine参考手册</a></p><ol><li>实现源码安装nginx 并且伪装服务器信息</li><li>配置负载均衡和反向代理tomcat默认200并发,nginx 50K web服务器并发提高tomcat应用服务器的访问体验</li><li>实现lvs + keeplived 高可用心跳vrrp协议 (未实现)</li></ol><a id="more"></a><h2 id="添加centos-阿里云repo"><a href="#添加centos-阿里云repo" class="headerlink" title="添加centos 阿里云repo"></a>添加centos 阿里云repo</h2><ul><li>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</li><li><code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</code></li><li>yum clean all</li><li>yum makecache</li><li>先安装nginx依赖库 <code>yum -y install pcre zlib gcc-c++ openssl</code></li></ul><h2 id="编译安装nginx"><a href="#编译安装nginx" class="headerlink" title="编译安装nginx"></a>编译安装nginx</h2><ul><li><a href="https://nginx.org/download/nginx-1.12.1.tar.gz" target="_blank" rel="noopener">官网下载最新stable 稳定版本的nginx源码安装包</a></li><li>修改nginx 的版本和server_name 伪装防止网络攻击</li></ul><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-16/13225024.jpg" alt></p><ul><li>具体操作步骤<ol><li>先解压 tar xvf nginx-1.12.1.tar.gz</li><li>进入目录 cd nginx-1.12.1/src 修改三个源码文件 <code>nginx.h</code> <code>ngx_http_header_filter_module.c ``ngx_http_special_response.c</code></li><li>find / name  <code>nginx.h</code> 找到后  直接编辑文件</li></ol></li></ul><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-16/83843159.jpg" alt></p><ul><li>然后编译安装前 先<code>yum install 依赖库gcc pcre zlib openssl</code> 服务器统一放到mkdir -p  /usr/local/server/这个目录下</li><li><strong><code>chown root. /usr/local/sbin/nginx</code>   <code>chmod u+s /usr/local/sbin/nginx</code>将文件赋予root权限才能开启1024以下端口</strong></li></ul><ul><li><p>配置nginx.conf 在nginx/sbin/nginx -t 测试配置文件是否正确</p><ol><li>nginx -s reload 重新加载配置不重启</li><li>nginx -s stop</li></ol></li><li><p>配置tomcat 服务器 修改端口号 域名  和配置文件对应 实现反向代理和负载均衡</p></li><li><p>开放防火墙端口规则<code>vi /etc/sysconfig/iptables</code> 开放对应端口号</p></li><li><p>然后修改本机hosts文件127.0.0.1 对应域名 最后访问<a href="http://www.goo.co.jp" target="_blank" rel="noopener">www.goo.co.jp</a> ,基本功能实现图</p></li></ul><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-16/17224896.jpg" alt></p><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-16/17127966.jpg" alt></p><ul><li>配置文件如下</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/server/nginx \</span><br><span class="line">--pid-path=/var/run/nginx/nginx.pid \</span><br><span class="line">--lock-path=/var/lock/nginx.lock \</span><br><span class="line">--error-log-path=/var/log/nginx/error.log \</span><br><span class="line">--http-log-path=/var/log/nginx/access.log \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--http-client-body-temp-path=/var/temp/nginx/client \</span><br><span class="line">--http-proxy-temp-path=/var/temp/nginx/proxy \</span><br><span class="line">--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</span><br><span class="line">--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</span><br><span class="line">--http-scgi-temp-path=/var/temp/nginx/scgi</span><br><span class="line">注意：启动nginx之前，上边将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录</span><br><span class="line">[root@localhost sbin]# mkdir /var/temp/nginx/client -p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">error_log  logs/error.log;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">    #                  '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">    #                  '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line"></span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    server_tokens  off;  # 隐藏版本号</span><br><span class="line"></span><br><span class="line">client_max_body_size 100m;</span><br><span class="line">#注意存在文件上传的接口需要配置 `client_max_body_size 100m;` 默认是1m;</span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen      80;</span><br><span class="line">        server_name     www.test1.com;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html-test1;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen      80;</span><br><span class="line">        server_name  www.test.com;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html-test;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html81;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    upstream goo&#123;</span><br><span class="line"></span><br><span class="line">        server 192.168.140.128:8011;</span><br><span class="line">        server 192.168.140.128:8012 weight=3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">       server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.goo.co.jp;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass  http://goo;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    upstream yandex&#123;</span><br><span class="line"></span><br><span class="line">        server 192.168.140.128:8080;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">       server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.yandex.com;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass  http://yandex;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig: - 85 15</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description: nginx is a World Wide Web server. It is used to serve</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source <span class="keyword">function</span> library.</span></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Check that networking is up.</span></span><br><span class="line">[ "$NETWORKING" = "no" ] &amp;&amp; exit 0</span><br><span class="line"></span><br><span class="line">nginx="/usr/local/nginx/tengine-2.2.3/sbin/nginx"</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE="/usr/local/nginx/tengine-2.2.3/conf/nginx.conf"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span></span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># make required directories</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   user=`nginx -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:"</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">       <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">           value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span></span><br><span class="line"><span class="meta">#</span><span class="bash">           <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">               <span class="comment"># echo "creating" $value</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">               mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">           <span class="keyword">fi</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">       <span class="keyword">fi</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="keyword">done</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line"><span class="meta">#</span><span class="bash">    make_dirs</span></span><br><span class="line">    echo -n $"Starting $prog: "</span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $"Stopping $prog: "</span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $"Reloading $prog: "</span><br><span class="line"><span class="meta">#</span><span class="bash">  -HUP是nginx平滑重启参数</span></span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    echo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configtest() &#123;</span><br><span class="line"><span class="meta">  $</span><span class="bash">nginx -t -c <span class="variable">$NGINX_CONF_FILE</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case "$1" in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        echo $"Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><ul><li><p>正向代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  正向代理发生在 client 端，用户能感知到的，并且是用户主动发起的代理。</span><br><span class="line"></span><br><span class="line">比如：翻墙。</span><br><span class="line">我们不能访问外网，但是可以访问代理服务器，然后代理服务器帮我们从外网中获取数据。但是在使用之前，用户往往需要主动在client端配置代理。</span><br><span class="line"></span><br><span class="line">黑客为了隐藏身份，用的就是正向代理。</span><br><span class="line"></span><br><span class="line">|客户端+代理服务器|--&gt;|目标服务器|</span><br></pre></td></tr></table></figure></li><li><p>反向代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">反向代理发生在 server端，从用户角度看是不知道发生了代理的（这个只有服务器工程师才知道）。</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">用户访问 服务器A，服务器A就给用户返回了数据。</span><br><span class="line">但是服务器A上其实并没有数据，它是偷偷从服务器B上获取数据，然后再返回给用户的。</span><br><span class="line">这个过程是在 server 端发生的，用户并不知道（只有服务器运维人员才知道）。</span><br><span class="line"></span><br><span class="line">|客户端|--&gt;|代理服务器+目标服务器|</span><br></pre></td></tr></table></figure></li><li><p>负载均衡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">负载均衡是反向代理的一种运用。</span><br><span class="line">客户端访问服务器，服务器会把请求分发给其它多个不同的服务器（即反向代理），从而减轻了单个服务器处理海量请求的压力，不会出现崩溃。</span><br><span class="line"></span><br><span class="line">做了反向代理才能实现负载均衡。负载均衡是做反向代理的目的之一。</span><br><span class="line">反向代理，是有把请求转发的能力，这个是基础</span><br><span class="line">负载均衡，是把请求转发到不同的服务器上，均衡各个服务器</span><br></pre></td></tr></table></figure></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.digitalocean.com/community/tools/nginx" target="_blank" rel="noopener">nginx 在线配置生成</a></li><li><a href="https://segmentfault.com/a/1190000012549192" target="_blank" rel="noopener">正向代理和反向代理</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-Master-Slave-Sync</title>
      <link href="2016/05/12/MySQL-Master-Slave-Sync/"/>
      <url>2016/05/12/MySQL-Master-Slave-Sync/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>TODO_LIST</strong></p><ol><li><p>springmvc 的servlet启动参数 关系</p></li><li><p>整理笔记上线到网上blog</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">springmvc的servlet 开机启动配置</span><br><span class="line">load-on-startup标记容器是否在启动的时候实例化并调用其init()方法的优先级。</span><br><span class="line">它的值表示servlet应该被载入的顺序</span><br><span class="line">当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；</span><br><span class="line">如果值小于0或未指定时，则表示只有在第一次请求的容器才在该servlet调用初始化函数</span><br><span class="line">正值越小，servlet的优先级越高，应用启动时就越先加载。</span><br><span class="line">值相同时，容器就会自己选择顺序来加载。</span><br><span class="line">SELECT NOW(); 选择现在的时间在redis 里面设置一个倒计时做秒单</span><br></pre></td></tr></table></figure></li><li><p>mysql读写分离的背景介绍</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">服务器压力大,需要读写分离,负载均衡</span><br><span class="line">主服务器通过写入bin-log文件实现[通过授权在master 服务器创建帐号]传递给slave 服务器读取</span><br><span class="line">从服务器读 bin-log 写</span><br><span class="line"> Relay_Master_Log_File: mysql-bin.000050</span><br><span class="line">     Slave_IO_Running: Yes</span><br><span class="line">    Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure></li></ol><h2 id="一-mysql-主从同步linux和window配置-前提概要实现主从同步-读写分离"><a href="#一-mysql-主从同步linux和window配置-前提概要实现主从同步-读写分离" class="headerlink" title="一 .mysql 主从同步linux和window配置(前提概要实现主从同步,读写分离)"></a>一 .mysql 主从同步linux和window配置(前提概要实现主从同步,读写分离)</h2><a id="more"></a><ol><li><p>配置mysql 允许远程访问</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先登录到mysql服务器 授予root 远程登录权限</span><br><span class="line">grant all on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;root&apos; with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></li><li><p>主从同步配置前提</p><ol><li>数据库版本要相同</li><li>数据库要相同taotao.sql</li><li>主从服务器id 要设置不同,可以跟ip 后缀相同好记忆</li></ol></li></ol><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf 配置文件</span><br><span class="line"></span><br><span class="line"># Replication Master Server (default)</span><br><span class="line"># binary logging is required for replication</span><br><span class="line"></span><br><span class="line">log-bin=mysql3306master-bin  名字可以自定义</span><br><span class="line">#log-bin=mysql-bin</span><br><span class="line"># binary logging format - mixed recommended</span><br><span class="line">配置需要同步的数据库名taotao,不配置默认同步所有</span><br><span class="line">binlog-do-db=taotao</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># required unique id between 1 and 2^32 - 1</span><br><span class="line"># defaults to 1 if master-host is not set</span><br><span class="line"># but will not function as a master if omitted</span><br><span class="line">server-id   = 203  一定要配置和ip 地址可以一致</span><br></pre></td></tr></table></figure></code></pre><ol start="3"><li><p>重启mysql 服务  service mysql restart</p></li><li><p>登录到 mysql -uroot -proot    show master status 查看主mysql 服务的状态信息</p></li><li><p>在主mysql 创建从slave账户并授权slave</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show master status;</span><br><span class="line">grant replication slave on *.* to &apos;slave01&apos;@&apos;%&apos; identified by &apos;123456&apos;; flush privileges;</span><br><span class="line">show master status;  显示master bin-log文件名和位置</span><br></pre></td></tr></table></figure></li><li><p>在从服务器中配置my.cnf 中配置server-id = 206  配置从服务器的ip相同</p></li><li><p>然后在slave 中执行</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO</span><br><span class="line">    master_host=&apos;192.168.25.203&apos;,</span><br><span class="line">    master_user=&apos;slave01&apos;,</span><br><span class="line">    master_password=&apos;123456&apos;,</span><br><span class="line">    master_port=3306,</span><br><span class="line">    master_log_file=&apos;mysql-bin.000002&apos;,//从主配置中查询出来的会变的</span><br><span class="line">    master_log_pos=420; //每次都会改变的</span><br><span class="line"></span><br><span class="line">start slave; //启动从库去请求主库</span><br><span class="line">show slave status;  //查看 slave_IO Runing  NO 下面要改debug成  yes</span><br><span class="line">    //出现错误 查看log从服务器的mysql.err.log 错误日志的uuid 一定要不重复</span><br><span class="line"></span><br><span class="line">查找到配置文件auto.cnf 中  server-uuid=uuid 改成不同的即可.</span><br><span class="line">service mysql restart</span><br><span class="line">stop slave;</span><br><span class="line">start slave; 开启从服务器请求同步  reset slave; 重置</span><br></pre></td></tr></table></figure></code></pre></li></ol><h2 id="二-mysql主从全部配置的流程"><a href="#二-mysql主从全部配置的流程" class="headerlink" title="二 .mysql主从全部配置的流程"></a>二 .mysql主从全部配置的流程</h2><ul><li>[前提: 注意主从之间的库名要一致,版本一致,server-id不同,见下图操作实例,和代码示例]</li></ul><ul><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/86344959.jpg" alt="mysql 架构原理实现图"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/81757402.jpg" alt="先配置主master服务器的my.cnf文件"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/14730145.jpg" alt="查看master服务器是否正常启动"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/76878922.jpg" alt="在naviacat中查看和处于安全考虑在master中添加slave01帐号和密码"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/64397842.jpg" alt="再次查看master服务器的状态"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/85699377.jpg" alt="从服务器slave的配置my.cnf中设置server-id需要和master的id不同"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/73406735.jpg" alt="在从服务器中执行以下语句"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-7-27/81016323.jpg" alt="查看是否实现主从同步的标志Yes"></p></li><li><p><img src="http://ot2hu9qoc.bkt.clouddn.com/%E7%8E%8B%E8%88%AA%E5%A8%81-MySQL-where%E6%9D%A1%E4%BB%B6%E5%89%96%E6%9E%90.jpg" alt="MySQL图解WHERE"></p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">-----------------1 前提配置----------------------------</span><br><span class="line">两边的mysql 服务器能够ping 通 并且 service iptables stop 或者开放端口</span><br><span class="line">setenforce 0</span><br><span class="line">master 主表的 ip 192.168.25.203</span><br><span class="line"></span><br><span class="line">slave  从表的ip  192.168.25.206</span><br><span class="line"></span><br><span class="line">-----------2  master配置的流程-----------</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf 配置文件</span><br><span class="line"></span><br><span class="line">    vim /etc/my.cnf 配置文件</span><br><span class="line"></span><br><span class="line">            # Replication Master Server (default)</span><br><span class="line">            # binary logging is required for replication</span><br><span class="line"></span><br><span class="line">            log-bin=mysql3306master-bin  //名字可以自定义</span><br><span class="line">            #log-bin=mysql-bin</span><br><span class="line">            # binary logging format - mixed recommended 防止主键重复</span><br><span class="line">            skip-name-resolve</span><br><span class="line">            binlog-do-db=taotao //配置需要同步的数据库名taotao,多个数据库就复制一行添加,不配置默认同步所有</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            # required unique id between 1 and 2^32 - 1</span><br><span class="line">            # defaults to 1 if master-host is not set</span><br><span class="line">            # but will not function as a master if omitted</span><br><span class="line">            server-id   = 203 // 一定要配置和ip 地址可以一致</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grant all on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;root&apos; with grant option;</span><br><span class="line">flush privileges;    //一定可以让远程访问,即navicat访问</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grant replication slave on *.* to &apos;slave01&apos;@&apos;%&apos; identified by &apos;123456&apos;; flush privileges;</span><br><span class="line">show master status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show master status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grant replication slave on *.* to &apos;slave01&apos;@&apos;%&apos; identified by &apos;123456&apos;; flush privileges;</span><br><span class="line">show master status;</span><br><span class="line"></span><br><span class="line">show GRANTS for &apos;slave01&apos;@&apos;%&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------3  从表的配置--------------</span><br><span class="line">        vim /etc/my.cnf 配置文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            # required unique id between 1 and 2^32 - 1</span><br><span class="line">            # defaults to 1 if master-host is not set</span><br><span class="line">            # but will not function as a master if omitted</span><br><span class="line">            server-id   = 206 // 一定要配置和ip 地址可以一致</span><br><span class="line">            skip-name-resolve #跳过dns检查</span><br><span class="line"></span><br><span class="line">grant all on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;root&apos; with grant option;</span><br><span class="line">flush privileges;    //一定可以让远程访问,即navicat访问</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">        master_host=&apos;192.168.25.203&apos;,</span><br><span class="line">        master_user=&apos;slave01&apos;,</span><br><span class="line">        master_password=&apos;123456&apos;,</span><br><span class="line">        master_port=3306,</span><br><span class="line">        master_log_file=&apos;mysql-bin.000049&apos;,</span><br><span class="line">        master_log_pos=107;</span><br><span class="line">    stop slave ;</span><br><span class="line">    start slave;</span><br><span class="line">    show slave status;</span><br><span class="line">    start slave;  reset slave;</span><br><span class="line"></span><br><span class="line">    window下面查看是否是一致 runing 如果不是就是uuid 错误</span><br><span class="line">    server-id=` ip 地址后面 `千万不要相同</span><br><span class="line">    授权给从slave一定可以访问主master 的mysql 表,注意后面的%</span><br><span class="line">        grant replication slave on *.* to &apos;slave01&apos;@&apos;%&apos; identified by &apos;123456&apos;; flush privileges;</span><br><span class="line">        show master status;</span><br><span class="line"></span><br><span class="line">    reset slave; 重置从服务器,配置到此结束,下面为具体解释</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        server-id=1        #数据库唯一ID，主从的标识号绝对不能重复。</span><br><span class="line">        log-bin=mysql-bin    #开启bin-log，并指定文件目录和文件名前缀</span><br><span class="line">        binlog-do-db=taotao  #需要同步的数据库。如果是多个同步库，就以此格式另写几行即可。如果不指明对某个具体库同步，就去掉此行，表示同步所有库（除了ignore忽略的库）。</span><br><span class="line">        binlog-ignore-db=mysql  #不同步mysql系统数据库。如果是多个不同步库，就以此格式另写几行；也可以在一行，中间逗号隔开。</span><br><span class="line">        sync_binlog = 1      ＃确保binlog日志写入后与硬盘同步</span><br><span class="line">        binlog_checksum = none  ＃跳过现有的采用checksum的事件，mysql5.6.5以后的版本中binlog_checksum=crc32,而低版本都是binlog_checksum=none</span><br><span class="line">        binlog_format = mixed   ＃bin-log日志文件格式，设置为MIXED可以防止主键重复。</span><br><span class="line"></span><br><span class="line">        skip-name-resolve   #不把IP地址解析为主机名; 与访问控制(mysql.user数据表)有关的检查全部通过IP地址行进。</span><br><span class="line"></span><br><span class="line">        mysql优化之--skip-name-resolve</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        同一IDC ,IDC内部有DNS服务器，对各服务器的IP做了反向解析，</span><br><span class="line">        但未对内网IP做反向解析，所以使用skip-name-resolve以后用内网地址向mysqlslap请求响应快了一半</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        涉及参数 --skip-name-resolve ,--skip-host-cache ,--skip-networking</span><br><span class="line"></span><br><span class="line">        当新的客户连接mysqld时，mysqld创建一个新的线程来处理请求。该线程先检查是否主机名在主机名缓存中。如果不在，线程试图解析主机名：</span><br><span class="line"></span><br><span class="line">        ·         如果操作系统支持线程安全gethostbyaddr_r ()和gethostbyname_r()调用，线程使用它们来执行主机名解析。</span><br><span class="line"></span><br><span class="line">        ·         如果操作系统不支持线程安全调用，线程锁定一个互斥体并调用gethostbyaddr()和gethostbyname()。在这种情况下，在第1个线程解锁互斥体前，没有其它线程可以解析不在主机名缓存中的主机名。</span><br><span class="line"></span><br><span class="line">        你可以用--skip-name-resolve选项启动mysqld来禁用DNS主机名查找。然而，在这种情况下，你只可以使用MySQL中的授权表中的IP号。</span><br><span class="line"></span><br><span class="line">        如果你有一个很慢的DNS和许多主机，你可以通过用--skip-name-resolve禁用DNS查找或增加HOST_CACHE_SIZE定义(默认值：128)并重新编译mysqld来提高性能。</span><br><span class="line"></span><br><span class="line">        你可以用--skip-host-cache选项启动服务器来禁用主机名缓存。要想清除主机名缓存，执行FLUSH HOSTS语句或执行mysqladmin flush-hosts命令。</span><br><span class="line"></span><br><span class="line">        如果你想要完全禁止TCP/IP连接，用--skip-networking选项启动mysqld。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        连接mysql时，都会向DNS做反向地址查询</span><br><span class="line">        只有等超时失败后，mysql才会响应客户端</span><br><span class="line">        等待解析的mysql进程都是 login状态</span><br></pre></td></tr></table></figure></code></pre></li></ul><h2 id="三-通过spring-配置文件和具体代码实现"><a href="#三-通过spring-配置文件和具体代码实现" class="headerlink" title="三 . 通过spring 配置文件和具体代码实现"></a>三 . 通过spring 配置文件和具体代码实现</h2><ul><li>通过spring AOP 动态切换datasource数据源和slow_query_log 慢查询日志记录</li><li>读[从slave服务器的配置],增删改[master服务器的配置]读写分离.</li></ul><ol><li>待续…中</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://ot2hu9qoc.bkt.clouddn.com/refman-5.7-en.a4.pdf" target="_blank" rel="noopener">MySQL Manual reference</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-Basic</title>
      <link href="2016/03/01/Redis-Basic/"/>
      <url>2016/03/01/Redis-Basic/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Redis-的数据结构"><a href="#Redis-的数据结构" class="headerlink" title=" Redis 的数据结构"></a> Redis 的数据结构</h2><ul><li><p>redis 是以 key-value 的存储系统，其中 value 支持五种数据类型。</p><ul><li>字符串（String）</li><li>哈希（hash）</li><li>字符串列表（list）</li><li>字符串集合（set）</li><li>有序字符串集合（sorted set）</li></ul></li><li><p>定义key的注意事项</p><ul><li>key 最好不超过1024个字节，否则会降低查询效率同时消耗更多的内存。</li><li>key 要做到见名知意，在项目中最好统一规范。</li></ul></li></ul><a id="more"></a><hr><h2 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a>字符串（String）</h2><ul><li>字符串是 Redis 中最基础的数据类型，它在 Redis 中是二进制安全的，这意味着 String 类型存入和取出的数据相同。在 Redis 中字符串的 value 最多可以容纳的数据长度是512M。</li></ul><hr><h3 id="存储-set"><a href="#存储-set" class="headerlink" title="存储 (set)"></a><strong>存储 (set)</strong></h3><p><code>set</code> <code>key</code> <code>value</code></p><ul><li>key 不存在则直接存储 。</li><li>key 存在则覆盖原值。</li><li>该操作总是响应 “OK”。</li></ul><hr><h3 id="读取-get"><a href="#读取-get" class="headerlink" title="读取 (get)"></a><strong>读取 (get)</strong></h3><p><code>get</code> <code>key</code></p><ul><li>如果 key 存在则返回 key 映射的 value 。</li><li>key 映射的不是字符串类型则报错 。</li><li>key 不存在则返回 <code>nil</code> 。</li></ul><hr><h3 id="删除-del"><a href="#删除-del" class="headerlink" title="删除 (del)"></a><strong>删除 (del)</strong></h3><p><code>del</code> <code>key</code></p><ul><li>key 存在则删除 key，并返回受影响的数量。</li><li>key 不存在则返回受影响的数量为 0 。</li></ul><hr><h3 id="递增-incr-递减-decr"><a href="#递增-incr-递减-decr" class="headerlink" title="递增(incr) 递减(decr)"></a><strong>递增(incr) 递减(decr)</strong></h3><p><code>incr</code> <code>key</code><br><code>decr</code> <code>key</code></p><ul><li>该操作将 key 的 value 递增或递减1。前提是 value 能转换成整型。</li><li>key 不存在则先存储 key 值为 0，再递增递减 。</li><li>value 是整型则正常递增递减 。</li><li>value 不是整型则报错。</li></ul><hr><h3 id="指定增量（incrby）减量-decrby"><a href="#指定增量（incrby）减量-decrby" class="headerlink" title="指定增量（incrby）减量(decrby)"></a><strong>指定增量（incrby）减量(decrby)</strong></h3><p><code>incrby</code> <code>key</code> <code>increment</code><br><code>decrby</code> <code>key</code> <code>decrement</code></p><ul><li>所有场景和响应与 <code>incr</code> 、<code>decr</code> 命令一致。<strong>需要指定增量</strong>。</li></ul><hr><h3 id="追加（append）"><a href="#追加（append）" class="headerlink" title="追加（append）"></a><strong>追加（append）</strong></h3><p><code>append</code> <code>key</code> <code>value</code></p><ul><li>该操作一律将值作为字符串在末尾追加 <code>value</code>。</li><li>key 存在，在末尾追加字符串。</li><li>key 不存在，直接存储 value。</li><li>值是整数，将值作为字符串在末尾追加 <code>value</code>。</li></ul><h2 id="哈希（hash）"><a href="#哈希（hash）" class="headerlink" title="哈希（hash）"></a>哈希（hash）</h2><ul><li><p>Redis 中的 Hash 类型可以看成是具有 String key 和 String value 的 map 容器。该类型非常适合存储对象信息。例如用户的 username password 等。每一个 Hash 可以存储 4294967295 个键值对</p><h3 id="存储（hset）"><a href="#存储（hset）" class="headerlink" title="存储（hset）"></a><strong>存储（hset）</strong></h3><p><code>hset</code> <code>key</code> <code>field</code> <code>value</code></p></li><li><p>field 不存在，直接存储。</p></li><li><p>field 存在，执行覆盖操作。</p></li></ul><hr><h3 id="存储多个键值对（hmset）"><a href="#存储多个键值对（hmset）" class="headerlink" title="存储多个键值对（hmset）"></a><strong>存储多个键值对（hmset）</strong></h3><p><code>hmset</code> <code>key</code> <code>field</code> <code>value</code> <code>field</code> <code>value</code> <code>...</code></p><ul><li>field 不存在，直接存储。</li><li>field 存在，执行覆盖操作。</li></ul><hr><h3 id="读取（hget）"><a href="#读取（hget）" class="headerlink" title="读取（hget）"></a><strong>读取（hget）</strong></h3><p><code>hget</code> <code>key</code> <code>field</code></p><ul><li>field 不存在，正常读取 field 对应的值。</li><li>field 存在，返回 <code>nil</code>。</li></ul><hr><h3 id="读取多个值（hmget）"><a href="#读取多个值（hmget）" class="headerlink" title="读取多个值（hmget）"></a><strong>读取多个值（hmget）</strong></h3><p><code>hmget</code> <code>key</code> <code>field</code> <code>field</code> <code>...</code></p><ul><li>field 不存在，正常读取 field 对应的值。</li><li>field 存在，返回 <code>nil</code> 。</li></ul><hr><h3 id="读取全部（hgetall）"><a href="#读取全部（hgetall）" class="headerlink" title="读取全部（hgetall）"></a><strong>读取全部（hgetall）</strong></h3><p><code>hgetall</code> <code>key</code></p><hr><h3 id="删除（hdel）"><a href="#删除（hdel）" class="headerlink" title="删除（hdel）"></a><strong>删除（hdel）</strong></h3><p><code>hdel</code> <code>key</code> <code>field</code> <code>field</code> <code>...</code></p><ul><li>该命令可以同时删除多个字段，返回值是被删除字段的数量。</li><li>field 存在，删除字段，返回被删除字段的数量。</li><li>field 不存在， 返回0。</li></ul><hr><h3 id="增量（hincrby）"><a href="#增量（hincrby）" class="headerlink" title="增量（hincrby）"></a><strong>增量（hincrby）</strong></h3><p><code>hincrby</code> <code>key</code> <code>field</code> <code>numberValue</code></p><ul><li>为整型值增加指定的增量，可以指定增量为负数实现减量</li></ul><hr><h3 id="判断字段是否存在（hexists）"><a href="#判断字段是否存在（hexists）" class="headerlink" title="判断字段是否存在（hexists）"></a><strong>判断字段是否存在（hexists）</strong></h3><p><code>hexists</code> <code>key</code> <code>field</code></p><ul><li>field 存在，返回 1。</li><li>field 不存在，返回 0。</li></ul><hr><h3 id="获取指定-key-中字段个数（hlen）"><a href="#获取指定-key-中字段个数（hlen）" class="headerlink" title="获取指定 key 中字段个数（hlen）"></a><strong>获取指定 key 中字段个数（hlen）</strong></h3><p><code>hlen</code> <code>key</code></p><hr><h3 id="获取指定-key-所有的字段（hkeys）"><a href="#获取指定-key-所有的字段（hkeys）" class="headerlink" title="获取指定 key 所有的字段（hkeys）"></a><strong>获取指定 key 所有的字段（hkeys）</strong></h3><p><code>hkeys</code> <code>key</code></p><hr><h3 id="获取指定-key-所有字段的值（hvals）"><a href="#获取指定-key-所有字段的值（hvals）" class="headerlink" title="获取指定 key 所有字段的值（hvals）"></a><strong>获取指定 key 所有字段的值（hvals）</strong></h3><p><code>hvals</code> <code>key</code></p><hr><h2 id="列表（list）"><a href="#列表（list）" class="headerlink" title="列表（list）"></a><strong>列表（list）</strong></h2><ul><li><p>在 Redis 中，List 类型是按照插入顺序排序的字符串链表。和数据结构中的普通链表一样，我们可以在其头部（left）和尾部（right）添加新的元素。在插入时，如果该键并不存在，Redis 将为该键创建一个新的链表。如果链表中的所有元素都被移除，那么该键也将会被从数据库中移除。List 中可以包含的最大元素数量是 4294967295。</p></li><li><p>从元素插入和删除的效率角度来看，如果我们是在链表的两头插入或删除，这将是非常高效的操作，即使链表中已经存储了百万条记录，该操作也可以在常量时间内完成。如果插入或删除操作是作用于链表中间，那将会是非常低效的。</p></li></ul><hr><h3 id="两端添加（lpush）（rpush）"><a href="#两端添加（lpush）（rpush）" class="headerlink" title="两端添加（lpush）（rpush）"></a><strong>两端添加（lpush）（rpush）</strong></h3><ul><li>在指定的 key 映射的 list 头部或尾部插入一个或多个 value 。如果 key 不存在，该命令在插入之前先创建一个空链表，之后再插入数据。插入成功，返回插入的数量。<br><code>lpush</code> <code>key</code> <code>value</code> <code>value</code> <code>...</code><br><code>rpush</code> <code>key</code> <code>value</code> <code>value</code> <code>...</code></li></ul><hr><h3 id="读取列表（lrange）"><a href="#读取列表（lrange）" class="headerlink" title="读取列表（lrange）"></a><strong>读取列表（lrange）</strong></h3><p><code>lrange</code> <code>key</code> <code>startIndex</code> <code>endIndex</code></p><ul><li>从链表中读取从 startIndex（包含） 到 endIndex（包含） 的元素。索引从 0 开始，endIndex 可以为负数，-1 表示尾部的元素，-2 表示倒数第二个元素，以此类推。</li></ul><hr><h3 id="两端弹出（lpop）（rpop）"><a href="#两端弹出（lpop）（rpop）" class="headerlink" title="两端弹出（lpop）（rpop）"></a><strong>两端弹出（lpop）（rpop）</strong></h3><p><code>lpop</code> <code>key</code><br><code>rpop</code> <code>key</code></p><ul><li>从链表的头部或尾部删除元素，如果 key 存在，则返回被删除的元素，如果 key 不存在，则返回 nil</li></ul><hr><h3 id="获取列表中元素的个数（llen）"><a href="#获取列表中元素的个数（llen）" class="headerlink" title="获取列表中元素的个数（llen）"></a><strong>获取列表中元素的个数（llen）</strong></h3><p><code>llen</code> <code>key</code></p><hr><h3 id="两端插入（仅当list存在）（lpushx）（rpushx）"><a href="#两端插入（仅当list存在）（lpushx）（rpushx）" class="headerlink" title="两端插入（仅当list存在）（lpushx）（rpushx）"></a><strong>两端插入（仅当list存在）（lpushx）（rpushx）</strong></h3><p><code>lpushx</code> <code>key</code> <code>value</code><br><code>rpushx</code> <code>key</code> <code>value</code></p><ul><li>仅当 List 存在时，向列表两端插入<strong>一个</strong>元素，如果 List 不存在则不插入。</li></ul><hr><h3 id="删除（lrem）"><a href="#删除（lrem）" class="headerlink" title="删除（lrem）"></a><strong>删除（lrem）</strong></h3><p><code>lrem</code> <code>key</code> <code>count</code> <code>value</code></p><ul><li>从 key 中删除 count 个值为 value 的元素。如果 count 大于 0，从头部开始查找 count 个值为 value 的元素。如果 count 小于 0，则从尾部开始遍历。如果 count 等于 0，则删除所有值等于 value 的元素。</li></ul><hr><h3 id="修改元素（lset）"><a href="#修改元素（lset）" class="headerlink" title="修改元素（lset）"></a><strong>修改元素（lset）</strong></h3><p><code>lset</code> <code>key</code> <code>index</code> <code>value</code></p><ul><li>设置链表中索引为 index 的元素值。0 代表头部元素，-1 代表尾部元素，索引不存在则报错。</li></ul><hr><h3 id="插入元素（linsert）"><a href="#插入元素（linsert）" class="headerlink" title="插入元素（linsert）"></a><strong>插入元素（linsert）</strong></h3><p><code>linsert</code> <code>key</code> (<code>before</code> | <code>after</code>) <code>element</code> <code>value</code></p><ul><li>在第一个 element 元素之前或者之后插入值为 velue 的元素。</li></ul><hr><h3 id="弹出-添加"><a href="#弹出-添加" class="headerlink" title="弹出/添加"></a><strong>弹出/添加</strong></h3><p><code>rpoplpush</code> <code>resource</code> <code>destination</code><br>…</p><ul><li>从源链表的尾部弹出元素并添加到目标链表的头部，目标链表可以与源链表相同。</li></ul><hr><h2 id="集合（set）"><a href="#集合（set）" class="headerlink" title=" 集合（set）"></a> 集合（set）</h2><ul><li>在 Redis 中，我们可以将 Set 类型看作没有排序的字符集合，和 List 类型一样，我们也可以在该类型的数据值上执行添加、删除或判断某一元素是否存在等操作。这些操作的时间复杂度为 O(1)，即常量时间内完成。Set 可包含的最大元素数量是 4294967295。</li><li>和List集合不同的是，<font style="color:black; background:yellow">Set集合中不允许出现重复的元素</font>。相比 List 类型，Set 类型在功能上还存在着一些非常重要的特性，即在服务端完成多个 Set 之间的聚合计算操作，如 unions、intersections、defferences。由于这些操作均在服务端完成，因此效率极高，而且也节省了大量的网络 IO 开销。</li></ul><hr><h3 id="存储（sadd）"><a href="#存储（sadd）" class="headerlink" title="存储（sadd）"></a><strong>存储（sadd）</strong></h3><p><code>sadd</code> <code>key</code> <code>value</code> <code>value</code> <code>...</code></p><ul><li>向 Set 中存储一个或多个值，如果要添加的值以及存在该 Set 中则不会重复添加。</li></ul><hr><h3 id="删除（srem）"><a href="#删除（srem）" class="headerlink" title="删除（srem）"></a><strong>删除（srem）</strong></h3><p><code>srem</code> <code>key</code> <code>value</code> <code>value</code> <code>...</code></p><ul><li>删除指定 key 中的一个或多个元素，如果值不存在不作任何操作。</li></ul><hr><h3 id="读取（smembers）"><a href="#读取（smembers）" class="headerlink" title="读取（smembers）"></a><strong>读取（smembers）</strong></h3><p><code>smembers</code> <code>key</code></p><ul><li>获取该 key 中的所有元素。</li></ul><hr><h3 id="判断元素是否存在（sismember）"><a href="#判断元素是否存在（sismember）" class="headerlink" title="判断元素是否存在（sismember）"></a><strong>判断元素是否存在（sismember）</strong></h3><p><code>sismember</code> <code>key</code> <code>element</code></p><ul><li>判断 element 是否存在于 key 中，存在返回 1，不存在返回 0，或者 key 不存在也返回 0。</li></ul><hr><h3 id="差集运算（sdiff）"><a href="#差集运算（sdiff）" class="headerlink" title="差集运算（sdiff）"></a><strong>差集运算（sdiff）</strong></h3><p><code>sdiff</code> <code>key1</code> <code>key2</code> <code>key3</code> <code>...</code></p><ul><li>返回 key1 与后面的 key 的差集成员。</li></ul><hr><h3 id="交集运算（sinter）"><a href="#交集运算（sinter）" class="headerlink" title="交集运算（sinter）"></a><strong>交集运算（sinter）</strong></h3><p><code>sinter</code> <code>key1</code> <code>key2</code> <code>key3</code> <code>...</code></p><ul><li>返回所有 key 中的交集成员。</li></ul><hr><h3 id="并集运算（sunion）"><a href="#并集运算（sunion）" class="headerlink" title="并集运算（sunion）"></a><strong>并集运算（sunion）</strong></h3><p><code>kunion</code> <code>key1</code> <code>key2</code> <code>key3</code> <code>...</code></p><ul><li>获得所有 key 中的并集成员。</li></ul><hr><h3 id="获取元素数量（scard）"><a href="#获取元素数量（scard）" class="headerlink" title="获取元素数量（scard）"></a><strong>获取元素数量（scard）</strong></h3><p><code>scard</code> <code>key</code></p><hr><h3 id="随机获得元素（srandmember）"><a href="#随机获得元素（srandmember）" class="headerlink" title="随机获得元素（srandmember）"></a><strong>随机获得元素（srandmember）</strong></h3><p><code>sranmember</code> <code>key</code></p><hr><h3 id="存储差集（sdiffstore）、交集（sinterstore）和并集（sunionstore）"><a href="#存储差集（sdiffstore）、交集（sinterstore）和并集（sunionstore）" class="headerlink" title="存储差集（sdiffstore）、交集（sinterstore）和并集（sunionstore）"></a><strong>存储差集（sdiffstore）、交集（sinterstore）和并集（sunionstore）</strong></h3><p><code>sdiffstore</code> <code>destination</code> <code>key1</code> <code>key2</code> <code>...</code><br><code>sinterstore</code> <code>destination</code> <code>key1</code> <code>key2</code> <code>...</code><br><code>sunionstore</code> <code>destination</code> <code>key1</code> <code>key2</code> <code>...</code></p><ul><li>将差集、交集和并集的运行结果存储到 destination 中。</li></ul><hr><h2 id="有序集合（sortedset）"><a href="#有序集合（sortedset）" class="headerlink" title=" 有序集合（sortedset）"></a> 有序集合（sortedset）</h2><ul><li>Sorted-Set 和 Set 类型极为相似，它们都是字符串的集合，都不允许重复的成员出现在一个 Set 中。它们之间的主要差别是 Sorted-Set 中的每一个成员都会有一个分数（score）与之关联，Redis 正是通过分数来为集合中的成员进行从小到达的排序。尽管 Sorted-Set 中的成员必须是唯一的，但是分数（score）却是可以重复的。</li></ul><h3 id="存储（zadd）"><a href="#存储（zadd）" class="headerlink" title="存储（zadd）"></a><strong>存储（zadd）</strong></h3><p><code>zadd</code> <code>key</code> <code>score1</code> <code>member1</code> <code>score2</code> <code>member2</code> <code>...</code></p><ul><li>添加成员及成员分数到 key 中，如果该成员已经存在，则更新该成员的分数。</li></ul><hr><h3 id="获取分数（zscore）"><a href="#获取分数（zscore）" class="headerlink" title="获取分数（zscore）"></a><strong>获取分数（zscore）</strong></h3><p><code>zscore</code> <code>key</code> <code>member</code></p><ul><li>获得 member 的分数。</li></ul><hr><h3 id="获取集合数量（zcard）"><a href="#获取集合数量（zcard）" class="headerlink" title="获取集合数量（zcard）"></a><strong>获取集合数量（zcard）</strong></h3><p><code>zcard</code> <code>key</code></p><hr><h3 id="删除（zrem）"><a href="#删除（zrem）" class="headerlink" title="删除（zrem）"></a><strong>删除（zrem）</strong></h3><p><code>zrem</code> <code>key</code> <code>member1</code> <code>member2</code> <code>...</code></p><ul><li>删除一个或多个成员。</li></ul><hr><h3 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a><strong>范围查询</strong></h3><p><code>zrange</code> <code>key</code> <code>start</code> <code>end</code> <code>[withscores]</code></p><ul><li>获取索引从 start（包含） 到 end（包含） 的成员，end 可以是负数，-1 表示最后一个，-2 表示倒数第二个，以此类推。</li><li>[widthscores]指示返回的成员具有分数。</li></ul><hr><h3 id="降序查询（zrevrange）"><a href="#降序查询（zrevrange）" class="headerlink" title="降序查询（zrevrange）"></a><strong>降序查询（zrevrange）</strong></h3><p><code>zrevrange</code> <code>key</code> <code>start</code> <code>end</code> <code>[withscore]</code></p><ul><li>查询 start 到 end 的成员并反转，实现降序查询。</li></ul><hr><h3 id="按照排名范围删除（zremrangebyrank）"><a href="#按照排名范围删除（zremrangebyrank）" class="headerlink" title="按照排名范围删除（zremrangebyrank）"></a><strong>按照排名范围删除（zremrangebyrank）</strong></h3><p><code>zremrangebyrank</code> <code>key</code> <code>start</code> <code>end</code></p><ul><li>删除集合中索引从 start（包含） 到 end（包含） 的元素。</li></ul><hr><h3 id="按照分数删除（zremrangebyscore）"><a href="#按照分数删除（zremrangebyscore）" class="headerlink" title="按照分数删除（zremrangebyscore）"></a><strong>按照分数删除（zremrangebyscore）</strong></h3><p><code>zremrangebyscore</code> <code>key</code> <code>minScore</code> <code>maxScore</code></p><ul><li>删除集合中分数从 minScore（包含） 到 maxScore（包含） 的元素。</li></ul><hr><h3 id="根据分数范围查询（zrangebyscore）"><a href="#根据分数范围查询（zrangebyscore）" class="headerlink" title="根据分数范围查询（zrangebyscore）"></a><strong>根据分数范围查询（zrangebyscore）</strong></h3><p><code>zrangebyscore</code> <code>key</code> <code>minScore</code> <code>maxScore</code> <code>[withscore]</code> <code>[limit</code> <code>offset</code> <code>count]</code></p><ul><li>根据指定的分数范围查找成员，可以用 limit 指定显示记录的条数。</li></ul><hr><h3 id="为指定成员增加分数（zincrby）"><a href="#为指定成员增加分数（zincrby）" class="headerlink" title="为指定成员增加分数（zincrby）"></a><strong>为指定成员增加分数（zincrby）</strong></h3><p><code>zincrby</code> <code>key</code> <code>increment</code> <code>member</code></p><ul><li>为指定的成员增加指定的分数，返回值是更新后的分数。</li></ul><hr><h3 id="获取指定分数区间的成员数量（zcount）"><a href="#获取指定分数区间的成员数量（zcount）" class="headerlink" title="获取指定分数区间的成员数量（zcount）"></a><strong>获取指定分数区间的成员数量（zcount）</strong></h3><p><code>zcount</code> <code>key</code> <code>minScore</code> <code>maxScore</code></p><ul><li>获得分数在 minScire（包含） 到 maxScore（包含） 的成员数量。</li></ul><hr><h3 id="获取成员排名（zrank）（zrevrange）"><a href="#获取成员排名（zrank）（zrevrange）" class="headerlink" title="获取成员排名（zrank）（zrevrange）"></a><strong>获取成员排名（zrank）（zrevrange）</strong></h3><p><code>zrank</code> <code>key</code> <code>member</code><br><code>zrevrank</code> <code>key</code> <code>member</code></p><ul><li>获取成员的升序或降序排名，排名从0开始计算。</li></ul><hr><h2 id="Keys-的通用操作"><a href="#Keys-的通用操作" class="headerlink" title="Keys 的通用操作"></a>Keys 的通用操作</h2><h3 id="查找-Key（keys）"><a href="#查找-Key（keys）" class="headerlink" title="查找 Key（keys）"></a><strong>查找 Key（keys）</strong></h3><p><code>keys</code> <code>pattern</code></p><ul><li>模糊查找 Key 。<strong>*** 表示任意一个或多个字符，</strong>？**表示任意一个字符。</li></ul><hr><h3 id="判断-Key-是否存在（exists）"><a href="#判断-Key-是否存在（exists）" class="headerlink" title="判断 Key 是否存在（exists）"></a><strong>判断 Key 是否存在（exists）</strong></h3><p><code>exists</code> <code>key</code></p><ul><li>判断指定的 Key 是否存在，存在返回 1，不存在返回 0。</li></ul><hr><h3 id="重命名-Key（rename）"><a href="#重命名-Key（rename）" class="headerlink" title="重命名 Key（rename）"></a><strong>重命名 Key（rename）</strong></h3><p><code>rename</code> <code>key</code> <code>newkey</code></p><hr><h3 id="设置-Key-的有效时间（expire）"><a href="#设置-Key-的有效时间（expire）" class="headerlink" title="设置 Key 的有效时间（expire）"></a><strong>设置 Key 的有效时间（expire）</strong></h3><p><code>expire</code> <code>key</code> <code>time</code></p><ul><li>为 Key 设置有效时间，过期后将从内存中清除。time 的单位为：秒。</li></ul><hr><h3 id="获取-Key-的有效时间（ttl）"><a href="#获取-Key-的有效时间（ttl）" class="headerlink" title="获取 Key 的有效时间（ttl）"></a><strong>获取 Key 的有效时间（ttl）</strong></h3><p><code>ttl</code> <code>key</code></p><ul><li>获取 Key 的有效时间，如果没有设置则返回 -1，如果 key 不存在则返回 -2。</li></ul><hr><h3 id="获取-Key-的类型（type）"><a href="#获取-Key-的类型（type）" class="headerlink" title="获取 Key 的类型（type）"></a><strong>获取 Key 的类型（type）</strong></h3><p><code>type</code> <code>key</code></p><ul><li>获取 Key 的类型，如果 Key 不存在返回None。</li><li><a href="https://blog.csdn.net/qq_33996921/article/details/105226259" target="_blank" rel="noopener">redis源码string分析</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debug-Eclipse</title>
      <link href="2015/08/05/Debug-Eclipse/"/>
      <url>2015/08/05/Debug-Eclipse/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>##Debug 调试快捷键<br><font color="red">好记性不如烂笔头,debug不论在学习还是工作中都能很好的分析和解决问题</font></p><a id="more"></a><ul><li>F5<br>  <code>单步调试，遇到方法时跳入</code></li><li>F6<br>  <code>单步调试，遇到方法时跳过</code></li><li>F7<br>  <code>单步调试，遇到方法时跳出</code></li><li>F8<br>  <code>直接执行，遇到断点时暂停</code><br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/98352807.jpg" alt></li></ul><p>##视图</p><ul><li>变量视图<br>  <code>监视/修改变量的值</code><br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/20113069.jpg" alt></li></ul><ul><li><p>断点视图<br>  <code>断点列表</code><br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/28292010.jpg" alt></p></li><li><p>表达式视图<br>  <code>计算表达式的值</code><br>  <code>快捷键：Ctrl + Shift + I ，选中代码编辑区中的表达式按快捷键</code></p><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/27737463.jpg" alt></p></li></ul><p>##条件断点</p><p>断点满足条件时触发</p><ul><li><p>设置<br>  <code>选中需要条件触发的断点 &gt;&gt; 右键 &gt;&gt; Breakpoint Properties 打开属性断点属性窗口</code></p><p>  <code>勾选 &quot;Hit count&quot;，输入循环次数</code><br>  <code>勾选 &quot;Conditional&quot;，输入条件表达式</code></p><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/44775967.jpg" alt></p></li></ul><p>##springmvc的小误区</p><ul><li><p>请求参数的方法<br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/85811164.jpg" alt></p></li><li><p>错误和正确的写法<br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/49918100.jpg" alt></p></li><li><p>根源是: eclipse的debug模式会自动给java类反射对象注入参数</p></li></ul><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-5/34979265.jpg" alt></p><p>##maven debug 源码关联添加<br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-7/36374310.jpg" alt></p><ul><li>Go to Help &gt; Install New Software .. 安装插件<br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-7/36051185.jpg" alt></li><li><a href="http://ifedorenko.github.com/m2e-extras/" target="_blank" rel="noopener">http://ifedorenko.github.com/m2e-extras/</a></li><li>to search for the links. After installing this plugin I was finally able to debug the source code of dependencies.</li></ul><ul><li>最后实现查看</li><li>springmvc的的DispatcherServlet 的doDispatcher方法执行<br><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-7/38348793.jpg" alt></li><li>具体的业务逻辑代码 service 的执行</li></ul><p><img src="http://ot2hu9qoc.bkt.clouddn.com/17-8-7/47074681.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2015/07/01/Hello-World/"/>
      <url>2015/07/01/Hello-World/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旅の終り</title>
      <link href="2015/06/24/%E6%97%85%E3%81%AE%E7%B5%82%E3%82%8F%E3%82%8A/"/>
      <url>2015/06/24/%E6%97%85%E3%81%AE%E7%B5%82%E3%82%8F%E3%82%8A/</url>
      
        <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="旅の終り"><a href="#旅の終り" class="headerlink" title="旅の終り"></a>旅の終り</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">涙なら、三水に「戻る」と書くのに</span><br><span class="line">僕の目から、心から、体から</span><br><span class="line">零れ落ちてゆくのは</span><br><span class="line">もう戻らないものばかり</span><br><span class="line">どうな悲しい結末の物語より</span><br><span class="line">いつまで立っても終われない物語のほうが悲しい</span><br><span class="line">宙ぶらりんになったエピソード</span><br><span class="line">回収しきれない伏線</span><br><span class="line">黙って伝ったままのは</span><br><span class="line">僕のフラグ</span><br><span class="line">出来損ないの声じゃなくて</span><br><span class="line">それでもよかったな</span><br><span class="line">あなたの夜は終わった</span><br><span class="line">だから僕の夜も終わった</span><br><span class="line">あなたの白い指は</span><br><span class="line">夜気に暖かったなぁ</span><br><span class="line">触れた星と星の名前</span><br><span class="line">なんだったっげなぁ</span><br><span class="line">戻る場所がなくなった</span><br><span class="line">行ける場所ができた</span><br><span class="line">新しい夜が訪れる前に</span><br><span class="line">朝になる</span><br><span class="line">滲んだ涙の意味を探すより</span><br><span class="line">今は次のページを開こうと思う</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="https://i.loli.net/2021/02/21/T1Wzj5NtHBZL4rV.jpg" alt="最后heima20170902220622.jpg"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=909585280&auto=1&height=66"></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
